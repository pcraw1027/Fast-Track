{
  "scan_info": {
    "app_path": "/root/workspace/Fast-Track",
    "rails_version": "6.1.7.10",
    "security_warnings": 13,
    "start_time": "2025-08-30 17:03:18 +0100",
    "end_time": "2025-08-30 17:03:26 +0100",
    "duration": 7.77642417,
    "checks_performed": [
      "BasicAuth",
      "BasicAuthTimingAttack",
      "CSRFTokenForgeryCVE",
      "ContentTag",
      "CookieSerialization",
      "CreateWith",
      "CrossSiteScripting",
      "DefaultRoutes",
      "Deserialize",
      "DetailedExceptions",
      "DigestDoS",
      "DynamicFinders",
      "EOLRails",
      "EOLRuby",
      "EscapeFunction",
      "Evaluation",
      "Execute",
      "FileAccess",
      "FileDisclosure",
      "FilterSkipping",
      "ForgerySetting",
      "HeaderDoS",
      "I18nXSS",
      "JRubyXML",
      "JSONEncoding",
      "JSONEntityEscape",
      "JSONParsing",
      "LinkTo",
      "LinkToHref",
      "MailTo",
      "MassAssignment",
      "MimeTypeDoS",
      "ModelAttrAccessible",
      "ModelAttributes",
      "ModelSerialize",
      "NestedAttributes",
      "NestedAttributesBypass",
      "NumberToCurrency",
      "PageCachingCVE",
      "Pathname",
      "PermitAttributes",
      "QuoteTableName",
      "Ransack",
      "Redirect",
      "RegexDoS",
      "Render",
      "RenderDoS",
      "RenderInline",
      "ResponseSplitting",
      "RouteDoS",
      "SQL",
      "SQLCVEs",
      "SSLVerify",
      "SafeBufferManipulation",
      "SanitizeConfigCve",
      "SanitizeMethods",
      "SelectTag",
      "SelectVulnerability",
      "Send",
      "SendFile",
      "SessionManipulation",
      "SessionSettings",
      "SimpleFormat",
      "SingleQuotes",
      "SkipBeforeFilter",
      "SprocketsPathTraversal",
      "StripTags",
      "SymbolDoSCVE",
      "TemplateInjection",
      "TranslateBug",
      "UnsafeReflection",
      "UnsafeReflectionMethods",
      "ValidationRegex",
      "VerbConfusion",
      "WeakRSAKey",
      "WithoutProtection",
      "XMLDoS",
      "YAMLParsing"
    ],
    "number_of_controllers": 48,
    "number_of_models": 41,
    "number_of_templates": 245,
    "ruby_version": "3.3.5",
    "brakeman_version": "7.1.0"
  },
  "warnings": [
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "1e643b1814be17b0bd95a5936069446f2341727a9204edeef21b48617c418330",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/users_controller.rb",
      "line": 54,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.require(:user).permit(:first_name, :last_name, :role, :status, :country, :postal_code)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "UsersController",
        "method": "user_params"
      },
      "user_input": ":role",
      "confidence": "Medium",
      "cwe_id": [
        915
      ]
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "32ac79cc4c8c0c85fb707d1464484e9f06d909006cb7517200c3ea7decbecdca",
      "check_name": "FileAccess",
      "message": "Model attribute used in file name",
      "file": "app/jobs/process_medium_job.rb",
      "line": 71,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.delete(Rails.public_path.join(\"uploads\", \"tmp\", File.basename((Medium.find(medium_id).file.path or Rails.root.join(\"tmp\", File.basename(Medium.find(medium_id).file.path)).to_s))))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProcessMediumJob",
        "method": "perform"
      },
      "user_input": "Medium.find(medium_id).file",
      "confidence": "Weak",
      "cwe_id": [
        22
      ]
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "4e7f4daca177e7cced32097f15f9a15f6f5fd135ef6a98c92b940a8db15a148a",
      "check_name": "FileAccess",
      "message": "Model attribute used in file name",
      "file": "app/jobs/process_medium_job.rb",
      "line": 35,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "File.open(Rails.root.join(\"tmp\", File.basename(Medium.find(medium_id).file.path)).to_s)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProcessMediumJob",
        "method": "perform"
      },
      "user_input": "Medium.find(medium_id).file",
      "confidence": "Weak",
      "cwe_id": [
        22
      ]
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "5bed60fcf0566077579c361d7147a3bab21c55bbe5854016170ed9bfa7d74910",
      "check_name": "FileAccess",
      "message": "Parameter value used in file name",
      "file": "app/controllers/api/v1/reviews_controller.rb",
      "line": 27,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "load(params[:product_id], \"Product\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::ReviewsController",
        "method": "get_product_reviews"
      },
      "user_input": "params[:product_id]",
      "confidence": "High",
      "cwe_id": [
        22
      ]
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "6d21f48dc42ffc7510509126d5a3495a3df4b5741c591e720eb551903aa0ab3b",
      "check_name": "FileAccess",
      "message": "Parameter value used in file name",
      "file": "app/controllers/api/v1/reviews_controller.rb",
      "line": 31,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "load(params[:company_id], \"Company\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::V1::ReviewsController",
        "method": "get_company_reviews"
      },
      "user_input": "params[:company_id]",
      "confidence": "High",
      "cwe_id": [
        22
      ]
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "79172f576c8c57bae22ec995cd65719c9e4dc02b4c64867ec5af28779f081bb9",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/raw_query_module.rb",
      "line": 32,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"            SELECT product_id, COUNT(*) AS scan_count\\n            FROM scans\\n            WHERE product_id IN (#{Scan.find_by_sql(\"          SELECT DISTINCT ON (barcode) *\\n          FROM scans\\n          WHERE user_id = #{ActiveRecord::Base.connection.quote(current_user_id)}\\n          AND product_exists = true\\n          ORDER BY barcode, created_at DESC\\n          LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish).map(&:product_id).compact.join(\",\")})\\n            GROUP BY product_id\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RawQueryModule",
        "method": "s(:self).my_scan_products"
      },
      "user_input": "Scan.find_by_sql(\"          SELECT DISTINCT ON (barcode) *\\n          FROM scans\\n          WHERE user_id = #{ActiveRecord::Base.connection.quote(current_user_id)}\\n          AND product_exists = true\\n          ORDER BY barcode, created_at DESC\\n          LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish).map(&:product_id)",
      "confidence": "High",
      "cwe_id": [
        89
      ]
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 105,
      "fingerprint": "9e796e7ed9a8d56e0c7f8f76d6cceb50eae44e330737974fd5f288a35a0d6843",
      "check_name": "PermitAttributes",
      "message": "Potentially dangerous key allowed for mass assignment",
      "file": "app/controllers/company_contact_types_controller.rb",
      "line": 71,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.require(:company_contact_type).permit(:role, :definition)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CompanyContactTypesController",
        "method": "company_contact_type_params"
      },
      "user_input": ":role",
      "confidence": "Medium",
      "cwe_id": [
        915
      ]
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "bc9bf841c490850a01057146998685436cc34a475ededd3ee1d6a898c867d78f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/raw_query_module.rb",
      "line": 117,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.exec_query(\"            SELECT product_id, COUNT(*) AS scan_count\\n            FROM scans\\n            WHERE product_id IN (#{ActiveRecord::Base.connection.select_values(\"        SELECT \\n          products.id\\n        FROM \\n          scans\\n        JOIN \\n          products ON products.id = scans.product_id\\n        GROUP BY \\n          products.id\\n        ORDER BY \\n          COUNT(scans.id) DESC\\n        LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish).join(\",\")})\\n            GROUP BY product_id\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RawQueryModule",
        "method": "s(:self).top_scan_products"
      },
      "user_input": "ActiveRecord::Base.connection.select_values(\"        SELECT \\n          products.id\\n        FROM \\n          scans\\n        JOIN \\n          products ON products.id = scans.product_id\\n        GROUP BY \\n          products.id\\n        ORDER BY \\n          COUNT(scans.id) DESC\\n        LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish).join(\",\")",
      "confidence": "Medium",
      "cwe_id": [
        89
      ]
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "bcb9868d55d6f891c96c123d1d6052d9ae94bea487ee887fe9273f390b1e7486",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/raw_query_module.rb",
      "line": 18,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Scan.find_by_sql(\"          SELECT DISTINCT ON (barcode) *\\n          FROM scans\\n          WHERE user_id = #{ActiveRecord::Base.connection.quote(current_user_id)}\\n          AND product_exists = true\\n          ORDER BY barcode, created_at DESC\\n          LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RawQueryModule",
        "method": "s(:self).my_scan_products"
      },
      "user_input": "((page.to_i - 1) * per_page.to_i)",
      "confidence": "Medium",
      "cwe_id": [
        89
      ]
    },
    {
      "warning_type": "Unmaintained Dependency",
      "warning_code": 120,
      "fingerprint": "d84924377155b41e094acae7404ec2e521629d86f97b0ff628e3d1b263f8101c",
      "check_name": "EOLRails",
      "message": "Support for Rails 6.1.7.10 ended on 2024-10-01",
      "file": "Gemfile.lock",
      "line": 477,
      "link": "https://brakemanscanner.org/docs/warning_types/unmaintained_dependency/",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "High",
      "cwe_id": [
        1104
      ]
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "deeeb9bdc9a593fe7a3545d53ca6f7ad47a1f14d85abccac8989f43c34123ca1",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/product_variants_controller.rb",
      "line": 50,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Medium.find(params[:medium_id]).mediaable.product, :status => :see_other, :notice => \"product image was successfully deleted.\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ProductVariantsController",
        "method": "destroy_media"
      },
      "user_input": "Medium.find(params[:medium_id]).mediaable.product",
      "confidence": "High",
      "cwe_id": [
        601
      ]
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "f9ffa092a615e405e1693efcf9bcdbb73d3b17a56404a673d94bcc2b73acd7c5",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/raw_query_module.rb",
      "line": 94,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.select_values(\"        SELECT \\n          products.id\\n        FROM \\n          scans\\n        JOIN \\n          products ON products.id = scans.product_id\\n        GROUP BY \\n          products.id\\n        ORDER BY \\n          COUNT(scans.id) DESC\\n        LIMIT #{per_page.to_i} OFFSET #{((page.to_i - 1) * per_page.to_i)}\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RawQueryModule",
        "method": "s(:self).top_scan_products"
      },
      "user_input": "((page.to_i - 1) * per_page.to_i)",
      "confidence": "Medium",
      "cwe_id": [
        89
      ]
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "fd79312ea98db981defe3f0b3fbe6caf397d243bb47874fd5abbf6b4aac5ef73",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/services/raw_query_module.rb",
      "line": 139,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"CASE #{values.each_with_index.map do\n \"WHEN #{attribute_key} = #{ActiveRecord::Base.connection.quote(v)} THEN #{i}\"\n end.join(\" \")} ELSE #{values.length} END\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "RawQueryModule",
        "method": "s(:self).unscoped_products_with_assoc"
      },
      "user_input": "values.each_with_index.map do\n \"WHEN #{attribute_key} = #{ActiveRecord::Base.connection.quote(v)} THEN #{i}\"\n end.join(\" \")",
      "confidence": "Medium",
      "cwe_id": [
        89
      ]
    }
  ],
  "ignored_warnings": [],
  "errors": [],
  "obsolete": []
}