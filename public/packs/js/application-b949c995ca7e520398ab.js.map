{"version":3,"file":"js/application-b949c995ca7e520398ab.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/channels sync _channel\\.js$","webpack:///./app/javascript/channels/index.js","webpack:///./app/javascript/controllers sync \\.js$","webpack:///./app/javascript/controllers/barcode_controller.js","webpack:///./app/javascript/controllers/company_select_controller.js","webpack:///./app/javascript/controllers/ind_cat_select_controller.js","webpack:///./app/javascript/controllers/index.js","webpack:///./app/javascript/controllers/person_select_controller.js","webpack:///./app/javascript/controllers/product_classification_controller.js","webpack:///./app/javascript/packs/application.js","webpack:///./node_modules/@hotwired/stimulus-webpack-helpers/dist/stimulus-webpack-helpers.js","webpack:///./node_modules/@hotwired/stimulus/dist/stimulus.js","webpack:///./node_modules/@nathanvda/cocoon/cocoon.js","webpack:///./node_modules/@rails/activestorage/app/assets/javascripts/activestorage.js","webpack:///./node_modules/@rails/ujs/lib/assets/compiled/rails-ujs.js","webpack:///./node_modules/jquery/dist/jquery.js","webpack:///./node_modules/stimulus/dist/stimulus.js","webpack:///./node_modules/stimulus/webpack-helpers.js","webpack:///./node_modules/tom-select/dist/js/tom-select.complete.js","webpack:///./node_modules/turbolinks/dist/turbolinks.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/application.js\");\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./app/javascript/channels sync recursive _channel\\\\.js$\";","// Load all the channels within this directory and all subdirectories.\n// Channel files must be named *_channel.js.\n\nconst channels = require.context('.', true, /_channel\\.js$/)\nchannels.keys().forEach(channels)\n","var map = {\n\t\"./barcode_controller.js\": \"./app/javascript/controllers/barcode_controller.js\",\n\t\"./company_select_controller.js\": \"./app/javascript/controllers/company_select_controller.js\",\n\t\"./ind_cat_select_controller.js\": \"./app/javascript/controllers/ind_cat_select_controller.js\",\n\t\"./index.js\": \"./app/javascript/controllers/index.js\",\n\t\"./person_select_controller.js\": \"./app/javascript/controllers/person_select_controller.js\",\n\t\"./product_classification_controller.js\": \"./app/javascript/controllers/product_classification_controller.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./app/javascript/controllers sync recursive \\\\.js$\";","import { Controller } from \"@hotwired/stimulus\"\r\n\r\nexport default class extends Controller {\r\n  static targets = [\"barcodeInput\", \"fileInput\", \"display\"]\r\n\r\n  async submitAdd(event) {\r\n    event.preventDefault();\r\n    const inp = document.getElementById(\"barcode\")\r\n    const barcode = inp.value;\r\n   \r\n    if (!barcode) return this.showError(\"Please enter barcode.\");\r\n    if (![6, 8, 12, 13].contains(barcode.length)) return this.showError(\"barcode must be 6, 8, 12, or 13 characters long, symbology UPC-E, EAN-8, UPC-A, or EAN-13.\");\r\n    const formData = new FormData();\r\n    formData.append(\"bit_record[barcode]\", barcode)\r\n    try {\r\n        const response = await fetch(\"/insert_barcode\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n          headers: {\r\n            \"Accept\": \"application/json\"\r\n          }\r\n        });\r\n  \r\n        const data = await response.json();\r\n  \r\n        if (Array.isArray(data.bit_records)) {\r\n          document.getElementById(\"barcode\").value = \"\";\r\n          data.bit_records.forEach(record => {\r\n            this.displayTarget.insertAdjacentHTML(\"afterbegin\", `\r\n               <tr>\r\n                <td>${record.bit_rec.barcode}</td>\r\n                <td>${record.bit_rec.status}</td>\r\n                <td>${record.bit_rec.source}</td>\r\n                <td>${record.bit_rec.user_id}</td>\r\n                <td>${this.formatDate(record.bit_rec.created_at)}</td>\r\n                <td>${record.message}</td>\r\n                <td><a style=\"background-color: transparent;\r\n                              border: 1px solid #8cc63f;\r\n                              border-radius: 15px;\r\n                              padding: 5px 20px 5px 20px;\r\n                              text-decoration: none;\"\r\n                              color: #333 !important;\r\n                              font-weight: 500;\r\n                  href=/product_capture_interface?barcode=${record.bit_rec.barcode} \r\n                  target=\"_blank\" >Add</a></td>\r\n              </tr>\r\n            `)\r\n          })\r\n        }\r\n  \r\n        if (data.error) this.showError(data.error)\r\n  \r\n      } catch (error) {\r\n        this.showError(\"An error occurred while uploading.\")\r\n        console.error(\"Upload failed\", error)\r\n      }\r\n  }\r\n\r\n  async handleLoad(event) {\r\n    event.preventDefault();\r\n\r\n    const file = document.getElementById(\"fileinput\").files[0]\r\n    if (!file) return this.showError(\"Please choose a file to load.\")\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"bit_record[file]\", file)\r\n\r\n    try {\r\n      const response = await fetch(\"/insert_barcode\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          \"Accept\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      const data = await response.json();\r\n    \r\n      if (Array.isArray(data.bit_records)) {\r\n        document.getElementById(\"fileinput\").value = \"\"\r\n        data.bit_records.forEach(record => {\r\n          this.displayTarget.insertAdjacentHTML(\"afterbegin\", `\r\n             <tr>\r\n              <td>${record.bit_rec.barcode}</td>\r\n              <td>${record.bit_rec.status}</td>\r\n              <td>${record.bit_rec.source}</td>\r\n              <td>${record.bit_rec.user_id}</td>\r\n              <td>${this.formatDate(record.bit_rec.created_at)}</td>\r\n              <td>${record.message}</td>\r\n            </tr>\r\n          `)\r\n        })\r\n      }\r\n\r\n      if (data.error) this.showError(data.error)\r\n\r\n    } catch (error) {\r\n      this.showError(\"An error occurred while uploading.\")\r\n      console.error(\"Upload failed\", error)\r\n    }\r\n  }\r\n\r\n  \r\n  showError(message) {\r\n    document.getElementById(\"barcode-error\").textContent = message\r\n    document.getElementById(\"barcode-error\").classList.remove(\"d-none\")\r\n    \r\n    setTimeout(() => {\r\n      document.getElementById(\"barcode-error\").classList.add(\"d-none\")\r\n      document.getElementById(\"barcode-error\").textContent = \"\"\r\n    }, 5000)\r\n  }\r\n\r\n  formatDate(timestamp) {\r\n    const date = new Date(timestamp);\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); \r\n    const year = date.getFullYear();\r\n    return `${month}/${day}/${year}`;\r\n  }\r\n  \r\n}\r\n","import { Controller } from \"stimulus\"\r\nimport TomSelect from \"tom-select\";\r\n\r\nexport default class extends Controller {\r\n  connect() {\r\n    if (this.selectInstance) return\r\n\r\n    this.selectInstance = new TomSelect(this.element, {\r\n        valueField: 'id',\r\n        labelField: 'name',\r\n        searchField: 'name',\r\n        create: (input) => {\r\n          return {\r\n            id: input,\r\n            name: input\r\n          };\r\n        },\r\n        //persist: false,\r\n        hideSelected: true,\r\n        placeholder: 'Search for a company',\r\n        load: (query, callback) => {\r\n          if (!query.length) return callback()\r\n          fetch(`/companies_search?q=${encodeURIComponent(query)}`)\r\n            .then(response => response.json())\r\n            .then(json => json.map((c)=>({id: c.id, name: `${c.id} - ${c.name}`})))\r\n            .then(res => callback(res))\r\n            .catch(() => callback())\r\n        },\r\n        onOptionAdd: function(value, data) {\r\n          if(document.getElementById('new_company_name')){\r\n            document.getElementById('new_company_name').value = value;\r\n          }\r\n        },\r\n        onItemAdd: function(value, item) {\r\n          console.log({value, item})\r\n          if (/^\\d+$/.test(value)) {\r\n            if(document.getElementById('new_company_name')){\r\n              document.getElementById('new_company_name').value = \"\";\r\n            }\r\n            \r\n          }\r\n        }\r\n      })\r\n      \r\n  }\r\n\r\n  disconnect() {\r\n    if (this.selectInstance) {\r\n      this.selectInstance.destroy()\r\n      this.selectInstance = null\r\n    }\r\n  }\r\n}\r\n","import { Controller } from \"stimulus\"\r\nimport TomSelect from \"tom-select\";\r\n\r\nexport default class extends Controller {\r\n  connect() {\r\n    if (this.selectInstance) return\r\n\r\n    this.selectInstance = new TomSelect(this.element, {\r\n        valueField: 'id',\r\n        labelField: 'title',\r\n        searchField: 'title',\r\n        create: false,\r\n        //persist: false,\r\n        hideSelected: true,\r\n        placeholder: 'Search for an industry category',\r\n        load: (query, callback) => {\r\n          if (!query.length) return callback()\r\n          fetch(`/industry_categories_search?q=${encodeURIComponent(query)}`)\r\n            .then(response => response.json())\r\n            .then(json => json.map((c)=>({id: c.id, title: `${c.category_code} - ${c.title}`})))\r\n            .then(res => callback(res))\r\n            .catch(() => callback())\r\n        },\r\n      })\r\n      \r\n  }\r\n\r\n  disconnect() {\r\n    if (this.selectInstance) {\r\n      this.selectInstance.destroy()\r\n      this.selectInstance = null\r\n    }\r\n  }\r\n}\r\n","// Load all Stimulus controllers\r\nimport { Application } from \"stimulus\"\r\nimport { definitionsFromContext } from \"stimulus/webpack-helpers\"\r\n\r\nconst application = Application.start()\r\nconst context = require.context(\".\", true, /\\.js$/)\r\napplication.load(definitionsFromContext(context))\r\n","import { Controller } from \"stimulus\"\r\nimport TomSelect from \"tom-select\"\r\n\r\nexport default class extends Controller {\r\n  static targets = [\r\n   \"personSelect\"\r\n  ]\r\n\r\n  connect() {\r\n    if (this.selectInstance) return\r\n    this.peopleCache = {}\r\n    this.selectInstance = new TomSelect(this.element, {\r\n      valueField: 'id',\r\n      labelField: 'first_name',\r\n      searchField: 'first_name',\r\n      maxOptions: 10,\r\n      loadThrottle: 300,\r\n      create: false,\r\n      hideSelected: true,\r\n      placeholder: 'Search for a person',\r\n\r\n      load: (query, callback) => {\r\n  \r\n        if (!query.length) return callback()\r\n        fetch(`/people_search?q=${encodeURIComponent(query)}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            this.peopleCache = {} \r\n            json.forEach(person => this.peopleCache[person.id] = person)\r\n            return json.map((person) => ({\r\n              id: person.id,\r\n              first_name: `${person.first_name} ${person.last_name} - ${person.email}`\r\n            }))\r\n          })\r\n          .then(res => callback(res))\r\n          .catch(() => callback())\r\n      },\r\n\r\n      onItemAdd: (value) => {\r\n        const person = this.peopleCache?.[value]\r\n        if (!person) return\r\n\r\n        // Populate the fields\r\n\r\n        const str = this.element.id\r\n        const idStr = str.replace(/_person_id$/, '');\r\n        \r\n        if(document.getElementById(`${idStr}_first_name`)){\r\n            document.getElementById(`${idStr}_first_name`).value = person.first_name;\r\n        }\r\n\r\n        if(document.getElementById(`${idStr}_middle_name`)){\r\n            document.getElementById(`${idStr}_middle_name`).value = person.middle_name;\r\n        }\r\n        \r\n        if(document.getElementById(`${idStr}_last_name`)){\r\n            document.getElementById(`${idStr}_last_name`).value = person.last_name;\r\n        }\r\n\r\n\r\n\r\n      \r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.selectInstance) {\r\n      this.selectInstance.destroy()\r\n      this.selectInstance = null\r\n    }\r\n  }\r\n}\r\n","import { Controller } from \"stimulus\"\r\nimport TomSelect from \"tom-select\"\r\n\r\nexport default class extends Controller {\r\n  static targets = [\"segment\", \"family\", \"klass\", \"brick\"]\r\n\r\n  connect() {\r\n    if (document.readyState === \"loading\") {\r\n      document.addEventListener(\"DOMContentLoaded\", () => this.initialize())\r\n    } else {\r\n      this.initialize()\r\n    }\r\n  }\r\n  \r\n  initialize() {\r\n    console.log(\"Initializing...\")\r\n  \r\n    if (!this.segmentSelect && this.hasSegmentTarget) {\r\n      this.segmentSelect = new TomSelect(this.segmentTarget, {\r\n        placeholder: \"Select a segment\",\r\n        onChange: () => this.updateFamilies()\r\n      })\r\n    }\r\n  \r\n    if (!this.familySelect && this.hasFamilyTarget) {\r\n      this.familySelect = new TomSelect(this.familyTarget, {\r\n        placeholder: \"Select a family\",\r\n        onChange: () => this.updateKlasses()\r\n      })\r\n    }\r\n  \r\n    if (!this.klassSelect && this.hasKlassTarget) {\r\n      this.klassSelect = new TomSelect(this.klassTarget, {\r\n        placeholder: \"Select a klass\",\r\n        onChange: () => this.updateBricks()\r\n      })\r\n    }\r\n  \r\n    if (!this.brickSelect && this.hasBrickTarget) {\r\n      this.brickSelect = new TomSelect(this.brickTarget, {\r\n        placeholder: \"Select a brick\"\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  async updateFamilies() {\r\n    console.log(\"updating family...\");\r\n    const segmentId = this.segmentTarget.value\r\n\r\n    if (!segmentId) {\r\n      this.familySelect.clearOptions()\r\n      return\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`/families_by_segment?segment_id=${segmentId}`)\r\n      const families = await response.json();\r\n      console.log(\"families\", families);\r\n      this.familySelect.clearOptions();\r\n     \r\n      families.forEach((family) => {\r\n        this.familySelect.addOption({\r\n          value: family.id,\r\n          text: `${family.code} ${family.title}`,\r\n        })\r\n      })\r\n\r\n      this.familySelect.refreshOptions(false)\r\n    } catch (err) {\r\n      console.error(\"Error loading families:\", err)\r\n    }\r\n  }\r\n\r\n  async updateKlasses() {\r\n    const familyId = this.familyTarget.value\r\n\r\n    if (!familyId) {\r\n      this.klassSelect.clearOptions()\r\n      return\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`/klasses_by_family?family_id=${familyId}`)\r\n      const klasses = await response.json()\r\n\r\n      this.klassSelect.clearOptions()\r\n\r\n      klasses.forEach((klass) => {\r\n        this.klassSelect.addOption({\r\n          value: klass.id,\r\n          text: `${klass.code} ${klass.title}`,\r\n        })\r\n      })\r\n\r\n      this.klassSelect.refreshOptions(false)\r\n    } catch (err) {\r\n      console.error(\"Error loading klasses:\", err)\r\n    }\r\n  }\r\n\r\n  async updateBricks() {\r\n    const klassId = this.klassTarget.value\r\n\r\n    if (!klassId) {\r\n      this.brickSelect.clearOptions()\r\n      return\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`/bricks_by_klass?klass_id=${klassId}`)\r\n      const bricks = await response.json()\r\n\r\n      this.brickSelect.clearOptions()\r\n\r\n      bricks.forEach((brick) => {\r\n        this.brickSelect.addOption({\r\n          value: brick.id,\r\n          text: `${brick.code} ${brick.title}`,\r\n        })\r\n      })\r\n\r\n      this.brickSelect.refreshOptions(false)\r\n    } catch (err) {\r\n      console.error(\"Error loading bricks:\", err)\r\n    }\r\n  }\r\n\r\n\r\n  disconnect() {\r\n    this.segmentSelect?.destroy()\r\n    this.familySelect?.destroy()\r\n    this.klassSelect?.destroy()\r\n    this.brickSelect?.destroy()\r\n  \r\n    this.segmentSelect = null\r\n    this.familySelect = null\r\n    this.klassSelect = null\r\n    this.brickSelect = null\r\n  }\r\n  \r\n}","// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n\nimport Rails from \"@rails/ujs\"\nimport Turbolinks from \"turbolinks\"\nimport * as ActiveStorage from \"@rails/activestorage\"\nimport \"channels\"\nimport \"../controllers\"\n\nimport $ from \"jquery\";\nimport jQuery from \"jquery\";\n\nwindow.$ = $;\nwindow.jQuery = jQuery;\n\nimport \"@nathanvda/cocoon\";\n\n\nRails.start()\nTurbolinks.start()\nActiveStorage.start()\n\n","/*\nStimulus Webpack Helpers 1.0.0\nCopyright © 2021 Basecamp, LLC\n */\nfunction definitionsFromContext(context) {\n  return context.keys().map(key => definitionForModuleWithContextAndKey(context, key)).filter(value => value);\n}\nfunction definitionForModuleWithContextAndKey(context, key) {\n  const identifier = identifierForContextKey(key);\n  if (identifier) {\n    return definitionForModuleAndIdentifier(context(key), identifier);\n  }\n}\nfunction definitionForModuleAndIdentifier(module, identifier) {\n  const controllerConstructor = module.default;\n  if (typeof controllerConstructor == \"function\") {\n    return {\n      identifier,\n      controllerConstructor\n    };\n  }\n}\nfunction identifierForContextKey(key) {\n  const logicalName = (key.match(/^(?:\\.\\/)?(.+)(?:[_-]controller\\..+?)$/) || [])[1];\n  if (logicalName) {\n    return logicalName.replace(/_/g, \"-\").replace(/\\//g, \"--\");\n  }\n}\nexport { definitionForModuleAndIdentifier, definitionForModuleWithContextAndKey, definitionsFromContext, identifierForContextKey };","function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var n = 0, F = function () {}; return { s: F, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] }; }, e: function (r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function () { t = t.call(r); }, n: function () { var r = t.next(); return a = r.done, r; }, e: function (r) { u = !0, o = r; }, f: function () { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/*\nStimulus 3.2.1\nCopyright © 2023 Basecamp, LLC\n */\nclass EventListener {\n  constructor(eventTarget, eventName, eventOptions) {\n    this.eventTarget = eventTarget;\n    this.eventName = eventName;\n    this.eventOptions = eventOptions;\n    this.unorderedBindings = new Set();\n  }\n  connect() {\n    this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);\n  }\n  disconnect() {\n    this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);\n  }\n  bindingConnected(binding) {\n    this.unorderedBindings.add(binding);\n  }\n  bindingDisconnected(binding) {\n    this.unorderedBindings.delete(binding);\n  }\n  handleEvent(event) {\n    const extendedEvent = extendEvent(event);\n    var _iterator = _createForOfIteratorHelper(this.bindings),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        const binding = _step.value;\n        if (extendedEvent.immediatePropagationStopped) {\n          break;\n        } else {\n          binding.handleEvent(extendedEvent);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  hasBindings() {\n    return this.unorderedBindings.size > 0;\n  }\n  get bindings() {\n    return Array.from(this.unorderedBindings).sort((left, right) => {\n      const leftIndex = left.index,\n        rightIndex = right.index;\n      return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;\n    });\n  }\n}\nfunction extendEvent(event) {\n  if (\"immediatePropagationStopped\" in event) {\n    return event;\n  } else {\n    const stopImmediatePropagation = event.stopImmediatePropagation;\n    return Object.assign(event, {\n      immediatePropagationStopped: false,\n      stopImmediatePropagation() {\n        this.immediatePropagationStopped = true;\n        stopImmediatePropagation.call(this);\n      }\n    });\n  }\n}\nclass Dispatcher {\n  constructor(application) {\n    this.application = application;\n    this.eventListenerMaps = new Map();\n    this.started = false;\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.eventListeners.forEach(eventListener => eventListener.connect());\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this.eventListeners.forEach(eventListener => eventListener.disconnect());\n    }\n  }\n  get eventListeners() {\n    return Array.from(this.eventListenerMaps.values()).reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);\n  }\n  bindingConnected(binding) {\n    this.fetchEventListenerForBinding(binding).bindingConnected(binding);\n  }\n  bindingDisconnected(binding, clearEventListeners = false) {\n    this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);\n    if (clearEventListeners) this.clearEventListenersForBinding(binding);\n  }\n  handleError(error, message, detail = {}) {\n    this.application.handleError(error, `Error ${message}`, detail);\n  }\n  clearEventListenersForBinding(binding) {\n    const eventListener = this.fetchEventListenerForBinding(binding);\n    if (!eventListener.hasBindings()) {\n      eventListener.disconnect();\n      this.removeMappedEventListenerFor(binding);\n    }\n  }\n  removeMappedEventListenerFor(binding) {\n    const eventTarget = binding.eventTarget,\n      eventName = binding.eventName,\n      eventOptions = binding.eventOptions;\n    const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n    const cacheKey = this.cacheKey(eventName, eventOptions);\n    eventListenerMap.delete(cacheKey);\n    if (eventListenerMap.size == 0) this.eventListenerMaps.delete(eventTarget);\n  }\n  fetchEventListenerForBinding(binding) {\n    const eventTarget = binding.eventTarget,\n      eventName = binding.eventName,\n      eventOptions = binding.eventOptions;\n    return this.fetchEventListener(eventTarget, eventName, eventOptions);\n  }\n  fetchEventListener(eventTarget, eventName, eventOptions) {\n    const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n    const cacheKey = this.cacheKey(eventName, eventOptions);\n    let eventListener = eventListenerMap.get(cacheKey);\n    if (!eventListener) {\n      eventListener = this.createEventListener(eventTarget, eventName, eventOptions);\n      eventListenerMap.set(cacheKey, eventListener);\n    }\n    return eventListener;\n  }\n  createEventListener(eventTarget, eventName, eventOptions) {\n    const eventListener = new EventListener(eventTarget, eventName, eventOptions);\n    if (this.started) {\n      eventListener.connect();\n    }\n    return eventListener;\n  }\n  fetchEventListenerMapForEventTarget(eventTarget) {\n    let eventListenerMap = this.eventListenerMaps.get(eventTarget);\n    if (!eventListenerMap) {\n      eventListenerMap = new Map();\n      this.eventListenerMaps.set(eventTarget, eventListenerMap);\n    }\n    return eventListenerMap;\n  }\n  cacheKey(eventName, eventOptions) {\n    const parts = [eventName];\n    Object.keys(eventOptions).sort().forEach(key => {\n      parts.push(`${eventOptions[key] ? \"\" : \"!\"}${key}`);\n    });\n    return parts.join(\":\");\n  }\n}\nconst defaultActionDescriptorFilters = {\n  stop({\n    event,\n    value\n  }) {\n    if (value) event.stopPropagation();\n    return true;\n  },\n  prevent({\n    event,\n    value\n  }) {\n    if (value) event.preventDefault();\n    return true;\n  },\n  self({\n    event,\n    value,\n    element\n  }) {\n    if (value) {\n      return element === event.target;\n    } else {\n      return true;\n    }\n  }\n};\nconst descriptorPattern = /^(?:(?:([^.]+?)\\+)?(.+?)(?:\\.(.+?))?(?:@(window|document))?->)?(.+?)(?:#([^:]+?))(?::(.+))?$/;\nfunction parseActionDescriptorString(descriptorString) {\n  const source = descriptorString.trim();\n  const matches = source.match(descriptorPattern) || [];\n  let eventName = matches[2];\n  let keyFilter = matches[3];\n  if (keyFilter && ![\"keydown\", \"keyup\", \"keypress\"].includes(eventName)) {\n    eventName += `.${keyFilter}`;\n    keyFilter = \"\";\n  }\n  return {\n    eventTarget: parseEventTarget(matches[4]),\n    eventName,\n    eventOptions: matches[7] ? parseEventOptions(matches[7]) : {},\n    identifier: matches[5],\n    methodName: matches[6],\n    keyFilter: matches[1] || keyFilter\n  };\n}\nfunction parseEventTarget(eventTargetName) {\n  if (eventTargetName == \"window\") {\n    return window;\n  } else if (eventTargetName == \"document\") {\n    return document;\n  }\n}\nfunction parseEventOptions(eventOptions) {\n  return eventOptions.split(\":\").reduce((options, token) => Object.assign(options, {\n    [token.replace(/^!/, \"\")]: !/^!/.test(token)\n  }), {});\n}\nfunction stringifyEventTarget(eventTarget) {\n  if (eventTarget == window) {\n    return \"window\";\n  } else if (eventTarget == document) {\n    return \"document\";\n  }\n}\nfunction camelize(value) {\n  return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase());\n}\nfunction namespaceCamelize(value) {\n  return camelize(value.replace(/--/g, \"-\").replace(/__/g, \"_\"));\n}\nfunction capitalize(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction dasherize(value) {\n  return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`);\n}\nfunction tokenize(value) {\n  return value.match(/[^\\s]+/g) || [];\n}\nfunction isSomething(object) {\n  return object !== null && object !== undefined;\n}\nfunction hasProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\nconst allModifiers = [\"meta\", \"ctrl\", \"alt\", \"shift\"];\nclass Action {\n  constructor(element, index, descriptor, schema) {\n    this.element = element;\n    this.index = index;\n    this.eventTarget = descriptor.eventTarget || element;\n    this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error(\"missing event name\");\n    this.eventOptions = descriptor.eventOptions || {};\n    this.identifier = descriptor.identifier || error(\"missing identifier\");\n    this.methodName = descriptor.methodName || error(\"missing method name\");\n    this.keyFilter = descriptor.keyFilter || \"\";\n    this.schema = schema;\n  }\n  static forToken(token, schema) {\n    return new this(token.element, token.index, parseActionDescriptorString(token.content), schema);\n  }\n  toString() {\n    const eventFilter = this.keyFilter ? `.${this.keyFilter}` : \"\";\n    const eventTarget = this.eventTargetName ? `@${this.eventTargetName}` : \"\";\n    return `${this.eventName}${eventFilter}${eventTarget}->${this.identifier}#${this.methodName}`;\n  }\n  shouldIgnoreKeyboardEvent(event) {\n    if (!this.keyFilter) {\n      return false;\n    }\n    const filters = this.keyFilter.split(\"+\");\n    if (this.keyFilterDissatisfied(event, filters)) {\n      return true;\n    }\n    const standardFilter = filters.filter(key => !allModifiers.includes(key))[0];\n    if (!standardFilter) {\n      return false;\n    }\n    if (!hasProperty(this.keyMappings, standardFilter)) {\n      error(`contains unknown key filter: ${this.keyFilter}`);\n    }\n    return this.keyMappings[standardFilter].toLowerCase() !== event.key.toLowerCase();\n  }\n  shouldIgnoreMouseEvent(event) {\n    if (!this.keyFilter) {\n      return false;\n    }\n    const filters = [this.keyFilter];\n    if (this.keyFilterDissatisfied(event, filters)) {\n      return true;\n    }\n    return false;\n  }\n  get params() {\n    const params = {};\n    const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`, \"i\");\n    for (var _i = 0, _Array$from = Array.from(this.element.attributes); _i < _Array$from.length; _i++) {\n      const _Array$from$_i = _Array$from[_i],\n        name = _Array$from$_i.name,\n        value = _Array$from$_i.value;\n      const match = name.match(pattern);\n      const key = match && match[1];\n      if (key) {\n        params[camelize(key)] = typecast(value);\n      }\n    }\n    return params;\n  }\n  get eventTargetName() {\n    return stringifyEventTarget(this.eventTarget);\n  }\n  get keyMappings() {\n    return this.schema.keyMappings;\n  }\n  keyFilterDissatisfied(event, filters) {\n    const _allModifiers$map = allModifiers.map(modifier => filters.includes(modifier)),\n      _allModifiers$map2 = _slicedToArray(_allModifiers$map, 4),\n      meta = _allModifiers$map2[0],\n      ctrl = _allModifiers$map2[1],\n      alt = _allModifiers$map2[2],\n      shift = _allModifiers$map2[3];\n    return event.metaKey !== meta || event.ctrlKey !== ctrl || event.altKey !== alt || event.shiftKey !== shift;\n  }\n}\nconst defaultEventNames = {\n  a: () => \"click\",\n  button: () => \"click\",\n  form: () => \"submit\",\n  details: () => \"toggle\",\n  input: e => e.getAttribute(\"type\") == \"submit\" ? \"click\" : \"input\",\n  select: () => \"change\",\n  textarea: () => \"input\"\n};\nfunction getDefaultEventNameForElement(element) {\n  const tagName = element.tagName.toLowerCase();\n  if (tagName in defaultEventNames) {\n    return defaultEventNames[tagName](element);\n  }\n}\nfunction error(message) {\n  throw new Error(message);\n}\nfunction typecast(value) {\n  try {\n    return JSON.parse(value);\n  } catch (o_O) {\n    return value;\n  }\n}\nclass Binding {\n  constructor(context, action) {\n    this.context = context;\n    this.action = action;\n  }\n  get index() {\n    return this.action.index;\n  }\n  get eventTarget() {\n    return this.action.eventTarget;\n  }\n  get eventOptions() {\n    return this.action.eventOptions;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  handleEvent(event) {\n    const actionEvent = this.prepareActionEvent(event);\n    if (this.willBeInvokedByEvent(event) && this.applyEventModifiers(actionEvent)) {\n      this.invokeWithEvent(actionEvent);\n    }\n  }\n  get eventName() {\n    return this.action.eventName;\n  }\n  get method() {\n    const method = this.controller[this.methodName];\n    if (typeof method == \"function\") {\n      return method;\n    }\n    throw new Error(`Action \"${this.action}\" references undefined method \"${this.methodName}\"`);\n  }\n  applyEventModifiers(event) {\n    const element = this.action.element;\n    const actionDescriptorFilters = this.context.application.actionDescriptorFilters;\n    const controller = this.context.controller;\n    let passes = true;\n    for (var _i2 = 0, _Object$entries = Object.entries(this.eventOptions); _i2 < _Object$entries.length; _i2++) {\n      const _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n        name = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      if (name in actionDescriptorFilters) {\n        const filter = actionDescriptorFilters[name];\n        passes = passes && filter({\n          name,\n          value,\n          event,\n          element,\n          controller\n        });\n      } else {\n        continue;\n      }\n    }\n    return passes;\n  }\n  prepareActionEvent(event) {\n    return Object.assign(event, {\n      params: this.action.params\n    });\n  }\n  invokeWithEvent(event) {\n    const target = event.target,\n      currentTarget = event.currentTarget;\n    try {\n      this.method.call(this.controller, event);\n      this.context.logDebugActivity(this.methodName, {\n        event,\n        target,\n        currentTarget,\n        action: this.methodName\n      });\n    } catch (error) {\n      const identifier = this.identifier,\n        controller = this.controller,\n        element = this.element,\n        index = this.index;\n      const detail = {\n        identifier,\n        controller,\n        element,\n        index,\n        event\n      };\n      this.context.handleError(error, `invoking action \"${this.action}\"`, detail);\n    }\n  }\n  willBeInvokedByEvent(event) {\n    const eventTarget = event.target;\n    if (event instanceof KeyboardEvent && this.action.shouldIgnoreKeyboardEvent(event)) {\n      return false;\n    }\n    if (event instanceof MouseEvent && this.action.shouldIgnoreMouseEvent(event)) {\n      return false;\n    }\n    if (this.element === eventTarget) {\n      return true;\n    } else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {\n      return this.scope.containsElement(eventTarget);\n    } else {\n      return this.scope.containsElement(this.action.element);\n    }\n  }\n  get controller() {\n    return this.context.controller;\n  }\n  get methodName() {\n    return this.action.methodName;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n}\nclass ElementObserver {\n  constructor(element, delegate) {\n    this.mutationObserverInit = {\n      attributes: true,\n      childList: true,\n      subtree: true\n    };\n    this.element = element;\n    this.started = false;\n    this.delegate = delegate;\n    this.elements = new Set();\n    this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations));\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.mutationObserver.observe(this.element, this.mutationObserverInit);\n      this.refresh();\n    }\n  }\n  pause(callback) {\n    if (this.started) {\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n    callback();\n    if (!this.started) {\n      this.mutationObserver.observe(this.element, this.mutationObserverInit);\n      this.started = true;\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords();\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n  }\n  refresh() {\n    if (this.started) {\n      const matches = new Set(this.matchElementsInTree());\n      for (var _i3 = 0, _Array$from2 = Array.from(this.elements); _i3 < _Array$from2.length; _i3++) {\n        const element = _Array$from2[_i3];\n        if (!matches.has(element)) {\n          this.removeElement(element);\n        }\n      }\n      for (var _i4 = 0, _Array$from3 = Array.from(matches); _i4 < _Array$from3.length; _i4++) {\n        const element = _Array$from3[_i4];\n        this.addElement(element);\n      }\n    }\n  }\n  processMutations(mutations) {\n    if (this.started) {\n      var _iterator2 = _createForOfIteratorHelper(mutations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          const mutation = _step2.value;\n          this.processMutation(mutation);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }\n  processMutation(mutation) {\n    if (mutation.type == \"attributes\") {\n      this.processAttributeChange(mutation.target, mutation.attributeName);\n    } else if (mutation.type == \"childList\") {\n      this.processRemovedNodes(mutation.removedNodes);\n      this.processAddedNodes(mutation.addedNodes);\n    }\n  }\n  processAttributeChange(element, attributeName) {\n    if (this.elements.has(element)) {\n      if (this.delegate.elementAttributeChanged && this.matchElement(element)) {\n        this.delegate.elementAttributeChanged(element, attributeName);\n      } else {\n        this.removeElement(element);\n      }\n    } else if (this.matchElement(element)) {\n      this.addElement(element);\n    }\n  }\n  processRemovedNodes(nodes) {\n    for (var _i5 = 0, _Array$from4 = Array.from(nodes); _i5 < _Array$from4.length; _i5++) {\n      const node = _Array$from4[_i5];\n      const element = this.elementFromNode(node);\n      if (element) {\n        this.processTree(element, this.removeElement);\n      }\n    }\n  }\n  processAddedNodes(nodes) {\n    for (var _i6 = 0, _Array$from5 = Array.from(nodes); _i6 < _Array$from5.length; _i6++) {\n      const node = _Array$from5[_i6];\n      const element = this.elementFromNode(node);\n      if (element && this.elementIsActive(element)) {\n        this.processTree(element, this.addElement);\n      }\n    }\n  }\n  matchElement(element) {\n    return this.delegate.matchElement(element);\n  }\n  matchElementsInTree(tree = this.element) {\n    return this.delegate.matchElementsInTree(tree);\n  }\n  processTree(tree, processor) {\n    var _iterator3 = _createForOfIteratorHelper(this.matchElementsInTree(tree)),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        const element = _step3.value;\n        processor.call(this, element);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  elementFromNode(node) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      return node;\n    }\n  }\n  elementIsActive(element) {\n    if (element.isConnected != this.element.isConnected) {\n      return false;\n    } else {\n      return this.element.contains(element);\n    }\n  }\n  addElement(element) {\n    if (!this.elements.has(element)) {\n      if (this.elementIsActive(element)) {\n        this.elements.add(element);\n        if (this.delegate.elementMatched) {\n          this.delegate.elementMatched(element);\n        }\n      }\n    }\n  }\n  removeElement(element) {\n    if (this.elements.has(element)) {\n      this.elements.delete(element);\n      if (this.delegate.elementUnmatched) {\n        this.delegate.elementUnmatched(element);\n      }\n    }\n  }\n}\nclass AttributeObserver {\n  constructor(element, attributeName, delegate) {\n    this.attributeName = attributeName;\n    this.delegate = delegate;\n    this.elementObserver = new ElementObserver(element, this);\n  }\n  get element() {\n    return this.elementObserver.element;\n  }\n  get selector() {\n    return `[${this.attributeName}]`;\n  }\n  start() {\n    this.elementObserver.start();\n  }\n  pause(callback) {\n    this.elementObserver.pause(callback);\n  }\n  stop() {\n    this.elementObserver.stop();\n  }\n  refresh() {\n    this.elementObserver.refresh();\n  }\n  get started() {\n    return this.elementObserver.started;\n  }\n  matchElement(element) {\n    return element.hasAttribute(this.attributeName);\n  }\n  matchElementsInTree(tree) {\n    const match = this.matchElement(tree) ? [tree] : [];\n    const matches = Array.from(tree.querySelectorAll(this.selector));\n    return match.concat(matches);\n  }\n  elementMatched(element) {\n    if (this.delegate.elementMatchedAttribute) {\n      this.delegate.elementMatchedAttribute(element, this.attributeName);\n    }\n  }\n  elementUnmatched(element) {\n    if (this.delegate.elementUnmatchedAttribute) {\n      this.delegate.elementUnmatchedAttribute(element, this.attributeName);\n    }\n  }\n  elementAttributeChanged(element, attributeName) {\n    if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {\n      this.delegate.elementAttributeValueChanged(element, attributeName);\n    }\n  }\n}\nfunction add(map, key, value) {\n  fetch(map, key).add(value);\n}\nfunction del(map, key, value) {\n  fetch(map, key).delete(value);\n  prune(map, key);\n}\nfunction fetch(map, key) {\n  let values = map.get(key);\n  if (!values) {\n    values = new Set();\n    map.set(key, values);\n  }\n  return values;\n}\nfunction prune(map, key) {\n  const values = map.get(key);\n  if (values != null && values.size == 0) {\n    map.delete(key);\n  }\n}\nclass Multimap {\n  constructor() {\n    this.valuesByKey = new Map();\n  }\n  get keys() {\n    return Array.from(this.valuesByKey.keys());\n  }\n  get values() {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.reduce((values, set) => values.concat(Array.from(set)), []);\n  }\n  get size() {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.reduce((size, set) => size + set.size, 0);\n  }\n  add(key, value) {\n    add(this.valuesByKey, key, value);\n  }\n  delete(key, value) {\n    del(this.valuesByKey, key, value);\n  }\n  has(key, value) {\n    const values = this.valuesByKey.get(key);\n    return values != null && values.has(value);\n  }\n  hasKey(key) {\n    return this.valuesByKey.has(key);\n  }\n  hasValue(value) {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.some(set => set.has(value));\n  }\n  getValuesForKey(key) {\n    const values = this.valuesByKey.get(key);\n    return values ? Array.from(values) : [];\n  }\n  getKeysForValue(value) {\n    return Array.from(this.valuesByKey).filter(([_key, values]) => values.has(value)).map(([key, _values]) => key);\n  }\n}\nclass IndexedMultimap extends Multimap {\n  constructor() {\n    super();\n    this.keysByValue = new Map();\n  }\n  get values() {\n    return Array.from(this.keysByValue.keys());\n  }\n  add(key, value) {\n    super.add(key, value);\n    add(this.keysByValue, value, key);\n  }\n  delete(key, value) {\n    super.delete(key, value);\n    del(this.keysByValue, value, key);\n  }\n  hasValue(value) {\n    return this.keysByValue.has(value);\n  }\n  getKeysForValue(value) {\n    const set = this.keysByValue.get(value);\n    return set ? Array.from(set) : [];\n  }\n}\nclass SelectorObserver {\n  constructor(element, selector, delegate, details) {\n    this._selector = selector;\n    this.details = details;\n    this.elementObserver = new ElementObserver(element, this);\n    this.delegate = delegate;\n    this.matchesByElement = new Multimap();\n  }\n  get started() {\n    return this.elementObserver.started;\n  }\n  get selector() {\n    return this._selector;\n  }\n  set selector(selector) {\n    this._selector = selector;\n    this.refresh();\n  }\n  start() {\n    this.elementObserver.start();\n  }\n  pause(callback) {\n    this.elementObserver.pause(callback);\n  }\n  stop() {\n    this.elementObserver.stop();\n  }\n  refresh() {\n    this.elementObserver.refresh();\n  }\n  get element() {\n    return this.elementObserver.element;\n  }\n  matchElement(element) {\n    const selector = this.selector;\n    if (selector) {\n      const matches = element.matches(selector);\n      if (this.delegate.selectorMatchElement) {\n        return matches && this.delegate.selectorMatchElement(element, this.details);\n      }\n      return matches;\n    } else {\n      return false;\n    }\n  }\n  matchElementsInTree(tree) {\n    const selector = this.selector;\n    if (selector) {\n      const match = this.matchElement(tree) ? [tree] : [];\n      const matches = Array.from(tree.querySelectorAll(selector)).filter(match => this.matchElement(match));\n      return match.concat(matches);\n    } else {\n      return [];\n    }\n  }\n  elementMatched(element) {\n    const selector = this.selector;\n    if (selector) {\n      this.selectorMatched(element, selector);\n    }\n  }\n  elementUnmatched(element) {\n    const selectors = this.matchesByElement.getKeysForValue(element);\n    var _iterator4 = _createForOfIteratorHelper(selectors),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        const selector = _step4.value;\n        this.selectorUnmatched(element, selector);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n  elementAttributeChanged(element, _attributeName) {\n    const selector = this.selector;\n    if (selector) {\n      const matches = this.matchElement(element);\n      const matchedBefore = this.matchesByElement.has(selector, element);\n      if (matches && !matchedBefore) {\n        this.selectorMatched(element, selector);\n      } else if (!matches && matchedBefore) {\n        this.selectorUnmatched(element, selector);\n      }\n    }\n  }\n  selectorMatched(element, selector) {\n    this.delegate.selectorMatched(element, selector, this.details);\n    this.matchesByElement.add(selector, element);\n  }\n  selectorUnmatched(element, selector) {\n    this.delegate.selectorUnmatched(element, selector, this.details);\n    this.matchesByElement.delete(selector, element);\n  }\n}\nclass StringMapObserver {\n  constructor(element, delegate) {\n    this.element = element;\n    this.delegate = delegate;\n    this.started = false;\n    this.stringMap = new Map();\n    this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations));\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.mutationObserver.observe(this.element, {\n        attributes: true,\n        attributeOldValue: true\n      });\n      this.refresh();\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords();\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n  }\n  refresh() {\n    if (this.started) {\n      var _iterator5 = _createForOfIteratorHelper(this.knownAttributeNames),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          const attributeName = _step5.value;\n          this.refreshAttribute(attributeName, null);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }\n  processMutations(mutations) {\n    if (this.started) {\n      var _iterator6 = _createForOfIteratorHelper(mutations),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          const mutation = _step6.value;\n          this.processMutation(mutation);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }\n  processMutation(mutation) {\n    const attributeName = mutation.attributeName;\n    if (attributeName) {\n      this.refreshAttribute(attributeName, mutation.oldValue);\n    }\n  }\n  refreshAttribute(attributeName, oldValue) {\n    const key = this.delegate.getStringMapKeyForAttribute(attributeName);\n    if (key != null) {\n      if (!this.stringMap.has(attributeName)) {\n        this.stringMapKeyAdded(key, attributeName);\n      }\n      const value = this.element.getAttribute(attributeName);\n      if (this.stringMap.get(attributeName) != value) {\n        this.stringMapValueChanged(value, key, oldValue);\n      }\n      if (value == null) {\n        const oldValue = this.stringMap.get(attributeName);\n        this.stringMap.delete(attributeName);\n        if (oldValue) this.stringMapKeyRemoved(key, attributeName, oldValue);\n      } else {\n        this.stringMap.set(attributeName, value);\n      }\n    }\n  }\n  stringMapKeyAdded(key, attributeName) {\n    if (this.delegate.stringMapKeyAdded) {\n      this.delegate.stringMapKeyAdded(key, attributeName);\n    }\n  }\n  stringMapValueChanged(value, key, oldValue) {\n    if (this.delegate.stringMapValueChanged) {\n      this.delegate.stringMapValueChanged(value, key, oldValue);\n    }\n  }\n  stringMapKeyRemoved(key, attributeName, oldValue) {\n    if (this.delegate.stringMapKeyRemoved) {\n      this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);\n    }\n  }\n  get knownAttributeNames() {\n    return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));\n  }\n  get currentAttributeNames() {\n    return Array.from(this.element.attributes).map(attribute => attribute.name);\n  }\n  get recordedAttributeNames() {\n    return Array.from(this.stringMap.keys());\n  }\n}\nclass TokenListObserver {\n  constructor(element, attributeName, delegate) {\n    this.attributeObserver = new AttributeObserver(element, attributeName, this);\n    this.delegate = delegate;\n    this.tokensByElement = new Multimap();\n  }\n  get started() {\n    return this.attributeObserver.started;\n  }\n  start() {\n    this.attributeObserver.start();\n  }\n  pause(callback) {\n    this.attributeObserver.pause(callback);\n  }\n  stop() {\n    this.attributeObserver.stop();\n  }\n  refresh() {\n    this.attributeObserver.refresh();\n  }\n  get element() {\n    return this.attributeObserver.element;\n  }\n  get attributeName() {\n    return this.attributeObserver.attributeName;\n  }\n  elementMatchedAttribute(element) {\n    this.tokensMatched(this.readTokensForElement(element));\n  }\n  elementAttributeValueChanged(element) {\n    const _this$refreshTokensFo = this.refreshTokensForElement(element),\n      _this$refreshTokensFo2 = _slicedToArray(_this$refreshTokensFo, 2),\n      unmatchedTokens = _this$refreshTokensFo2[0],\n      matchedTokens = _this$refreshTokensFo2[1];\n    this.tokensUnmatched(unmatchedTokens);\n    this.tokensMatched(matchedTokens);\n  }\n  elementUnmatchedAttribute(element) {\n    this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));\n  }\n  tokensMatched(tokens) {\n    tokens.forEach(token => this.tokenMatched(token));\n  }\n  tokensUnmatched(tokens) {\n    tokens.forEach(token => this.tokenUnmatched(token));\n  }\n  tokenMatched(token) {\n    this.delegate.tokenMatched(token);\n    this.tokensByElement.add(token.element, token);\n  }\n  tokenUnmatched(token) {\n    this.delegate.tokenUnmatched(token);\n    this.tokensByElement.delete(token.element, token);\n  }\n  refreshTokensForElement(element) {\n    const previousTokens = this.tokensByElement.getValuesForKey(element);\n    const currentTokens = this.readTokensForElement(element);\n    const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));\n    if (firstDifferingIndex == -1) {\n      return [[], []];\n    } else {\n      return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];\n    }\n  }\n  readTokensForElement(element) {\n    const attributeName = this.attributeName;\n    const tokenString = element.getAttribute(attributeName) || \"\";\n    return parseTokenString(tokenString, element, attributeName);\n  }\n}\nfunction parseTokenString(tokenString, element, attributeName) {\n  return tokenString.trim().split(/\\s+/).filter(content => content.length).map((content, index) => ({\n    element,\n    attributeName,\n    content,\n    index\n  }));\n}\nfunction zip(left, right) {\n  const length = Math.max(left.length, right.length);\n  return Array.from({\n    length\n  }, (_, index) => [left[index], right[index]]);\n}\nfunction tokensAreEqual(left, right) {\n  return left && right && left.index == right.index && left.content == right.content;\n}\nclass ValueListObserver {\n  constructor(element, attributeName, delegate) {\n    this.tokenListObserver = new TokenListObserver(element, attributeName, this);\n    this.delegate = delegate;\n    this.parseResultsByToken = new WeakMap();\n    this.valuesByTokenByElement = new WeakMap();\n  }\n  get started() {\n    return this.tokenListObserver.started;\n  }\n  start() {\n    this.tokenListObserver.start();\n  }\n  stop() {\n    this.tokenListObserver.stop();\n  }\n  refresh() {\n    this.tokenListObserver.refresh();\n  }\n  get element() {\n    return this.tokenListObserver.element;\n  }\n  get attributeName() {\n    return this.tokenListObserver.attributeName;\n  }\n  tokenMatched(token) {\n    const element = token.element;\n    const _this$fetchParseResul = this.fetchParseResultForToken(token),\n      value = _this$fetchParseResul.value;\n    if (value) {\n      this.fetchValuesByTokenForElement(element).set(token, value);\n      this.delegate.elementMatchedValue(element, value);\n    }\n  }\n  tokenUnmatched(token) {\n    const element = token.element;\n    const _this$fetchParseResul2 = this.fetchParseResultForToken(token),\n      value = _this$fetchParseResul2.value;\n    if (value) {\n      this.fetchValuesByTokenForElement(element).delete(token);\n      this.delegate.elementUnmatchedValue(element, value);\n    }\n  }\n  fetchParseResultForToken(token) {\n    let parseResult = this.parseResultsByToken.get(token);\n    if (!parseResult) {\n      parseResult = this.parseToken(token);\n      this.parseResultsByToken.set(token, parseResult);\n    }\n    return parseResult;\n  }\n  fetchValuesByTokenForElement(element) {\n    let valuesByToken = this.valuesByTokenByElement.get(element);\n    if (!valuesByToken) {\n      valuesByToken = new Map();\n      this.valuesByTokenByElement.set(element, valuesByToken);\n    }\n    return valuesByToken;\n  }\n  parseToken(token) {\n    try {\n      const value = this.delegate.parseValueForToken(token);\n      return {\n        value\n      };\n    } catch (error) {\n      return {\n        error\n      };\n    }\n  }\n}\nclass BindingObserver {\n  constructor(context, delegate) {\n    this.context = context;\n    this.delegate = delegate;\n    this.bindingsByAction = new Map();\n  }\n  start() {\n    if (!this.valueListObserver) {\n      this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);\n      this.valueListObserver.start();\n    }\n  }\n  stop() {\n    if (this.valueListObserver) {\n      this.valueListObserver.stop();\n      delete this.valueListObserver;\n      this.disconnectAllActions();\n    }\n  }\n  get element() {\n    return this.context.element;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  get actionAttribute() {\n    return this.schema.actionAttribute;\n  }\n  get schema() {\n    return this.context.schema;\n  }\n  get bindings() {\n    return Array.from(this.bindingsByAction.values());\n  }\n  connectAction(action) {\n    const binding = new Binding(this.context, action);\n    this.bindingsByAction.set(action, binding);\n    this.delegate.bindingConnected(binding);\n  }\n  disconnectAction(action) {\n    const binding = this.bindingsByAction.get(action);\n    if (binding) {\n      this.bindingsByAction.delete(action);\n      this.delegate.bindingDisconnected(binding);\n    }\n  }\n  disconnectAllActions() {\n    this.bindings.forEach(binding => this.delegate.bindingDisconnected(binding, true));\n    this.bindingsByAction.clear();\n  }\n  parseValueForToken(token) {\n    const action = Action.forToken(token, this.schema);\n    if (action.identifier == this.identifier) {\n      return action;\n    }\n  }\n  elementMatchedValue(element, action) {\n    this.connectAction(action);\n  }\n  elementUnmatchedValue(element, action) {\n    this.disconnectAction(action);\n  }\n}\nclass ValueObserver {\n  constructor(context, receiver) {\n    this.context = context;\n    this.receiver = receiver;\n    this.stringMapObserver = new StringMapObserver(this.element, this);\n    this.valueDescriptorMap = this.controller.valueDescriptorMap;\n  }\n  start() {\n    this.stringMapObserver.start();\n    this.invokeChangedCallbacksForDefaultValues();\n  }\n  stop() {\n    this.stringMapObserver.stop();\n  }\n  get element() {\n    return this.context.element;\n  }\n  get controller() {\n    return this.context.controller;\n  }\n  getStringMapKeyForAttribute(attributeName) {\n    if (attributeName in this.valueDescriptorMap) {\n      return this.valueDescriptorMap[attributeName].name;\n    }\n  }\n  stringMapKeyAdded(key, attributeName) {\n    const descriptor = this.valueDescriptorMap[attributeName];\n    if (!this.hasValue(key)) {\n      this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));\n    }\n  }\n  stringMapValueChanged(value, name, oldValue) {\n    const descriptor = this.valueDescriptorNameMap[name];\n    if (value === null) return;\n    if (oldValue === null) {\n      oldValue = descriptor.writer(descriptor.defaultValue);\n    }\n    this.invokeChangedCallback(name, value, oldValue);\n  }\n  stringMapKeyRemoved(key, attributeName, oldValue) {\n    const descriptor = this.valueDescriptorNameMap[key];\n    if (this.hasValue(key)) {\n      this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);\n    } else {\n      this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);\n    }\n  }\n  invokeChangedCallbacksForDefaultValues() {\n    var _iterator7 = _createForOfIteratorHelper(this.valueDescriptors),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        const _step7$value = _step7.value,\n          key = _step7$value.key,\n          name = _step7$value.name,\n          defaultValue = _step7$value.defaultValue,\n          writer = _step7$value.writer;\n        if (defaultValue != undefined && !this.controller.data.has(key)) {\n          this.invokeChangedCallback(name, writer(defaultValue), undefined);\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  }\n  invokeChangedCallback(name, rawValue, rawOldValue) {\n    const changedMethodName = `${name}Changed`;\n    const changedMethod = this.receiver[changedMethodName];\n    if (typeof changedMethod == \"function\") {\n      const descriptor = this.valueDescriptorNameMap[name];\n      try {\n        const value = descriptor.reader(rawValue);\n        let oldValue = rawOldValue;\n        if (rawOldValue) {\n          oldValue = descriptor.reader(rawOldValue);\n        }\n        changedMethod.call(this.receiver, value, oldValue);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          error.message = `Stimulus Value \"${this.context.identifier}.${descriptor.name}\" - ${error.message}`;\n        }\n        throw error;\n      }\n    }\n  }\n  get valueDescriptors() {\n    const valueDescriptorMap = this.valueDescriptorMap;\n    return Object.keys(valueDescriptorMap).map(key => valueDescriptorMap[key]);\n  }\n  get valueDescriptorNameMap() {\n    const descriptors = {};\n    Object.keys(this.valueDescriptorMap).forEach(key => {\n      const descriptor = this.valueDescriptorMap[key];\n      descriptors[descriptor.name] = descriptor;\n    });\n    return descriptors;\n  }\n  hasValue(attributeName) {\n    const descriptor = this.valueDescriptorNameMap[attributeName];\n    const hasMethodName = `has${capitalize(descriptor.name)}`;\n    return this.receiver[hasMethodName];\n  }\n}\nclass TargetObserver {\n  constructor(context, delegate) {\n    this.context = context;\n    this.delegate = delegate;\n    this.targetsByName = new Multimap();\n  }\n  start() {\n    if (!this.tokenListObserver) {\n      this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);\n      this.tokenListObserver.start();\n    }\n  }\n  stop() {\n    if (this.tokenListObserver) {\n      this.disconnectAllTargets();\n      this.tokenListObserver.stop();\n      delete this.tokenListObserver;\n    }\n  }\n  tokenMatched({\n    element,\n    content: name\n  }) {\n    if (this.scope.containsElement(element)) {\n      this.connectTarget(element, name);\n    }\n  }\n  tokenUnmatched({\n    element,\n    content: name\n  }) {\n    this.disconnectTarget(element, name);\n  }\n  connectTarget(element, name) {\n    var _a;\n    if (!this.targetsByName.has(name, element)) {\n      this.targetsByName.add(name, element);\n      (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));\n    }\n  }\n  disconnectTarget(element, name) {\n    var _a;\n    if (this.targetsByName.has(name, element)) {\n      this.targetsByName.delete(name, element);\n      (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));\n    }\n  }\n  disconnectAllTargets() {\n    var _iterator8 = _createForOfIteratorHelper(this.targetsByName.keys),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        const name = _step8.value;\n        var _iterator9 = _createForOfIteratorHelper(this.targetsByName.getValuesForKey(name)),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            const element = _step9.value;\n            this.disconnectTarget(element, name);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n  }\n  get attributeName() {\n    return `data-${this.context.identifier}-target`;\n  }\n  get element() {\n    return this.context.element;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n}\nfunction readInheritableStaticArrayValues(constructor, propertyName) {\n  const ancestors = getAncestorsForConstructor(constructor);\n  return Array.from(ancestors.reduce((values, constructor) => {\n    getOwnStaticArrayValues(constructor, propertyName).forEach(name => values.add(name));\n    return values;\n  }, new Set()));\n}\nfunction readInheritableStaticObjectPairs(constructor, propertyName) {\n  const ancestors = getAncestorsForConstructor(constructor);\n  return ancestors.reduce((pairs, constructor) => {\n    pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));\n    return pairs;\n  }, []);\n}\nfunction getAncestorsForConstructor(constructor) {\n  const ancestors = [];\n  while (constructor) {\n    ancestors.push(constructor);\n    constructor = Object.getPrototypeOf(constructor);\n  }\n  return ancestors.reverse();\n}\nfunction getOwnStaticArrayValues(constructor, propertyName) {\n  const definition = constructor[propertyName];\n  return Array.isArray(definition) ? definition : [];\n}\nfunction getOwnStaticObjectPairs(constructor, propertyName) {\n  const definition = constructor[propertyName];\n  return definition ? Object.keys(definition).map(key => [key, definition[key]]) : [];\n}\nclass OutletObserver {\n  constructor(context, delegate) {\n    this.started = false;\n    this.context = context;\n    this.delegate = delegate;\n    this.outletsByName = new Multimap();\n    this.outletElementsByName = new Multimap();\n    this.selectorObserverMap = new Map();\n    this.attributeObserverMap = new Map();\n  }\n  start() {\n    if (!this.started) {\n      this.outletDefinitions.forEach(outletName => {\n        this.setupSelectorObserverForOutlet(outletName);\n        this.setupAttributeObserverForOutlet(outletName);\n      });\n      this.started = true;\n      this.dependentContexts.forEach(context => context.refresh());\n    }\n  }\n  refresh() {\n    this.selectorObserverMap.forEach(observer => observer.refresh());\n    this.attributeObserverMap.forEach(observer => observer.refresh());\n  }\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this.disconnectAllOutlets();\n      this.stopSelectorObservers();\n      this.stopAttributeObservers();\n    }\n  }\n  stopSelectorObservers() {\n    if (this.selectorObserverMap.size > 0) {\n      this.selectorObserverMap.forEach(observer => observer.stop());\n      this.selectorObserverMap.clear();\n    }\n  }\n  stopAttributeObservers() {\n    if (this.attributeObserverMap.size > 0) {\n      this.attributeObserverMap.forEach(observer => observer.stop());\n      this.attributeObserverMap.clear();\n    }\n  }\n  selectorMatched(element, _selector, {\n    outletName\n  }) {\n    const outlet = this.getOutlet(element, outletName);\n    if (outlet) {\n      this.connectOutlet(outlet, element, outletName);\n    }\n  }\n  selectorUnmatched(element, _selector, {\n    outletName\n  }) {\n    const outlet = this.getOutletFromMap(element, outletName);\n    if (outlet) {\n      this.disconnectOutlet(outlet, element, outletName);\n    }\n  }\n  selectorMatchElement(element, {\n    outletName\n  }) {\n    const selector = this.selector(outletName);\n    const hasOutlet = this.hasOutlet(element, outletName);\n    const hasOutletController = element.matches(`[${this.schema.controllerAttribute}~=${outletName}]`);\n    if (selector) {\n      return hasOutlet && hasOutletController && element.matches(selector);\n    } else {\n      return false;\n    }\n  }\n  elementMatchedAttribute(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  elementAttributeValueChanged(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  elementUnmatchedAttribute(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  connectOutlet(outlet, element, outletName) {\n    var _a;\n    if (!this.outletElementsByName.has(outletName, element)) {\n      this.outletsByName.add(outletName, outlet);\n      this.outletElementsByName.add(outletName, element);\n      (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletConnected(outlet, element, outletName));\n    }\n  }\n  disconnectOutlet(outlet, element, outletName) {\n    var _a;\n    if (this.outletElementsByName.has(outletName, element)) {\n      this.outletsByName.delete(outletName, outlet);\n      this.outletElementsByName.delete(outletName, element);\n      (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletDisconnected(outlet, element, outletName));\n    }\n  }\n  disconnectAllOutlets() {\n    var _iterator0 = _createForOfIteratorHelper(this.outletElementsByName.keys),\n      _step0;\n    try {\n      for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n        const outletName = _step0.value;\n        var _iterator1 = _createForOfIteratorHelper(this.outletElementsByName.getValuesForKey(outletName)),\n          _step1;\n        try {\n          for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n            const element = _step1.value;\n            var _iterator10 = _createForOfIteratorHelper(this.outletsByName.getValuesForKey(outletName)),\n              _step10;\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                const outlet = _step10.value;\n                this.disconnectOutlet(outlet, element, outletName);\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n          }\n        } catch (err) {\n          _iterator1.e(err);\n        } finally {\n          _iterator1.f();\n        }\n      }\n    } catch (err) {\n      _iterator0.e(err);\n    } finally {\n      _iterator0.f();\n    }\n  }\n  updateSelectorObserverForOutlet(outletName) {\n    const observer = this.selectorObserverMap.get(outletName);\n    if (observer) {\n      observer.selector = this.selector(outletName);\n    }\n  }\n  setupSelectorObserverForOutlet(outletName) {\n    const selector = this.selector(outletName);\n    const selectorObserver = new SelectorObserver(document.body, selector, this, {\n      outletName\n    });\n    this.selectorObserverMap.set(outletName, selectorObserver);\n    selectorObserver.start();\n  }\n  setupAttributeObserverForOutlet(outletName) {\n    const attributeName = this.attributeNameForOutletName(outletName);\n    const attributeObserver = new AttributeObserver(this.scope.element, attributeName, this);\n    this.attributeObserverMap.set(outletName, attributeObserver);\n    attributeObserver.start();\n  }\n  selector(outletName) {\n    return this.scope.outlets.getSelectorForOutletName(outletName);\n  }\n  attributeNameForOutletName(outletName) {\n    return this.scope.schema.outletAttributeForScope(this.identifier, outletName);\n  }\n  getOutletNameFromOutletAttributeName(attributeName) {\n    return this.outletDefinitions.find(outletName => this.attributeNameForOutletName(outletName) === attributeName);\n  }\n  get outletDependencies() {\n    const dependencies = new Multimap();\n    this.router.modules.forEach(module => {\n      const constructor = module.definition.controllerConstructor;\n      const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n      outlets.forEach(outlet => dependencies.add(outlet, module.identifier));\n    });\n    return dependencies;\n  }\n  get outletDefinitions() {\n    return this.outletDependencies.getKeysForValue(this.identifier);\n  }\n  get dependentControllerIdentifiers() {\n    return this.outletDependencies.getValuesForKey(this.identifier);\n  }\n  get dependentContexts() {\n    const identifiers = this.dependentControllerIdentifiers;\n    return this.router.contexts.filter(context => identifiers.includes(context.identifier));\n  }\n  hasOutlet(element, outletName) {\n    return !!this.getOutlet(element, outletName) || !!this.getOutletFromMap(element, outletName);\n  }\n  getOutlet(element, outletName) {\n    return this.application.getControllerForElementAndIdentifier(element, outletName);\n  }\n  getOutletFromMap(element, outletName) {\n    return this.outletsByName.getValuesForKey(outletName).find(outlet => outlet.element === element);\n  }\n  get scope() {\n    return this.context.scope;\n  }\n  get schema() {\n    return this.context.schema;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  get application() {\n    return this.context.application;\n  }\n  get router() {\n    return this.application.router;\n  }\n}\nclass Context {\n  constructor(module, scope) {\n    this.logDebugActivity = (functionName, detail = {}) => {\n      const identifier = this.identifier,\n        controller = this.controller,\n        element = this.element;\n      detail = Object.assign({\n        identifier,\n        controller,\n        element\n      }, detail);\n      this.application.logDebugActivity(this.identifier, functionName, detail);\n    };\n    this.module = module;\n    this.scope = scope;\n    this.controller = new module.controllerConstructor(this);\n    this.bindingObserver = new BindingObserver(this, this.dispatcher);\n    this.valueObserver = new ValueObserver(this, this.controller);\n    this.targetObserver = new TargetObserver(this, this);\n    this.outletObserver = new OutletObserver(this, this);\n    try {\n      this.controller.initialize();\n      this.logDebugActivity(\"initialize\");\n    } catch (error) {\n      this.handleError(error, \"initializing controller\");\n    }\n  }\n  connect() {\n    this.bindingObserver.start();\n    this.valueObserver.start();\n    this.targetObserver.start();\n    this.outletObserver.start();\n    try {\n      this.controller.connect();\n      this.logDebugActivity(\"connect\");\n    } catch (error) {\n      this.handleError(error, \"connecting controller\");\n    }\n  }\n  refresh() {\n    this.outletObserver.refresh();\n  }\n  disconnect() {\n    try {\n      this.controller.disconnect();\n      this.logDebugActivity(\"disconnect\");\n    } catch (error) {\n      this.handleError(error, \"disconnecting controller\");\n    }\n    this.outletObserver.stop();\n    this.targetObserver.stop();\n    this.valueObserver.stop();\n    this.bindingObserver.stop();\n  }\n  get application() {\n    return this.module.application;\n  }\n  get identifier() {\n    return this.module.identifier;\n  }\n  get schema() {\n    return this.application.schema;\n  }\n  get dispatcher() {\n    return this.application.dispatcher;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get parentElement() {\n    return this.element.parentElement;\n  }\n  handleError(error, message, detail = {}) {\n    const identifier = this.identifier,\n      controller = this.controller,\n      element = this.element;\n    detail = Object.assign({\n      identifier,\n      controller,\n      element\n    }, detail);\n    this.application.handleError(error, `Error ${message}`, detail);\n  }\n  targetConnected(element, name) {\n    this.invokeControllerMethod(`${name}TargetConnected`, element);\n  }\n  targetDisconnected(element, name) {\n    this.invokeControllerMethod(`${name}TargetDisconnected`, element);\n  }\n  outletConnected(outlet, element, name) {\n    this.invokeControllerMethod(`${namespaceCamelize(name)}OutletConnected`, outlet, element);\n  }\n  outletDisconnected(outlet, element, name) {\n    this.invokeControllerMethod(`${namespaceCamelize(name)}OutletDisconnected`, outlet, element);\n  }\n  invokeControllerMethod(methodName, ...args) {\n    const controller = this.controller;\n    if (typeof controller[methodName] == \"function\") {\n      controller[methodName](...args);\n    }\n  }\n}\nfunction bless(constructor) {\n  return shadow(constructor, getBlessedProperties(constructor));\n}\nfunction shadow(constructor, properties) {\n  const shadowConstructor = extend(constructor);\n  const shadowProperties = getShadowProperties(constructor.prototype, properties);\n  Object.defineProperties(shadowConstructor.prototype, shadowProperties);\n  return shadowConstructor;\n}\nfunction getBlessedProperties(constructor) {\n  const blessings = readInheritableStaticArrayValues(constructor, \"blessings\");\n  return blessings.reduce((blessedProperties, blessing) => {\n    const properties = blessing(constructor);\n    for (const key in properties) {\n      const descriptor = blessedProperties[key] || {};\n      blessedProperties[key] = Object.assign(descriptor, properties[key]);\n    }\n    return blessedProperties;\n  }, {});\n}\nfunction getShadowProperties(prototype, properties) {\n  return getOwnKeys(properties).reduce((shadowProperties, key) => {\n    const descriptor = getShadowedDescriptor(prototype, properties, key);\n    if (descriptor) {\n      Object.assign(shadowProperties, {\n        [key]: descriptor\n      });\n    }\n    return shadowProperties;\n  }, {});\n}\nfunction getShadowedDescriptor(prototype, properties, key) {\n  const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);\n  const shadowedByValue = shadowingDescriptor && \"value\" in shadowingDescriptor;\n  if (!shadowedByValue) {\n    const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;\n    if (shadowingDescriptor) {\n      descriptor.get = shadowingDescriptor.get || descriptor.get;\n      descriptor.set = shadowingDescriptor.set || descriptor.set;\n    }\n    return descriptor;\n  }\n}\nconst getOwnKeys = (() => {\n  if (typeof Object.getOwnPropertySymbols == \"function\") {\n    return object => [...Object.getOwnPropertyNames(object), ...Object.getOwnPropertySymbols(object)];\n  } else {\n    return Object.getOwnPropertyNames;\n  }\n})();\nconst extend = (() => {\n  function extendWithReflect(constructor) {\n    function extended() {\n      return Reflect.construct(constructor, arguments, new.target);\n    }\n    extended.prototype = Object.create(constructor.prototype, {\n      constructor: {\n        value: extended\n      }\n    });\n    Reflect.setPrototypeOf(extended, constructor);\n    return extended;\n  }\n  function testReflectExtension() {\n    const a = function () {\n      this.a.call(this);\n    };\n    const b = extendWithReflect(a);\n    b.prototype.a = function () {};\n    return new b();\n  }\n  try {\n    testReflectExtension();\n    return extendWithReflect;\n  } catch (error) {\n    return constructor => class extended extends constructor {};\n  }\n})();\nfunction blessDefinition(definition) {\n  return {\n    identifier: definition.identifier,\n    controllerConstructor: bless(definition.controllerConstructor)\n  };\n}\nclass Module {\n  constructor(application, definition) {\n    this.application = application;\n    this.definition = blessDefinition(definition);\n    this.contextsByScope = new WeakMap();\n    this.connectedContexts = new Set();\n  }\n  get identifier() {\n    return this.definition.identifier;\n  }\n  get controllerConstructor() {\n    return this.definition.controllerConstructor;\n  }\n  get contexts() {\n    return Array.from(this.connectedContexts);\n  }\n  connectContextForScope(scope) {\n    const context = this.fetchContextForScope(scope);\n    this.connectedContexts.add(context);\n    context.connect();\n  }\n  disconnectContextForScope(scope) {\n    const context = this.contextsByScope.get(scope);\n    if (context) {\n      this.connectedContexts.delete(context);\n      context.disconnect();\n    }\n  }\n  fetchContextForScope(scope) {\n    let context = this.contextsByScope.get(scope);\n    if (!context) {\n      context = new Context(this, scope);\n      this.contextsByScope.set(scope, context);\n    }\n    return context;\n  }\n}\nclass ClassMap {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  has(name) {\n    return this.data.has(this.getDataKey(name));\n  }\n  get(name) {\n    return this.getAll(name)[0];\n  }\n  getAll(name) {\n    const tokenString = this.data.get(this.getDataKey(name)) || \"\";\n    return tokenize(tokenString);\n  }\n  getAttributeName(name) {\n    return this.data.getAttributeNameForKey(this.getDataKey(name));\n  }\n  getDataKey(name) {\n    return `${name}-class`;\n  }\n  get data() {\n    return this.scope.data;\n  }\n}\nclass DataMap {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get(key) {\n    const name = this.getAttributeNameForKey(key);\n    return this.element.getAttribute(name);\n  }\n  set(key, value) {\n    const name = this.getAttributeNameForKey(key);\n    this.element.setAttribute(name, value);\n    return this.get(key);\n  }\n  has(key) {\n    const name = this.getAttributeNameForKey(key);\n    return this.element.hasAttribute(name);\n  }\n  delete(key) {\n    if (this.has(key)) {\n      const name = this.getAttributeNameForKey(key);\n      this.element.removeAttribute(name);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getAttributeNameForKey(key) {\n    return `data-${this.identifier}-${dasherize(key)}`;\n  }\n}\nclass Guide {\n  constructor(logger) {\n    this.warnedKeysByObject = new WeakMap();\n    this.logger = logger;\n  }\n  warn(object, key, message) {\n    let warnedKeys = this.warnedKeysByObject.get(object);\n    if (!warnedKeys) {\n      warnedKeys = new Set();\n      this.warnedKeysByObject.set(object, warnedKeys);\n    }\n    if (!warnedKeys.has(key)) {\n      warnedKeys.add(key);\n      this.logger.warn(message, object);\n    }\n  }\n}\nfunction attributeValueContainsToken(attributeName, token) {\n  return `[${attributeName}~=\"${token}\"]`;\n}\nclass TargetSet {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get schema() {\n    return this.scope.schema;\n  }\n  has(targetName) {\n    return this.find(targetName) != null;\n  }\n  find(...targetNames) {\n    return targetNames.reduce((target, targetName) => target || this.findTarget(targetName) || this.findLegacyTarget(targetName), undefined);\n  }\n  findAll(...targetNames) {\n    return targetNames.reduce((targets, targetName) => [...targets, ...this.findAllTargets(targetName), ...this.findAllLegacyTargets(targetName)], []);\n  }\n  findTarget(targetName) {\n    const selector = this.getSelectorForTargetName(targetName);\n    return this.scope.findElement(selector);\n  }\n  findAllTargets(targetName) {\n    const selector = this.getSelectorForTargetName(targetName);\n    return this.scope.findAllElements(selector);\n  }\n  getSelectorForTargetName(targetName) {\n    const attributeName = this.schema.targetAttributeForScope(this.identifier);\n    return attributeValueContainsToken(attributeName, targetName);\n  }\n  findLegacyTarget(targetName) {\n    const selector = this.getLegacySelectorForTargetName(targetName);\n    return this.deprecate(this.scope.findElement(selector), targetName);\n  }\n  findAllLegacyTargets(targetName) {\n    const selector = this.getLegacySelectorForTargetName(targetName);\n    return this.scope.findAllElements(selector).map(element => this.deprecate(element, targetName));\n  }\n  getLegacySelectorForTargetName(targetName) {\n    const targetDescriptor = `${this.identifier}.${targetName}`;\n    return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);\n  }\n  deprecate(element, targetName) {\n    if (element) {\n      const identifier = this.identifier;\n      const attributeName = this.schema.targetAttribute;\n      const revisedAttributeName = this.schema.targetAttributeForScope(identifier);\n      this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}=\"${identifier}.${targetName}\" with ${revisedAttributeName}=\"${targetName}\". ` + `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);\n    }\n    return element;\n  }\n  get guide() {\n    return this.scope.guide;\n  }\n}\nclass OutletSet {\n  constructor(scope, controllerElement) {\n    this.scope = scope;\n    this.controllerElement = controllerElement;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get schema() {\n    return this.scope.schema;\n  }\n  has(outletName) {\n    return this.find(outletName) != null;\n  }\n  find(...outletNames) {\n    return outletNames.reduce((outlet, outletName) => outlet || this.findOutlet(outletName), undefined);\n  }\n  findAll(...outletNames) {\n    return outletNames.reduce((outlets, outletName) => [...outlets, ...this.findAllOutlets(outletName)], []);\n  }\n  getSelectorForOutletName(outletName) {\n    const attributeName = this.schema.outletAttributeForScope(this.identifier, outletName);\n    return this.controllerElement.getAttribute(attributeName);\n  }\n  findOutlet(outletName) {\n    const selector = this.getSelectorForOutletName(outletName);\n    if (selector) return this.findElement(selector, outletName);\n  }\n  findAllOutlets(outletName) {\n    const selector = this.getSelectorForOutletName(outletName);\n    return selector ? this.findAllElements(selector, outletName) : [];\n  }\n  findElement(selector, outletName) {\n    const elements = this.scope.queryElements(selector);\n    return elements.filter(element => this.matchesElement(element, selector, outletName))[0];\n  }\n  findAllElements(selector, outletName) {\n    const elements = this.scope.queryElements(selector);\n    return elements.filter(element => this.matchesElement(element, selector, outletName));\n  }\n  matchesElement(element, selector, outletName) {\n    const controllerAttribute = element.getAttribute(this.scope.schema.controllerAttribute) || \"\";\n    return element.matches(selector) && controllerAttribute.split(\" \").includes(outletName);\n  }\n}\nclass Scope {\n  constructor(schema, element, identifier, logger) {\n    this.targets = new TargetSet(this);\n    this.classes = new ClassMap(this);\n    this.data = new DataMap(this);\n    this.containsElement = element => {\n      return element.closest(this.controllerSelector) === this.element;\n    };\n    this.schema = schema;\n    this.element = element;\n    this.identifier = identifier;\n    this.guide = new Guide(logger);\n    this.outlets = new OutletSet(this.documentScope, element);\n  }\n  findElement(selector) {\n    return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);\n  }\n  findAllElements(selector) {\n    return [...(this.element.matches(selector) ? [this.element] : []), ...this.queryElements(selector).filter(this.containsElement)];\n  }\n  queryElements(selector) {\n    return Array.from(this.element.querySelectorAll(selector));\n  }\n  get controllerSelector() {\n    return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);\n  }\n  get isDocumentScope() {\n    return this.element === document.documentElement;\n  }\n  get documentScope() {\n    return this.isDocumentScope ? this : new Scope(this.schema, document.documentElement, this.identifier, this.guide.logger);\n  }\n}\nclass ScopeObserver {\n  constructor(element, schema, delegate) {\n    this.element = element;\n    this.schema = schema;\n    this.delegate = delegate;\n    this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);\n    this.scopesByIdentifierByElement = new WeakMap();\n    this.scopeReferenceCounts = new WeakMap();\n  }\n  start() {\n    this.valueListObserver.start();\n  }\n  stop() {\n    this.valueListObserver.stop();\n  }\n  get controllerAttribute() {\n    return this.schema.controllerAttribute;\n  }\n  parseValueForToken(token) {\n    const element = token.element,\n      identifier = token.content;\n    return this.parseValueForElementAndIdentifier(element, identifier);\n  }\n  parseValueForElementAndIdentifier(element, identifier) {\n    const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);\n    let scope = scopesByIdentifier.get(identifier);\n    if (!scope) {\n      scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);\n      scopesByIdentifier.set(identifier, scope);\n    }\n    return scope;\n  }\n  elementMatchedValue(element, value) {\n    const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;\n    this.scopeReferenceCounts.set(value, referenceCount);\n    if (referenceCount == 1) {\n      this.delegate.scopeConnected(value);\n    }\n  }\n  elementUnmatchedValue(element, value) {\n    const referenceCount = this.scopeReferenceCounts.get(value);\n    if (referenceCount) {\n      this.scopeReferenceCounts.set(value, referenceCount - 1);\n      if (referenceCount == 1) {\n        this.delegate.scopeDisconnected(value);\n      }\n    }\n  }\n  fetchScopesByIdentifierForElement(element) {\n    let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);\n    if (!scopesByIdentifier) {\n      scopesByIdentifier = new Map();\n      this.scopesByIdentifierByElement.set(element, scopesByIdentifier);\n    }\n    return scopesByIdentifier;\n  }\n}\nclass Router {\n  constructor(application) {\n    this.application = application;\n    this.scopeObserver = new ScopeObserver(this.element, this.schema, this);\n    this.scopesByIdentifier = new Multimap();\n    this.modulesByIdentifier = new Map();\n  }\n  get element() {\n    return this.application.element;\n  }\n  get schema() {\n    return this.application.schema;\n  }\n  get logger() {\n    return this.application.logger;\n  }\n  get controllerAttribute() {\n    return this.schema.controllerAttribute;\n  }\n  get modules() {\n    return Array.from(this.modulesByIdentifier.values());\n  }\n  get contexts() {\n    return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);\n  }\n  start() {\n    this.scopeObserver.start();\n  }\n  stop() {\n    this.scopeObserver.stop();\n  }\n  loadDefinition(definition) {\n    this.unloadIdentifier(definition.identifier);\n    const module = new Module(this.application, definition);\n    this.connectModule(module);\n    const afterLoad = definition.controllerConstructor.afterLoad;\n    if (afterLoad) {\n      afterLoad.call(definition.controllerConstructor, definition.identifier, this.application);\n    }\n  }\n  unloadIdentifier(identifier) {\n    const module = this.modulesByIdentifier.get(identifier);\n    if (module) {\n      this.disconnectModule(module);\n    }\n  }\n  getContextForElementAndIdentifier(element, identifier) {\n    const module = this.modulesByIdentifier.get(identifier);\n    if (module) {\n      return module.contexts.find(context => context.element == element);\n    }\n  }\n  proposeToConnectScopeForElementAndIdentifier(element, identifier) {\n    const scope = this.scopeObserver.parseValueForElementAndIdentifier(element, identifier);\n    if (scope) {\n      this.scopeObserver.elementMatchedValue(scope.element, scope);\n    } else {\n      console.error(`Couldn't find or create scope for identifier: \"${identifier}\" and element:`, element);\n    }\n  }\n  handleError(error, message, detail) {\n    this.application.handleError(error, message, detail);\n  }\n  createScopeForElementAndIdentifier(element, identifier) {\n    return new Scope(this.schema, element, identifier, this.logger);\n  }\n  scopeConnected(scope) {\n    this.scopesByIdentifier.add(scope.identifier, scope);\n    const module = this.modulesByIdentifier.get(scope.identifier);\n    if (module) {\n      module.connectContextForScope(scope);\n    }\n  }\n  scopeDisconnected(scope) {\n    this.scopesByIdentifier.delete(scope.identifier, scope);\n    const module = this.modulesByIdentifier.get(scope.identifier);\n    if (module) {\n      module.disconnectContextForScope(scope);\n    }\n  }\n  connectModule(module) {\n    this.modulesByIdentifier.set(module.identifier, module);\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n    scopes.forEach(scope => module.connectContextForScope(scope));\n  }\n  disconnectModule(module) {\n    this.modulesByIdentifier.delete(module.identifier);\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n    scopes.forEach(scope => module.disconnectContextForScope(scope));\n  }\n}\nconst defaultSchema = {\n  controllerAttribute: \"data-controller\",\n  actionAttribute: \"data-action\",\n  targetAttribute: \"data-target\",\n  targetAttributeForScope: identifier => `data-${identifier}-target`,\n  outletAttributeForScope: (identifier, outlet) => `data-${identifier}-${outlet}-outlet`,\n  keyMappings: Object.assign(Object.assign({\n    enter: \"Enter\",\n    tab: \"Tab\",\n    esc: \"Escape\",\n    space: \" \",\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\",\n    home: \"Home\",\n    end: \"End\",\n    page_up: \"PageUp\",\n    page_down: \"PageDown\"\n  }, objectFromEntries(\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(c => [c, c]))), objectFromEntries(\"0123456789\".split(\"\").map(n => [n, n])))\n};\nfunction objectFromEntries(array) {\n  return array.reduce((memo, [k, v]) => Object.assign(Object.assign({}, memo), {\n    [k]: v\n  }), {});\n}\nclass Application {\n  constructor(element = document.documentElement, schema = defaultSchema) {\n    this.logger = console;\n    this.debug = false;\n    this.logDebugActivity = (identifier, functionName, detail = {}) => {\n      if (this.debug) {\n        this.logFormattedMessage(identifier, functionName, detail);\n      }\n    };\n    this.element = element;\n    this.schema = schema;\n    this.dispatcher = new Dispatcher(this);\n    this.router = new Router(this);\n    this.actionDescriptorFilters = Object.assign({}, defaultActionDescriptorFilters);\n  }\n  static start(element, schema) {\n    const application = new this(element, schema);\n    application.start();\n    return application;\n  }\n  async start() {\n    await domReady();\n    this.logDebugActivity(\"application\", \"starting\");\n    this.dispatcher.start();\n    this.router.start();\n    this.logDebugActivity(\"application\", \"start\");\n  }\n  stop() {\n    this.logDebugActivity(\"application\", \"stopping\");\n    this.dispatcher.stop();\n    this.router.stop();\n    this.logDebugActivity(\"application\", \"stop\");\n  }\n  register(identifier, controllerConstructor) {\n    this.load({\n      identifier,\n      controllerConstructor\n    });\n  }\n  registerActionOption(name, filter) {\n    this.actionDescriptorFilters[name] = filter;\n  }\n  load(head, ...rest) {\n    const definitions = Array.isArray(head) ? head : [head, ...rest];\n    definitions.forEach(definition => {\n      if (definition.controllerConstructor.shouldLoad) {\n        this.router.loadDefinition(definition);\n      }\n    });\n  }\n  unload(head, ...rest) {\n    const identifiers = Array.isArray(head) ? head : [head, ...rest];\n    identifiers.forEach(identifier => this.router.unloadIdentifier(identifier));\n  }\n  get controllers() {\n    return this.router.contexts.map(context => context.controller);\n  }\n  getControllerForElementAndIdentifier(element, identifier) {\n    const context = this.router.getContextForElementAndIdentifier(element, identifier);\n    return context ? context.controller : null;\n  }\n  handleError(error, message, detail) {\n    var _a;\n    this.logger.error(`%s\\n\\n%o\\n\\n%o`, message, error, detail);\n    (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, \"\", 0, 0, error);\n  }\n  logFormattedMessage(identifier, functionName, detail = {}) {\n    detail = Object.assign({\n      application: this\n    }, detail);\n    this.logger.groupCollapsed(`${identifier} #${functionName}`);\n    this.logger.log(\"details:\", Object.assign({}, detail));\n    this.logger.groupEnd();\n  }\n}\nfunction domReady() {\n  return new Promise(resolve => {\n    if (document.readyState == \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", () => resolve());\n    } else {\n      resolve();\n    }\n  });\n}\nfunction ClassPropertiesBlessing(constructor) {\n  const classes = readInheritableStaticArrayValues(constructor, \"classes\");\n  return classes.reduce((properties, classDefinition) => {\n    return Object.assign(properties, propertiesForClassDefinition(classDefinition));\n  }, {});\n}\nfunction propertiesForClassDefinition(key) {\n  return {\n    [`${key}Class`]: {\n      get() {\n        const classes = this.classes;\n        if (classes.has(key)) {\n          return classes.get(key);\n        } else {\n          const attribute = classes.getAttributeName(key);\n          throw new Error(`Missing attribute \"${attribute}\"`);\n        }\n      }\n    },\n    [`${key}Classes`]: {\n      get() {\n        return this.classes.getAll(key);\n      }\n    },\n    [`has${capitalize(key)}Class`]: {\n      get() {\n        return this.classes.has(key);\n      }\n    }\n  };\n}\nfunction OutletPropertiesBlessing(constructor) {\n  const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n  return outlets.reduce((properties, outletDefinition) => {\n    return Object.assign(properties, propertiesForOutletDefinition(outletDefinition));\n  }, {});\n}\nfunction getOutletController(controller, element, identifier) {\n  return controller.application.getControllerForElementAndIdentifier(element, identifier);\n}\nfunction getControllerAndEnsureConnectedScope(controller, element, outletName) {\n  let outletController = getOutletController(controller, element, outletName);\n  if (outletController) return outletController;\n  controller.application.router.proposeToConnectScopeForElementAndIdentifier(element, outletName);\n  outletController = getOutletController(controller, element, outletName);\n  if (outletController) return outletController;\n}\nfunction propertiesForOutletDefinition(name) {\n  const camelizedName = namespaceCamelize(name);\n  return {\n    [`${camelizedName}Outlet`]: {\n      get() {\n        const outletElement = this.outlets.find(name);\n        const selector = this.outlets.getSelectorForOutletName(name);\n        if (outletElement) {\n          const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n          if (outletController) return outletController;\n          throw new Error(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`);\n        }\n        throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n      }\n    },\n    [`${camelizedName}Outlets`]: {\n      get() {\n        const outlets = this.outlets.findAll(name);\n        if (outlets.length > 0) {\n          return outlets.map(outletElement => {\n            const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n            if (outletController) return outletController;\n            console.warn(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`, outletElement);\n          }).filter(controller => controller);\n        }\n        return [];\n      }\n    },\n    [`${camelizedName}OutletElement`]: {\n      get() {\n        const outletElement = this.outlets.find(name);\n        const selector = this.outlets.getSelectorForOutletName(name);\n        if (outletElement) {\n          return outletElement;\n        } else {\n          throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n        }\n      }\n    },\n    [`${camelizedName}OutletElements`]: {\n      get() {\n        return this.outlets.findAll(name);\n      }\n    },\n    [`has${capitalize(camelizedName)}Outlet`]: {\n      get() {\n        return this.outlets.has(name);\n      }\n    }\n  };\n}\nfunction TargetPropertiesBlessing(constructor) {\n  const targets = readInheritableStaticArrayValues(constructor, \"targets\");\n  return targets.reduce((properties, targetDefinition) => {\n    return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));\n  }, {});\n}\nfunction propertiesForTargetDefinition(name) {\n  return {\n    [`${name}Target`]: {\n      get() {\n        const target = this.targets.find(name);\n        if (target) {\n          return target;\n        } else {\n          throw new Error(`Missing target element \"${name}\" for \"${this.identifier}\" controller`);\n        }\n      }\n    },\n    [`${name}Targets`]: {\n      get() {\n        return this.targets.findAll(name);\n      }\n    },\n    [`has${capitalize(name)}Target`]: {\n      get() {\n        return this.targets.has(name);\n      }\n    }\n  };\n}\nfunction ValuePropertiesBlessing(constructor) {\n  const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, \"values\");\n  const propertyDescriptorMap = {\n    valueDescriptorMap: {\n      get() {\n        return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {\n          const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);\n          const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);\n          return Object.assign(result, {\n            [attributeName]: valueDescriptor\n          });\n        }, {});\n      }\n    }\n  };\n  return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {\n    return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));\n  }, propertyDescriptorMap);\n}\nfunction propertiesForValueDefinitionPair(valueDefinitionPair, controller) {\n  const definition = parseValueDefinitionPair(valueDefinitionPair, controller);\n  const key = definition.key,\n    name = definition.name,\n    read = definition.reader,\n    write = definition.writer;\n  return {\n    [name]: {\n      get() {\n        const value = this.data.get(key);\n        if (value !== null) {\n          return read(value);\n        } else {\n          return definition.defaultValue;\n        }\n      },\n      set(value) {\n        if (value === undefined) {\n          this.data.delete(key);\n        } else {\n          this.data.set(key, write(value));\n        }\n      }\n    },\n    [`has${capitalize(name)}`]: {\n      get() {\n        return this.data.has(key) || definition.hasCustomDefaultValue;\n      }\n    }\n  };\n}\nfunction parseValueDefinitionPair([token, typeDefinition], controller) {\n  return valueDescriptorForTokenAndTypeDefinition({\n    controller,\n    token,\n    typeDefinition\n  });\n}\nfunction parseValueTypeConstant(constant) {\n  switch (constant) {\n    case Array:\n      return \"array\";\n    case Boolean:\n      return \"boolean\";\n    case Number:\n      return \"number\";\n    case Object:\n      return \"object\";\n    case String:\n      return \"string\";\n  }\n}\nfunction parseValueTypeDefault(defaultValue) {\n  switch (typeof defaultValue) {\n    case \"boolean\":\n      return \"boolean\";\n    case \"number\":\n      return \"number\";\n    case \"string\":\n      return \"string\";\n  }\n  if (Array.isArray(defaultValue)) return \"array\";\n  if (Object.prototype.toString.call(defaultValue) === \"[object Object]\") return \"object\";\n}\nfunction parseValueTypeObject(payload) {\n  const controller = payload.controller,\n    token = payload.token,\n    typeObject = payload.typeObject;\n  const hasType = isSomething(typeObject.type);\n  const hasDefault = isSomething(typeObject.default);\n  const fullObject = hasType && hasDefault;\n  const onlyType = hasType && !hasDefault;\n  const onlyDefault = !hasType && hasDefault;\n  const typeFromObject = parseValueTypeConstant(typeObject.type);\n  const typeFromDefaultValue = parseValueTypeDefault(payload.typeObject.default);\n  if (onlyType) return typeFromObject;\n  if (onlyDefault) return typeFromDefaultValue;\n  if (typeFromObject !== typeFromDefaultValue) {\n    const propertyPath = controller ? `${controller}.${token}` : token;\n    throw new Error(`The specified default value for the Stimulus Value \"${propertyPath}\" must match the defined type \"${typeFromObject}\". The provided default value of \"${typeObject.default}\" is of type \"${typeFromDefaultValue}\".`);\n  }\n  if (fullObject) return typeFromObject;\n}\nfunction parseValueTypeDefinition(payload) {\n  const controller = payload.controller,\n    token = payload.token,\n    typeDefinition = payload.typeDefinition;\n  const typeObject = {\n    controller,\n    token,\n    typeObject: typeDefinition\n  };\n  const typeFromObject = parseValueTypeObject(typeObject);\n  const typeFromDefaultValue = parseValueTypeDefault(typeDefinition);\n  const typeFromConstant = parseValueTypeConstant(typeDefinition);\n  const type = typeFromObject || typeFromDefaultValue || typeFromConstant;\n  if (type) return type;\n  const propertyPath = controller ? `${controller}.${typeDefinition}` : token;\n  throw new Error(`Unknown value type \"${propertyPath}\" for \"${token}\" value`);\n}\nfunction defaultValueForDefinition(typeDefinition) {\n  const constant = parseValueTypeConstant(typeDefinition);\n  if (constant) return defaultValuesByType[constant];\n  const hasDefault = hasProperty(typeDefinition, \"default\");\n  const hasType = hasProperty(typeDefinition, \"type\");\n  const typeObject = typeDefinition;\n  if (hasDefault) return typeObject.default;\n  if (hasType) {\n    const type = typeObject.type;\n    const constantFromType = parseValueTypeConstant(type);\n    if (constantFromType) return defaultValuesByType[constantFromType];\n  }\n  return typeDefinition;\n}\nfunction valueDescriptorForTokenAndTypeDefinition(payload) {\n  const token = payload.token,\n    typeDefinition = payload.typeDefinition;\n  const key = `${dasherize(token)}-value`;\n  const type = parseValueTypeDefinition(payload);\n  return {\n    type,\n    key,\n    name: camelize(key),\n    get defaultValue() {\n      return defaultValueForDefinition(typeDefinition);\n    },\n    get hasCustomDefaultValue() {\n      return parseValueTypeDefault(typeDefinition) !== undefined;\n    },\n    reader: readers[type],\n    writer: writers[type] || writers.default\n  };\n}\nconst defaultValuesByType = {\n  get array() {\n    return [];\n  },\n  boolean: false,\n  number: 0,\n  get object() {\n    return {};\n  },\n  string: \"\"\n};\nconst readers = {\n  array(value) {\n    const array = JSON.parse(value);\n    if (!Array.isArray(array)) {\n      throw new TypeError(`expected value of type \"array\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(array)}\"`);\n    }\n    return array;\n  },\n  boolean(value) {\n    return !(value == \"0\" || String(value).toLowerCase() == \"false\");\n  },\n  number(value) {\n    return Number(value.replace(/_/g, \"\"));\n  },\n  object(value) {\n    const object = JSON.parse(value);\n    if (object === null || typeof object != \"object\" || Array.isArray(object)) {\n      throw new TypeError(`expected value of type \"object\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(object)}\"`);\n    }\n    return object;\n  },\n  string(value) {\n    return value;\n  }\n};\nconst writers = {\n  default: writeString,\n  array: writeJSON,\n  object: writeJSON\n};\nfunction writeJSON(value) {\n  return JSON.stringify(value);\n}\nfunction writeString(value) {\n  return `${value}`;\n}\nclass Controller {\n  constructor(context) {\n    this.context = context;\n  }\n  static get shouldLoad() {\n    return true;\n  }\n  static afterLoad(_identifier, _application) {\n    return;\n  }\n  get application() {\n    return this.context.application;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get targets() {\n    return this.scope.targets;\n  }\n  get outlets() {\n    return this.scope.outlets;\n  }\n  get classes() {\n    return this.scope.classes;\n  }\n  get data() {\n    return this.scope.data;\n  }\n  initialize() {}\n  connect() {}\n  disconnect() {}\n  dispatch(eventName, {\n    target = this.element,\n    detail = {},\n    prefix = this.identifier,\n    bubbles = true,\n    cancelable = true\n  } = {}) {\n    const type = prefix ? `${prefix}:${eventName}` : eventName;\n    const event = new CustomEvent(type, {\n      detail,\n      bubbles,\n      cancelable\n    });\n    target.dispatchEvent(event);\n    return event;\n  }\n}\nController.blessings = [ClassPropertiesBlessing, TargetPropertiesBlessing, ValuePropertiesBlessing, OutletPropertiesBlessing];\nController.targets = [];\nController.outlets = [];\nController.values = {};\nexport { Application, AttributeObserver, Context, Controller, ElementObserver, IndexedMultimap, Multimap, SelectorObserver, StringMapObserver, TokenListObserver, ValueListObserver, add, defaultSchema, del, fetch, prune };","(function ($) {\n  var cocoon_element_counter = 0;\n  var create_new_id = function () {\n    return new Date().getTime() + cocoon_element_counter++;\n  };\n  var newcontent_braced = function (id) {\n    return '[' + id + ']$1';\n  };\n  var newcontent_underscord = function (id) {\n    return '_' + id + '_$1';\n  };\n  var getInsertionNodeElem = function (insertionNode, insertionTraversal, $this) {\n    if (!insertionNode) {\n      return $this.parent();\n    }\n    if (typeof insertionNode == 'function') {\n      if (insertionTraversal) {\n        console.warn('association-insertion-traversal is ignored, because association-insertion-node is given as a function.');\n      }\n      return insertionNode($this);\n    }\n    if (typeof insertionNode == 'string') {\n      if (insertionTraversal) {\n        return $this[insertionTraversal](insertionNode);\n      } else {\n        return insertionNode == \"this\" ? $this : $(insertionNode);\n      }\n    }\n  };\n  $(document).on('click', '.add_fields', function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var $this = $(this),\n      assoc = $this.data('association'),\n      assocs = $this.data('associations'),\n      content = $this.data('association-insertion-template'),\n      insertionMethod = $this.data('association-insertion-method') || $this.data('association-insertion-position') || 'before',\n      insertionNode = $this.data('association-insertion-node'),\n      insertionTraversal = $this.data('association-insertion-traversal'),\n      count = parseInt($this.data('count'), 10),\n      regexp_braced = new RegExp('\\\\[new_' + assoc + '\\\\](.*?\\\\s)', 'g'),\n      regexp_underscord = new RegExp('_new_' + assoc + '_(\\\\w*)', 'g'),\n      new_id = create_new_id(),\n      new_content = content.replace(regexp_braced, newcontent_braced(new_id)),\n      new_contents = [],\n      originalEvent = e;\n    if (new_content == content) {\n      regexp_braced = new RegExp('\\\\[new_' + assocs + '\\\\](.*?\\\\s)', 'g');\n      regexp_underscord = new RegExp('_new_' + assocs + '_(\\\\w*)', 'g');\n      new_content = content.replace(regexp_braced, newcontent_braced(new_id));\n    }\n    new_content = new_content.replace(regexp_underscord, newcontent_underscord(new_id));\n    new_contents = [new_content];\n    count = isNaN(count) ? 1 : Math.max(count, 1);\n    count -= 1;\n    while (count) {\n      new_id = create_new_id();\n      new_content = content.replace(regexp_braced, newcontent_braced(new_id));\n      new_content = new_content.replace(regexp_underscord, newcontent_underscord(new_id));\n      new_contents.push(new_content);\n      count -= 1;\n    }\n    var insertionNodeElem = getInsertionNodeElem(insertionNode, insertionTraversal, $this);\n    if (!insertionNodeElem || insertionNodeElem.length == 0) {\n      console.warn(\"Couldn't find the element to insert the template. Make sure your `data-association-insertion-*` on `link_to_add_association` is correct.\");\n    }\n    $.each(new_contents, function (i, node) {\n      var contentNode = $(node);\n      var before_insert = jQuery.Event('cocoon:before-insert');\n      insertionNodeElem.trigger(before_insert, [contentNode, originalEvent]);\n      if (!before_insert.isDefaultPrevented()) {\n        // allow any of the jquery dom manipulation methods (after, before, append, prepend, etc)\n        // to be called on the node.  allows the insertion node to be the parent of the inserted\n        // code and doesn't force it to be a sibling like after/before does. default: 'before'\n        var addedContent = insertionNodeElem[insertionMethod](contentNode);\n        insertionNodeElem.trigger('cocoon:after-insert', [contentNode, originalEvent]);\n      }\n    });\n  });\n  $(document).on('click', '.remove_fields.dynamic, .remove_fields.existing', function (e) {\n    var $this = $(this),\n      wrapper_class = $this.data('wrapper-class') || 'nested-fields',\n      node_to_delete = $this.closest('.' + wrapper_class),\n      trigger_node = node_to_delete.parent(),\n      originalEvent = e;\n    e.preventDefault();\n    e.stopPropagation();\n    var before_remove = jQuery.Event('cocoon:before-remove');\n    trigger_node.trigger(before_remove, [node_to_delete, originalEvent]);\n    if (!before_remove.isDefaultPrevented()) {\n      var timeout = trigger_node.data('remove-timeout') || 0;\n      setTimeout(function () {\n        if ($this.hasClass('dynamic')) {\n          node_to_delete.detach();\n        } else {\n          $this.prev(\"input[type=hidden]\").val(\"1\");\n          node_to_delete.hide();\n        }\n        trigger_node.trigger('cocoon:after-remove', [node_to_delete, originalEvent]);\n      }, timeout);\n    }\n  });\n  $(document).on(\"ready page:load turbolinks:load\", function () {\n    $('.remove_fields.existing.destroyed').each(function (i, obj) {\n      var $this = $(this),\n        wrapper_class = $this.data('wrapper-class') || 'nested-fields';\n      $this.closest('.' + wrapper_class).hide();\n    });\n  });\n})(jQuery);","(function (global, factory) {\n  typeof exports === \"object\" && typeof module !== \"undefined\" ? factory(exports) : typeof define === \"function\" && define.amd ? define([\"exports\"], factory) : factory(global.ActiveStorage = {});\n})(this, function (exports) {\n  \"use strict\";\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  var sparkMd5 = createCommonjsModule(function (module, exports) {\n    (function (factory) {\n      {\n        module.exports = factory();\n      }\n    })(function (undefined) {\n      var hex_chr = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n      function md5cycle(x, k) {\n        var a = x[0],\n          b = x[1],\n          c = x[2],\n          d = x[3];\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b = (b << 22 | b >>> 10) + c | 0;\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b = (b << 20 | b >>> 12) + c | 0;\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b = (b << 23 | b >>> 9) + c | 0;\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b = (b << 21 | b >>> 11) + c | 0;\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n      }\n      function md5blk(s) {\n        var md5blks = [],\n          i;\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n      }\n      function md5blk_array(a) {\n        var md5blks = [],\n          i;\n        for (i = 0; i < 64; i += 4) {\n          md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n      }\n      function md51(s) {\n        var n = s.length,\n          state = [1732584193, -271733879, -1732584194, 271733878],\n          i,\n          length,\n          tail,\n          tmp,\n          lo,\n          hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function md51_array(a) {\n        var n = a.length,\n          state = [1732584193, -271733879, -1732584194, 271733878],\n          i,\n          length,\n          tail,\n          tmp,\n          lo,\n          hi;\n        for (i = 64; i <= n; i += 64) {\n          md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n        a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= a[i] << (i % 4 << 3);\n        }\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(state, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(state, tail);\n        return state;\n      }\n      function rhex(n) {\n        var s = \"\",\n          j;\n        for (j = 0; j < 4; j += 1) {\n          s += hex_chr[n >> j * 8 + 4 & 15] + hex_chr[n >> j * 8 & 15];\n        }\n        return s;\n      }\n      function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n          x[i] = rhex(x[i]);\n        }\n        return x.join(\"\");\n      }\n      if (hex(md51(\"hello\")) !== \"5d41402abc4b2a76b9719d911017c592\") ;\n      if (typeof ArrayBuffer !== \"undefined\" && !ArrayBuffer.prototype.slice) {\n        (function () {\n          function clamp(val, length) {\n            val = val | 0 || 0;\n            if (val < 0) {\n              return Math.max(val + length, 0);\n            }\n            return Math.min(val, length);\n          }\n          ArrayBuffer.prototype.slice = function (from, to) {\n            var length = this.byteLength,\n              begin = clamp(from, length),\n              end = length,\n              num,\n              target,\n              targetArray,\n              sourceArray;\n            if (to !== undefined) {\n              end = clamp(to, length);\n            }\n            if (begin > end) {\n              return new ArrayBuffer(0);\n            }\n            num = end - begin;\n            target = new ArrayBuffer(num);\n            targetArray = new Uint8Array(target);\n            sourceArray = new Uint8Array(this, begin, num);\n            targetArray.set(sourceArray);\n            return target;\n          };\n        })();\n      }\n      function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n          str = unescape(encodeURIComponent(str));\n        }\n        return str;\n      }\n      function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n          buff = new ArrayBuffer(length),\n          arr = new Uint8Array(buff),\n          i;\n        for (i = 0; i < length; i += 1) {\n          arr[i] = str.charCodeAt(i);\n        }\n        return returnUInt8Array ? arr : buff;\n      }\n      function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n      }\n      function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n        return returnUInt8Array ? result : result.buffer;\n      }\n      function hexToBinaryString(hex) {\n        var bytes = [],\n          length = hex.length,\n          x;\n        for (x = 0; x < length - 1; x += 2) {\n          bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n        return String.fromCharCode.apply(String, bytes);\n      }\n      function SparkMD5() {\n        this.reset();\n      }\n      SparkMD5.prototype.append = function (str) {\n        this.appendBinary(toUtf8(str));\n        return this;\n      };\n      SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n        var length = this._buff.length,\n          i;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n        this._buff = this._buff.substring(i - 64);\n        return this;\n      };\n      SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n          length = buff.length,\n          i,\n          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n      SparkMD5.prototype.reset = function () {\n        this._buff = \"\";\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n        return this;\n      };\n      SparkMD5.prototype.getState = function () {\n        return {\n          buff: this._buff,\n          length: this._length,\n          hash: this._hash\n        };\n      };\n      SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n        return this;\n      };\n      SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n      };\n      SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n          tmp,\n          lo,\n          hi;\n        tail[i >> 2] |= 128 << (i % 4 << 3);\n        if (i > 55) {\n          md5cycle(this._hash, tail);\n          for (i = 0; i < 16; i += 1) {\n            tail[i] = 0;\n          }\n        }\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n      };\n      SparkMD5.hash = function (str, raw) {\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n      };\n      SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n          ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n      SparkMD5.ArrayBuffer = function () {\n        this.reset();\n      };\n      SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n          length = buff.length,\n          i;\n        this._length += arr.byteLength;\n        for (i = 64; i <= length; i += 64) {\n          md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n        this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n        return this;\n      };\n      SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n          length = buff.length,\n          tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n          i,\n          ret;\n        for (i = 0; i < length; i += 1) {\n          tail[i >> 2] |= buff[i] << (i % 4 << 3);\n        }\n        this._finish(tail, length);\n        ret = hex(this._hash);\n        if (raw) {\n          ret = hexToBinaryString(ret);\n        }\n        this.reset();\n        return ret;\n      };\n      SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n        return this;\n      };\n      SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n        return state;\n      };\n      SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n        return SparkMD5.prototype.setState.call(this, state);\n      };\n      SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n      SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n      SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n          ret = hex(hash);\n        return raw ? hexToBinaryString(ret) : ret;\n      };\n      return SparkMD5;\n    });\n  });\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\n  var FileChecksum = function () {\n    createClass(FileChecksum, null, [{\n      key: \"create\",\n      value: function create(file, callback) {\n        var instance = new FileChecksum(file);\n        instance.create(callback);\n      }\n    }]);\n    function FileChecksum(file) {\n      classCallCheck(this, FileChecksum);\n      this.file = file;\n      this.chunkSize = 2097152;\n      this.chunkCount = Math.ceil(this.file.size / this.chunkSize);\n      this.chunkIndex = 0;\n    }\n    createClass(FileChecksum, [{\n      key: \"create\",\n      value: function create(callback) {\n        var _this = this;\n        this.callback = callback;\n        this.md5Buffer = new sparkMd5.ArrayBuffer();\n        this.fileReader = new FileReader();\n        this.fileReader.addEventListener(\"load\", function (event) {\n          return _this.fileReaderDidLoad(event);\n        });\n        this.fileReader.addEventListener(\"error\", function (event) {\n          return _this.fileReaderDidError(event);\n        });\n        this.readNextChunk();\n      }\n    }, {\n      key: \"fileReaderDidLoad\",\n      value: function fileReaderDidLoad(event) {\n        this.md5Buffer.append(event.target.result);\n        if (!this.readNextChunk()) {\n          var binaryDigest = this.md5Buffer.end(true);\n          var base64digest = btoa(binaryDigest);\n          this.callback(null, base64digest);\n        }\n      }\n    }, {\n      key: \"fileReaderDidError\",\n      value: function fileReaderDidError(event) {\n        this.callback(\"Error reading \" + this.file.name);\n      }\n    }, {\n      key: \"readNextChunk\",\n      value: function readNextChunk() {\n        if (this.chunkIndex < this.chunkCount || this.chunkIndex == 0 && this.chunkCount == 0) {\n          var start = this.chunkIndex * this.chunkSize;\n          var end = Math.min(start + this.chunkSize, this.file.size);\n          var bytes = fileSlice.call(this.file, start, end);\n          this.fileReader.readAsArrayBuffer(bytes);\n          this.chunkIndex++;\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }]);\n    return FileChecksum;\n  }();\n  function getMetaValue(name) {\n    var element = findElement(document.head, 'meta[name=\"' + name + '\"]');\n    if (element) {\n      return element.getAttribute(\"content\");\n    }\n  }\n  function findElements(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root;\n      root = document;\n    }\n    var elements = root.querySelectorAll(selector);\n    return toArray$1(elements);\n  }\n  function findElement(root, selector) {\n    if (typeof root == \"string\") {\n      selector = root;\n      root = document;\n    }\n    return root.querySelector(selector);\n  }\n  function dispatchEvent(element, type) {\n    var eventInit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var disabled = element.disabled;\n    var bubbles = eventInit.bubbles,\n      cancelable = eventInit.cancelable,\n      detail = eventInit.detail;\n    var event = document.createEvent(\"Event\");\n    event.initEvent(type, bubbles || true, cancelable || true);\n    event.detail = detail || {};\n    try {\n      element.disabled = false;\n      element.dispatchEvent(event);\n    } finally {\n      element.disabled = disabled;\n    }\n    return event;\n  }\n  function toArray$1(value) {\n    if (Array.isArray(value)) {\n      return value;\n    } else if (Array.from) {\n      return Array.from(value);\n    } else {\n      return [].slice.call(value);\n    }\n  }\n  var BlobRecord = function () {\n    function BlobRecord(file, checksum, url) {\n      var _this = this;\n      classCallCheck(this, BlobRecord);\n      this.file = file;\n      this.attributes = {\n        filename: file.name,\n        content_type: file.type || \"application/octet-stream\",\n        byte_size: file.size,\n        checksum: checksum\n      };\n      this.xhr = new XMLHttpRequest();\n      this.xhr.open(\"POST\", url, true);\n      this.xhr.responseType = \"json\";\n      this.xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      this.xhr.setRequestHeader(\"Accept\", \"application/json\");\n      this.xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n      var csrfToken = getMetaValue(\"csrf-token\");\n      if (csrfToken != undefined) {\n        this.xhr.setRequestHeader(\"X-CSRF-Token\", csrfToken);\n      }\n      this.xhr.addEventListener(\"load\", function (event) {\n        return _this.requestDidLoad(event);\n      });\n      this.xhr.addEventListener(\"error\", function (event) {\n        return _this.requestDidError(event);\n      });\n    }\n    createClass(BlobRecord, [{\n      key: \"create\",\n      value: function create(callback) {\n        this.callback = callback;\n        this.xhr.send(JSON.stringify({\n          blob: this.attributes\n        }));\n      }\n    }, {\n      key: \"requestDidLoad\",\n      value: function requestDidLoad(event) {\n        if (this.status >= 200 && this.status < 300) {\n          var response = this.response;\n          var direct_upload = response.direct_upload;\n          delete response.direct_upload;\n          this.attributes = response;\n          this.directUploadData = direct_upload;\n          this.callback(null, this.toJSON());\n        } else {\n          this.requestDidError(event);\n        }\n      }\n    }, {\n      key: \"requestDidError\",\n      value: function requestDidError(event) {\n        this.callback('Error creating Blob for \"' + this.file.name + '\". Status: ' + this.status);\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        var result = {};\n        for (var key in this.attributes) {\n          result[key] = this.attributes[key];\n        }\n        return result;\n      }\n    }, {\n      key: \"status\",\n      get: function get$$1() {\n        return this.xhr.status;\n      }\n    }, {\n      key: \"response\",\n      get: function get$$1() {\n        var _xhr = this.xhr,\n          responseType = _xhr.responseType,\n          response = _xhr.response;\n        if (responseType == \"json\") {\n          return response;\n        } else {\n          return JSON.parse(response);\n        }\n      }\n    }]);\n    return BlobRecord;\n  }();\n  var BlobUpload = function () {\n    function BlobUpload(blob) {\n      var _this = this;\n      classCallCheck(this, BlobUpload);\n      this.blob = blob;\n      this.file = blob.file;\n      var _blob$directUploadDat = blob.directUploadData,\n        url = _blob$directUploadDat.url,\n        headers = _blob$directUploadDat.headers;\n      this.xhr = new XMLHttpRequest();\n      this.xhr.open(\"PUT\", url, true);\n      this.xhr.responseType = \"text\";\n      for (var key in headers) {\n        this.xhr.setRequestHeader(key, headers[key]);\n      }\n      this.xhr.addEventListener(\"load\", function (event) {\n        return _this.requestDidLoad(event);\n      });\n      this.xhr.addEventListener(\"error\", function (event) {\n        return _this.requestDidError(event);\n      });\n    }\n    createClass(BlobUpload, [{\n      key: \"create\",\n      value: function create(callback) {\n        this.callback = callback;\n        this.xhr.send(this.file.slice());\n      }\n    }, {\n      key: \"requestDidLoad\",\n      value: function requestDidLoad(event) {\n        var _xhr = this.xhr,\n          status = _xhr.status,\n          response = _xhr.response;\n        if (status >= 200 && status < 300) {\n          this.callback(null, response);\n        } else {\n          this.requestDidError(event);\n        }\n      }\n    }, {\n      key: \"requestDidError\",\n      value: function requestDidError(event) {\n        this.callback('Error storing \"' + this.file.name + '\". Status: ' + this.xhr.status);\n      }\n    }]);\n    return BlobUpload;\n  }();\n  var id = 0;\n  var DirectUpload = function () {\n    function DirectUpload(file, url, delegate) {\n      classCallCheck(this, DirectUpload);\n      this.id = ++id;\n      this.file = file;\n      this.url = url;\n      this.delegate = delegate;\n    }\n    createClass(DirectUpload, [{\n      key: \"create\",\n      value: function create(callback) {\n        var _this = this;\n        FileChecksum.create(this.file, function (error, checksum) {\n          if (error) {\n            callback(error);\n            return;\n          }\n          var blob = new BlobRecord(_this.file, checksum, _this.url);\n          notify(_this.delegate, \"directUploadWillCreateBlobWithXHR\", blob.xhr);\n          blob.create(function (error) {\n            if (error) {\n              callback(error);\n            } else {\n              var upload = new BlobUpload(blob);\n              notify(_this.delegate, \"directUploadWillStoreFileWithXHR\", upload.xhr);\n              upload.create(function (error) {\n                if (error) {\n                  callback(error);\n                } else {\n                  callback(null, blob.toJSON());\n                }\n              });\n            }\n          });\n        });\n      }\n    }]);\n    return DirectUpload;\n  }();\n  function notify(object, methodName) {\n    if (object && typeof object[methodName] == \"function\") {\n      for (var _len = arguments.length, messages = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        messages[_key - 2] = arguments[_key];\n      }\n      return object[methodName].apply(object, messages);\n    }\n  }\n  var DirectUploadController = function () {\n    function DirectUploadController(input, file) {\n      classCallCheck(this, DirectUploadController);\n      this.input = input;\n      this.file = file;\n      this.directUpload = new DirectUpload(this.file, this.url, this);\n      this.dispatch(\"initialize\");\n    }\n    createClass(DirectUploadController, [{\n      key: \"start\",\n      value: function start(callback) {\n        var _this = this;\n        var hiddenInput = document.createElement(\"input\");\n        hiddenInput.type = \"hidden\";\n        hiddenInput.name = this.input.name;\n        this.input.insertAdjacentElement(\"beforebegin\", hiddenInput);\n        this.dispatch(\"start\");\n        this.directUpload.create(function (error, attributes) {\n          if (error) {\n            hiddenInput.parentNode.removeChild(hiddenInput);\n            _this.dispatchError(error);\n          } else {\n            hiddenInput.value = attributes.signed_id;\n          }\n          _this.dispatch(\"end\");\n          callback(error);\n        });\n      }\n    }, {\n      key: \"uploadRequestDidProgress\",\n      value: function uploadRequestDidProgress(event) {\n        var progress = event.loaded / event.total * 100;\n        if (progress) {\n          this.dispatch(\"progress\", {\n            progress: progress\n          });\n        }\n      }\n    }, {\n      key: \"dispatch\",\n      value: function dispatch(name) {\n        var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        detail.file = this.file;\n        detail.id = this.directUpload.id;\n        return dispatchEvent(this.input, \"direct-upload:\" + name, {\n          detail: detail\n        });\n      }\n    }, {\n      key: \"dispatchError\",\n      value: function dispatchError(error) {\n        var event = this.dispatch(\"error\", {\n          error: error\n        });\n        if (!event.defaultPrevented) {\n          alert(error);\n        }\n      }\n    }, {\n      key: \"directUploadWillCreateBlobWithXHR\",\n      value: function directUploadWillCreateBlobWithXHR(xhr) {\n        this.dispatch(\"before-blob-request\", {\n          xhr: xhr\n        });\n      }\n    }, {\n      key: \"directUploadWillStoreFileWithXHR\",\n      value: function directUploadWillStoreFileWithXHR(xhr) {\n        var _this2 = this;\n        this.dispatch(\"before-storage-request\", {\n          xhr: xhr\n        });\n        xhr.upload.addEventListener(\"progress\", function (event) {\n          return _this2.uploadRequestDidProgress(event);\n        });\n      }\n    }, {\n      key: \"url\",\n      get: function get$$1() {\n        return this.input.getAttribute(\"data-direct-upload-url\");\n      }\n    }]);\n    return DirectUploadController;\n  }();\n  var inputSelector = \"input[type=file][data-direct-upload-url]:not([disabled])\";\n  var DirectUploadsController = function () {\n    function DirectUploadsController(form) {\n      classCallCheck(this, DirectUploadsController);\n      this.form = form;\n      this.inputs = findElements(form, inputSelector).filter(function (input) {\n        return input.files.length;\n      });\n    }\n    createClass(DirectUploadsController, [{\n      key: \"start\",\n      value: function start(callback) {\n        var _this = this;\n        var controllers = this.createDirectUploadControllers();\n        var startNextController = function startNextController() {\n          var controller = controllers.shift();\n          if (controller) {\n            controller.start(function (error) {\n              if (error) {\n                callback(error);\n                _this.dispatch(\"end\");\n              } else {\n                startNextController();\n              }\n            });\n          } else {\n            callback();\n            _this.dispatch(\"end\");\n          }\n        };\n        this.dispatch(\"start\");\n        startNextController();\n      }\n    }, {\n      key: \"createDirectUploadControllers\",\n      value: function createDirectUploadControllers() {\n        var controllers = [];\n        this.inputs.forEach(function (input) {\n          toArray$1(input.files).forEach(function (file) {\n            var controller = new DirectUploadController(input, file);\n            controllers.push(controller);\n          });\n        });\n        return controllers;\n      }\n    }, {\n      key: \"dispatch\",\n      value: function dispatch(name) {\n        var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        return dispatchEvent(this.form, \"direct-uploads:\" + name, {\n          detail: detail\n        });\n      }\n    }]);\n    return DirectUploadsController;\n  }();\n  var processingAttribute = \"data-direct-uploads-processing\";\n  var submitButtonsByForm = new WeakMap();\n  var started = false;\n  function start() {\n    if (!started) {\n      started = true;\n      document.addEventListener(\"click\", didClick, true);\n      document.addEventListener(\"submit\", didSubmitForm);\n      document.addEventListener(\"ajax:before\", didSubmitRemoteElement);\n    }\n  }\n  function didClick(event) {\n    var target = event.target;\n    if ((target.tagName == \"INPUT\" || target.tagName == \"BUTTON\") && target.type == \"submit\" && target.form) {\n      submitButtonsByForm.set(target.form, target);\n    }\n  }\n  function didSubmitForm(event) {\n    handleFormSubmissionEvent(event);\n  }\n  function didSubmitRemoteElement(event) {\n    if (event.target.tagName == \"FORM\") {\n      handleFormSubmissionEvent(event);\n    }\n  }\n  function handleFormSubmissionEvent(event) {\n    var form = event.target;\n    if (form.hasAttribute(processingAttribute)) {\n      event.preventDefault();\n      return;\n    }\n    var controller = new DirectUploadsController(form);\n    var inputs = controller.inputs;\n    if (inputs.length) {\n      event.preventDefault();\n      form.setAttribute(processingAttribute, \"\");\n      inputs.forEach(disable);\n      controller.start(function (error) {\n        form.removeAttribute(processingAttribute);\n        if (error) {\n          inputs.forEach(enable);\n        } else {\n          submitForm(form);\n        }\n      });\n    }\n  }\n  function submitForm(form) {\n    var button = submitButtonsByForm.get(form) || findElement(form, \"input[type=submit], button[type=submit]\");\n    if (button) {\n      var _button = button,\n        disabled = _button.disabled;\n      button.disabled = false;\n      button.focus();\n      button.click();\n      button.disabled = disabled;\n    } else {\n      button = document.createElement(\"input\");\n      button.type = \"submit\";\n      button.style.display = \"none\";\n      form.appendChild(button);\n      button.click();\n      form.removeChild(button);\n    }\n    submitButtonsByForm.delete(form);\n  }\n  function disable(input) {\n    input.disabled = true;\n  }\n  function enable(input) {\n    input.disabled = false;\n  }\n  function autostart() {\n    if (window.ActiveStorage) {\n      start();\n    }\n  }\n  setTimeout(autostart, 1);\n  exports.start = start;\n  exports.DirectUpload = DirectUpload;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n});","/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/main/actionview/app/assets/javascripts\nReleased under the MIT license\n */;\n(function () {\n  var context = this;\n  (function () {\n    (function () {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form:not([data-turbo=true])',\n        formInputClickSelector: 'form:not([data-turbo=true]) input[type=submit], form:not([data-turbo=true]) input[type=image], form:not([data-turbo=true]) button[type=submit], form:not([data-turbo=true]) button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n    }).call(this);\n  }).call(context);\n  var Rails = context.Rails;\n  (function () {\n    (function () {\n      var nonce;\n      nonce = null;\n      Rails.loadCSPNonce = function () {\n        var ref;\n        return nonce = (ref = document.querySelector(\"meta[name=csp-nonce]\")) != null ? ref.content : void 0;\n      };\n      Rails.cspNonce = function () {\n        return nonce != null ? nonce : Rails.loadCSPNonce();\n      };\n    }).call(this);\n    (function () {\n      var expando, m;\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n      Rails.matches = function (element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n      expando = '_ujsData';\n      Rails.getData = function (element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n      Rails.setData = function (element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n        return element[expando][key] = value;\n      };\n      Rails.isContentEditable = function (element) {\n        var isEditable;\n        isEditable = false;\n        while (true) {\n          if (element.isContentEditable) {\n            isEditable = true;\n            break;\n          }\n          element = element.parentElement;\n          if (!element) {\n            break;\n          }\n        }\n        return isEditable;\n      };\n      Rails.$ = function (selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n    }).call(this);\n    (function () {\n      var $, csrfParam, csrfToken;\n      $ = Rails.$;\n      csrfToken = Rails.csrfToken = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n      csrfParam = Rails.csrfParam = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n      Rails.CSRFProtection = function (xhr) {\n        var token;\n        token = csrfToken();\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n      Rails.refreshCSRFTokens = function () {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n        if (token != null && param != null) {\n          return $('form input[name=\"' + param + '\"]').forEach(function (input) {\n            return input.value = token;\n          });\n        }\n      };\n    }).call(this);\n    (function () {\n      var CustomEvent, fire, matches, preventDefault;\n      matches = Rails.matches;\n      CustomEvent = window.CustomEvent;\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function (event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n        CustomEvent.prototype = window.Event.prototype;\n        preventDefault = CustomEvent.prototype.preventDefault;\n        CustomEvent.prototype.preventDefault = function () {\n          var result;\n          result = preventDefault.call(this);\n          if (this.cancelable && !this.defaultPrevented) {\n            Object.defineProperty(this, 'defaultPrevented', {\n              get: function () {\n                return true;\n              }\n            });\n          }\n          return result;\n        };\n      }\n      fire = Rails.fire = function (obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n      Rails.stopEverything = function (e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n      Rails.delegate = function (element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function (e) {\n          var target;\n          target = e.target;\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n    }).call(this);\n    (function () {\n      var AcceptHeaders, CSRFProtection, createXHR, cspNonce, fire, prepareOptions, processResponse;\n      cspNonce = Rails.cspNonce, CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n      Rails.ajax = function (options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function () {\n          var ref, response;\n          response = processResponse((ref = xhr.response) != null ? ref : xhr.responseText, xhr.getResponseHeader('Content-Type'));\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n        if (options.beforeSend != null && !options.beforeSend(xhr, options)) {\n          return false;\n        }\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        }\n      };\n      prepareOptions = function (options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n        options.accept = AcceptHeaders[options.dataType];\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n        return options;\n      };\n      createXHR = function (options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n          CSRFProtection(xhr);\n        }\n        xhr.withCredentials = !!options.withCredentials;\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n        return xhr;\n      };\n      processResponse = function (response, type) {\n        var parser, script;\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.setAttribute('nonce', cspNonce());\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n        return response;\n      };\n      Rails.href = function (element) {\n        return element.href;\n      };\n      Rails.isCrossDomain = function (url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n        try {\n          urlAnchor.href = url;\n          return !((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host || originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host);\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n    }).call(this);\n    (function () {\n      var matches, toArray;\n      matches = Rails.matches;\n      toArray = function (e) {\n        return Array.prototype.slice.call(e);\n      };\n      Rails.serializeElement = function (element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n        params = [];\n        inputs.forEach(function (input) {\n          if (!input.name || input.disabled) {\n            return;\n          }\n          if (matches(input, 'fieldset[disabled] *')) {\n            return;\n          }\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function (option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n        return params.map(function (param) {\n          if (param.name != null) {\n            return encodeURIComponent(param.name) + \"=\" + encodeURIComponent(param.value);\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n      Rails.formElements = function (form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function (el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n    }).call(this);\n    (function () {\n      var allowAction, fire, stopEverything;\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n      Rails.handleConfirm = function (e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n      Rails.confirm = function (message, element) {\n        return confirm(message);\n      };\n      allowAction = function (element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n        if (!message) {\n          return true;\n        }\n        answer = false;\n        if (fire(element, 'confirm')) {\n          try {\n            answer = Rails.confirm(message, element);\n          } catch (error) {}\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n        return answer && callback;\n      };\n    }).call(this);\n    (function () {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, isContentEditable, isXhrRedirect, matches, setData, stopEverything;\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements, isContentEditable = Rails.isContentEditable;\n      Rails.handleDisabledElement = function (e) {\n        var element;\n        element = this;\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n      Rails.enableElement = function (e) {\n        var element;\n        if (e instanceof Event) {\n          if (isXhrRedirect(e)) {\n            return;\n          }\n          element = e.target;\n        } else {\n          element = e;\n        }\n        if (isContentEditable(element)) {\n          return;\n        }\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n      Rails.disableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (isContentEditable(element)) {\n          return;\n        }\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n      disableLinkElement = function (element) {\n        var replacement;\n        if (getData(element, 'ujs:disabled')) {\n          return;\n        }\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n      enableLinkElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n      disableFormElements = function (form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n      disableFormElement = function (element) {\n        var replacement;\n        if (getData(element, 'ujs:disabled')) {\n          return;\n        }\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n      enableFormElements = function (form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n      enableFormElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n      isXhrRedirect = function (event) {\n        var ref, xhr;\n        xhr = (ref = event.detail) != null ? ref[0] : void 0;\n        return (xhr != null ? xhr.getResponseHeader(\"X-Xhr-Redirect\") : void 0) != null;\n      };\n    }).call(this);\n    (function () {\n      var isContentEditable, stopEverything;\n      stopEverything = Rails.stopEverything;\n      isContentEditable = Rails.isContentEditable;\n      Rails.handleMethod = function (e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n        if (!method) {\n          return;\n        }\n        if (isContentEditable(this)) {\n          return;\n        }\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n        if (csrfParam != null && csrfToken != null && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n    }).call(this);\n    (function () {\n      var ajax,\n        fire,\n        getData,\n        isContentEditable,\n        isCrossDomain,\n        isRemote,\n        matches,\n        serializeElement,\n        setData,\n        stopEverything,\n        slice = [].slice;\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement, isContentEditable = Rails.isContentEditable;\n      isRemote = function (element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return value != null && value !== 'false';\n      };\n      Rails.handleRemote = function (e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n        if (!isRemote(element)) {\n          return true;\n        }\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        if (isContentEditable(element)) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function (xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return false;\n            }\n          },\n          success: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: withCredentials != null && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n      Rails.formSubmitButtonClick = function (e) {\n        var button, form;\n        button = this;\n        form = button.form;\n        if (!form) {\n          return;\n        }\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n      Rails.preventInsignificantClick = function (e) {\n        var data, insignificantMetaClick, link, metaClick, method, nonPrimaryMouseClick;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        insignificantMetaClick = metaClick && method === 'GET' && !data;\n        nonPrimaryMouseClick = e.button != null && e.button !== 0;\n        if (nonPrimaryMouseClick || insignificantMetaClick) {\n          return e.stopImmediatePropagation();\n        }\n      };\n    }).call(this);\n    (function () {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMethod, handleRemote, loadCSPNonce, preventInsignificantClick, refreshCSRFTokens;\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, loadCSPNonce = Rails.loadCSPNonce, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, preventInsignificantClick = Rails.preventInsignificantClick, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMethod = Rails.handleMethod;\n      if (typeof jQuery !== \"undefined\" && jQuery !== null && jQuery.ajax != null) {\n        if (jQuery.rails) {\n          throw new Error('If you load both jquery_ujs and rails-ujs, use rails-ujs only.');\n        }\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n      Rails.start = function () {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n        window.addEventListener('pageshow', function () {\n          $(Rails.formEnableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function (e) {\n          return setTimeout(function () {\n            return disableElement(e);\n          }, 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', preventInsignificantClick);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        document.addEventListener('DOMContentLoaded', loadCSPNonce);\n        return window._rails_loaded = true;\n      };\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n    }).call(this);\n  }).call(this);\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(Rails);\n  }\n}).call(this);","/*!\n * jQuery JavaScript Library v3.7.1\n * https://jquery.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2023-08-28T13:37Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket trac-14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n\n  // Pass this if window is not defined yet\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n    // Plus for old WebKit, typeof returns \"function\" for HTML collections\n    // (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\" && typeof obj.item !== \"function\";\n  };\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n      val,\n      script = doc.createElement(\"script\");\n    script.text = code;\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    }\n\n    // Support: Android <=2.3 only (functionish RegExp)\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n  var version = \"3.7.1\",\n    rhtmlSuffix = /HTML$/i,\n    // Define a local copy of jQuery\n    jQuery = function (selector, context) {\n      // The jQuery object is actually just the init constructor 'enhanced'\n      // Need init if jQuery is called (just allow error to be thrown if not included)\n      return new jQuery.fn.init(selector, context);\n    };\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      }\n\n      // Return just the one element from the set\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems);\n\n      // Add the old object onto the stack (as a reference)\n      ret.prevObject = this;\n\n      // Return the newly-formed element set\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    even: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function () {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function (i) {\n      var len = this.length,\n        j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false;\n\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n      deep = target;\n\n      // Skip the boolean and the target\n      target = arguments[i] || {};\n      i++;\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    }\n\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n      target = this;\n      i--;\n    }\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name];\n\n          // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          }\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name];\n\n            // Ensure proper type for the source value\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n            copyIsArray = false;\n\n            // Never move original objects, clone them\n            target[name] = jQuery.extend(deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n\n    // Return the modified object\n    return target;\n  };\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor;\n\n      // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n      proto = getProto(obj);\n\n      // Objects with no prototype (e.g., `Object.create( null )`) are plain\n      if (!proto) {\n        return true;\n      }\n\n      // Objects with prototype are plain iff they were constructed by a global Object function\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      var name;\n      for (name in obj) {\n        return false;\n      }\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function (code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function (obj, callback) {\n      var length,\n        i = 0;\n      if (isArrayLike(obj)) {\n        length = obj.length;\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n      return obj;\n    },\n    // Retrieve the text value of an array of DOM nodes\n    text: function (elem) {\n      var node,\n        ret = \"\",\n        i = 0,\n        nodeType = elem.nodeType;\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += jQuery.text(node);\n        }\n      }\n      if (nodeType === 1 || nodeType === 11) {\n        return elem.textContent;\n      }\n      if (nodeType === 9) {\n        return elem.documentElement.textContent;\n      }\n      if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      }\n\n      // Do not include comment or processing instruction nodes\n\n      return ret;\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    isXMLDoc: function (elem) {\n      var namespace = elem && elem.namespaceURI,\n        docElem = elem && (elem.ownerDocument || elem).documentElement;\n\n      // Assume HTML when documentElement doesn't yet exist, such as inside\n      // document fragments.\n      return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n        j = 0,\n        i = first.length;\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n        matches = [],\n        i = 0,\n        length = elems.length,\n        callbackExpect = !invert;\n\n      // Go through the array, only saving the items\n      // that pass the validator function\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n        value,\n        i = 0,\n        ret = [];\n\n      // Go through the array, translating each of the items to their new values\n      if (isArrayLike(elems)) {\n        length = elems.length;\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n\n        // Go through every key on the object,\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      }\n\n      // Flatten any nested arrays\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  }\n\n  // Populate the class2type map\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n      type = toType(obj);\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n  var pop = arr.pop;\n  var sort = arr.sort;\n  var splice = arr.splice;\n  var whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n  var rtrimCSS = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\");\n\n  // Note: an element does not contain itself\n  jQuery.contains = function (a, b) {\n    var bup = b && b.parentNode;\n    return a === bup || !!(bup && bup.nodeType === 1 && (\n    // Support: IE 9 - 11+\n    // IE doesn't have `contains` on SVG.\n    a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n  };\n\n  // CSS string/identifier serialization\n  // https://drafts.csswg.org/cssom/#common-serializing-idioms\n  var rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;\n  function fcssescape(ch, asCodePoint) {\n    if (asCodePoint) {\n      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n      if (ch === \"\\0\") {\n        return \"\\uFFFD\";\n      }\n\n      // Control characters and (dependent upon position) numbers get escaped as code points\n      return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n    }\n\n    // Other potentially-special ASCII characters get backslash-escaped\n    return \"\\\\\" + ch;\n  }\n  jQuery.escapeSelector = function (sel) {\n    return (sel + \"\").replace(rcssescape, fcssescape);\n  };\n  var preferredDoc = document,\n    pushNative = push;\n  (function () {\n    var i,\n      Expr,\n      outermostContext,\n      sortInput,\n      hasDuplicate,\n      push = pushNative,\n      // Local document vars\n      document,\n      documentElement,\n      documentIsHTML,\n      rbuggyQSA,\n      matches,\n      // Instance-specific data\n      expando = jQuery.expando,\n      dirruns = 0,\n      done = 0,\n      classCache = createCache(),\n      tokenCache = createCache(),\n      compilerCache = createCache(),\n      nonnativeSelectorCache = createCache(),\n      sortOrder = function (a, b) {\n        if (a === b) {\n          hasDuplicate = true;\n        }\n        return 0;\n      },\n      booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|\" + \"loop|multiple|open|readonly|required|scoped\",\n      // Regular expressions\n\n      // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n      identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n      // Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors\n      attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n      // Operator (capture 2)\n      \"*([*^$|!~]?=)\" + whitespace +\n      // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n      \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n      pseudos = \":(\" + identifier + \")(?:\\\\((\" +\n      // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n      // 1. quoted (capture 3; capture 4 or capture 5)\n      \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n      // 2. simple (capture 6)\n      \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n      // 3. anything else (capture 2)\n      \".*\" + \")\\\\)|)\",\n      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n      rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n      rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n      rleadingCombinator = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n      rdescend = new RegExp(whitespace + \"|>\"),\n      rpseudo = new RegExp(pseudos),\n      ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n      matchExpr = {\n        ID: new RegExp(\"^#(\" + identifier + \")\"),\n        CLASS: new RegExp(\"^\\\\.(\" + identifier + \")\"),\n        TAG: new RegExp(\"^(\" + identifier + \"|[*])\"),\n        ATTR: new RegExp(\"^\" + attributes),\n        PSEUDO: new RegExp(\"^\" + pseudos),\n        CHILD: new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n        bool: new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n        // For use in libraries implementing .is()\n        // We use this for POS matching in `select`\n        needsContext: new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n      },\n      rinputs = /^(?:input|select|textarea|button)$/i,\n      rheader = /^h\\d$/i,\n      // Easily-parseable/retrievable ID or TAG or CLASS selectors\n      rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n      rsibling = /[+~]/,\n      // CSS escapes\n      // https://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n      runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n      funescape = function (escape, nonHex) {\n        var high = \"0x\" + escape.slice(1) - 0x10000;\n        if (nonHex) {\n          // Strip the backslash prefix from a non-hex escape sequence\n          return nonHex;\n        }\n\n        // Replace a hexadecimal escape sequence with the encoded Unicode code point\n        // Support: IE <=11+\n        // For values outside the Basic Multilingual Plane (BMP), manually construct a\n        // surrogate pair\n        return high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n      },\n      // Used for iframes; see `setDocument`.\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // Removing the function wrapper causes a \"Permission Denied\"\n      // error in IE/Edge.\n      unloadHandler = function () {\n        setDocument();\n      },\n      inDisabledFieldset = addCombinator(function (elem) {\n        return elem.disabled === true && nodeName(elem, \"fieldset\");\n      }, {\n        dir: \"parentNode\",\n        next: \"legend\"\n      });\n\n    // Support: IE <=9 only\n    // Accessing document.activeElement can throw unexpectedly\n    // https://bugs.jquery.com/ticket/13393\n    function safeActiveElement() {\n      try {\n        return document.activeElement;\n      } catch (err) {}\n    }\n\n    // Optimize for push.apply( _, NodeList )\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n\n      // Support: Android <=4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: function (target, els) {\n          pushNative.apply(target, slice.call(els));\n        },\n        call: function (target) {\n          pushNative.apply(target, slice.call(arguments, 1));\n        }\n      };\n    }\n    function find(selector, context, results, seed) {\n      var m,\n        i,\n        elem,\n        nid,\n        match,\n        groups,\n        newSelector,\n        newContext = context && context.ownerDocument,\n        // nodeType defaults to 9, since context defaults to document\n        nodeType = context ? context.nodeType : 9;\n      results = results || [];\n\n      // Return early from calls with invalid selector or context\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      }\n\n      // Try to shortcut find operations (as opposed to filters) in HTML documents\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE 9 only\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    push.call(results, elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                }\n\n                // Element context\n              } else {\n                // Support: IE 9 only\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && find.contains(context, elem) && elem.id === m) {\n                  push.call(results, elem);\n                  return results;\n                }\n              }\n\n              // Type selector\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results;\n\n              // Class selector\n            } else if ((m = match[3]) && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          }\n\n          // Take advantage of querySelectorAll\n          if (!nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            newSelector = selector;\n            newContext = context;\n\n            // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n            if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n\n              // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n              // Support: IE 11+, Edge 17 - 18+\n              // IE/Edge sometimes throw a \"Permission denied\" error when\n              // strict-comparing two documents; shallow comparisons work.\n              // eslint-disable-next-line eqeqeq\n              if (newContext != context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = jQuery.escapeSelector(nid);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              }\n\n              // Prefix every selector in the list\n              groups = tokenize(selector);\n              i = groups.length;\n              while (i--) {\n                groups[i] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i]);\n              }\n              newSelector = groups.join(\",\");\n            }\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      }\n\n      // All others\n      return select(selector.replace(rtrimCSS, \"$1\"), context, results, seed);\n    }\n\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n    function createCache() {\n      var keys = [];\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties\n        // (see https://github.com/jquery/sizzle/issues/157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n        return cache[key + \" \"] = value;\n      }\n      return cache;\n    }\n\n    /**\n     * Mark a function for special use by jQuery selector module\n     * @param {Function} fn The function to mark\n     */\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n\n        // release memory in IE\n        el = null;\n      }\n    }\n\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n    function createInputPseudo(type) {\n      return function (elem) {\n        return nodeName(elem, \"input\") && elem.type === type;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n    function createButtonPseudo(type) {\n      return function (elem) {\n        return (nodeName(elem, \"input\") || nodeName(elem, \"button\")) && elem.type === type;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            }\n\n            // Support: IE 6 - 11+\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n            return elem.isDisabled === disabled ||\n            // Where there is no isDisabled, check manually\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n          return elem.disabled === disabled;\n\n          // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        }\n\n        // Remaining elements are neither :enabled nor :disabled\n        return false;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n            matchIndexes = fn([], seed.length, argument),\n            i = matchIndexes.length;\n\n          // Match elements found at the specified indexes\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n\n    /**\n     * Checks a node for validity as a jQuery selector context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    }\n\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [node] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n    function setDocument(node) {\n      var subWindow,\n        doc = node ? node.ownerDocument || node : preferredDoc;\n\n      // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      }\n\n      // Update global variables\n      document = doc;\n      documentElement = document.documentElement;\n      documentIsHTML = !jQuery.isXMLDoc(document);\n\n      // Support: iOS 7 only, IE 9 - 11+\n      // Older browsers didn't support unprefixed `matches`.\n      matches = documentElement.matches || documentElement.webkitMatchesSelector || documentElement.msMatchesSelector;\n\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors\n      // (see trac-13936).\n      // Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,\n      // all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.\n      if (documentElement.msMatchesSelector &&\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 9 - 11+, Edge 12 - 18+\n        subWindow.addEventListener(\"unload\", unloadHandler);\n      }\n\n      // Support: IE <10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n      support.getById = assert(function (el) {\n        documentElement.appendChild(el).id = jQuery.expando;\n        return !document.getElementsByName || !document.getElementsByName(jQuery.expando).length;\n      });\n\n      // Support: IE 9 only\n      // Check to see if it's possible to do matchesSelector\n      // on a disconnected node.\n      support.disconnectedMatch = assert(function (el) {\n        return matches.call(el, \"*\");\n      });\n\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // IE/Edge don't support the :scope pseudo-class.\n      support.scope = assert(function () {\n        return document.querySelectorAll(\":scope\");\n      });\n\n      // Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only\n      // Make sure the `:has()` argument is parsed unforgivingly.\n      // We include `*` in the test to detect buggy implementations that are\n      // _selectively_ forgiving (specifically when the list includes at least\n      // one valid selector).\n      // Note that we treat complete lack of support for `:has()` as if it were\n      // spec-compliant support, which is fine because use of `:has()` in such\n      // environments will fail in the qSA path and fall back to jQuery traversal\n      // anyway.\n      support.cssHas = assert(function () {\n        try {\n          document.querySelector(\":has(*,:jqfake)\");\n          return false;\n        } catch (e) {\n          return true;\n        }\n      });\n\n      // ID filter and find\n      if (support.getById) {\n        Expr.filter.ID = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n        Expr.find.ID = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter.ID = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        };\n\n        // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n        Expr.find.ID = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n              i,\n              elems,\n              elem = context.getElementById(id);\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n              if (node && node.value === id) {\n                return [elem];\n              }\n\n              // Fall back on getElementsByName\n              elems = context.getElementsByName(id);\n              i = 0;\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n            return [];\n          }\n        };\n      }\n\n      // Tag\n      Expr.find.TAG = function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag);\n\n          // DocumentFragment nodes don't have gEBTN\n        } else {\n          return context.querySelectorAll(tag);\n        }\n      };\n\n      // Class\n      Expr.find.CLASS = function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n\n      // QSA and matchesSelector support\n\n      rbuggyQSA = [];\n\n      // Build QSA regex\n      // Regex strategy adopted from Diego Perini\n      assert(function (el) {\n        var input;\n        documentElement.appendChild(el).innerHTML = \"<a id='\" + expando + \"' href='' disabled='disabled'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' disabled='disabled'>\" + \"<option selected=''></option></select>\";\n\n        // Support: iOS <=7 - 8 only\n        // Boolean attributes and \"value\" are not treated correctly in some XML documents\n        if (!el.querySelectorAll(\"[selected]\").length) {\n          rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n        }\n\n        // Support: iOS <=7 - 8 only\n        if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n          rbuggyQSA.push(\"~=\");\n        }\n\n        // Support: iOS 8 only\n        // https://bugs.webkit.org/show_bug.cgi?id=136851\n        // In-page `selector#id sibling-combinator selector` fails\n        if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n          rbuggyQSA.push(\".#.+[+~]\");\n        }\n\n        // Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\n        // In some of the document kinds, these selectors wouldn't work natively.\n        // This is probably OK but for backwards compatibility we want to maintain\n        // handling them through jQuery traversal in jQuery 3.x.\n        if (!el.querySelectorAll(\":checked\").length) {\n          rbuggyQSA.push(\":checked\");\n        }\n\n        // Support: Windows 8 Native Apps\n        // The type and name attributes are restricted during .innerHTML assignment\n        input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"hidden\");\n        el.appendChild(input).setAttribute(\"name\", \"D\");\n\n        // Support: IE 9 - 11+\n        // IE's :disabled selector does not pick up the children of disabled fieldsets\n        // Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\n        // In some of the document kinds, these selectors wouldn't work natively.\n        // This is probably OK but for backwards compatibility we want to maintain\n        // handling them through jQuery traversal in jQuery 3.x.\n        documentElement.appendChild(el).disabled = true;\n        if (el.querySelectorAll(\":disabled\").length !== 2) {\n          rbuggyQSA.push(\":enabled\", \":disabled\");\n        }\n\n        // Support: IE 11+, Edge 15 - 18+\n        // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n        // Adding a temporary attribute to the document before the selection works\n        // around the issue.\n        // Interestingly, IE 10 & older don't seem to have the issue.\n        input = document.createElement(\"input\");\n        input.setAttribute(\"name\", \"\");\n        el.appendChild(input);\n        if (!el.querySelectorAll(\"[name='']\").length) {\n          rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\")\");\n        }\n      });\n      if (!support.cssHas) {\n        // Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n        // Our regular `try-catch` mechanism fails to detect natively-unsupported\n        // pseudo-classes inside `:has()` (such as `:has(:contains(\"Foo\"))`)\n        // in browsers that parse the `:has()` argument as a forgiving selector list.\n        // https://drafts.csswg.org/selectors/#relational now requires the argument\n        // to be parsed unforgivingly, but browsers have not yet fully adjusted.\n        rbuggyQSA.push(\":has\");\n      }\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n\n      /* Sorting\n      ---------------------------------------------------------------------- */\n\n      // Document order sorting\n      sortOrder = function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        // Sort on method existence if only one input has compareDocumentPosition\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n        if (compare) {\n          return compare;\n        }\n\n        // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) :\n        // Otherwise we know they are disconnected\n        1;\n\n        // Disconnected nodes\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a === document || a.ownerDocument == preferredDoc && find.contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (b === document || b.ownerDocument == preferredDoc && find.contains(preferredDoc, b)) {\n            return 1;\n          }\n\n          // Maintain original order\n          return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;\n        }\n        return compare & 4 ? -1 : 1;\n      };\n      return document;\n    }\n    find.matches = function (expr, elements) {\n      return find(expr, null, null, elements);\n    };\n    find.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n      if (documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr);\n\n          // IE 9's matchesSelector returns false on disconnected nodes\n          if (ret || support.disconnectedMatch ||\n          // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n      return find(expr, document, null, [elem]).length > 0;\n    };\n    find.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n      return jQuery.contains(context, elem);\n    };\n    find.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n      var fn = Expr.attrHandle[name.toLowerCase()],\n        // Don't get fooled by Object.prototype properties (see trac-13807)\n        val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      if (val !== undefined) {\n        return val;\n      }\n      return elem.getAttribute(name);\n    };\n    find.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n    jQuery.uniqueSort = function (results) {\n      var elem,\n        duplicates = [],\n        j = 0,\n        i = 0;\n\n      // Unless we *know* we can detect duplicates, assume their presence\n      //\n      // Support: Android <=4.0+\n      // Testing for detecting duplicates is unpredictable so instead assume we can't\n      // depend on duplicate detection in all browsers without a stable sort.\n      hasDuplicate = !support.sortStable;\n      sortInput = !support.sortStable && slice.call(results, 0);\n      sort.call(results, sortOrder);\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n        while (j--) {\n          splice.call(results, duplicates[j], 1);\n        }\n      }\n\n      // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n      sortInput = null;\n      return results;\n    };\n    jQuery.fn.uniqueSort = function () {\n      return this.pushStack(jQuery.uniqueSort(slice.apply(this)));\n    };\n    Expr = jQuery.expr = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        ATTR: function (match) {\n          match[1] = match[1].replace(runescape, funescape);\n\n          // Move the given value to match[3] whether quoted or unquoted\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n          return match.slice(0, 4);\n        },\n        CHILD: function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              find.error(match[0]);\n            }\n\n            // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\");\n\n            // other types prohibit arguments\n          } else if (match[3]) {\n            find.error(match[0]);\n          }\n          return match;\n        },\n        PSEUDO: function (match) {\n          var excess,\n            unquoted = !match[6] && match[2];\n          if (matchExpr.CHILD.test(match[0])) {\n            return null;\n          }\n\n          // Accept quoted arguments as-is\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\";\n\n            // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && (\n          // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && (\n          // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          }\n\n          // Return only captures needed by the pseudo filter method (type and argument)\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        TAG: function (nodeNameSelector) {\n          var expectedNodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return nodeName(elem, expectedNodeName);\n          };\n        },\n        CLASS: function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        ATTR: function (name, operator, check) {\n          return function (elem) {\n            var result = find.attr(elem, name);\n            if (result == null) {\n              return operator === \"!=\";\n            }\n            if (!operator) {\n              return true;\n            }\n            result += \"\";\n            if (operator === \"=\") {\n              return result === check;\n            }\n            if (operator === \"!=\") {\n              return result !== check;\n            }\n            if (operator === \"^=\") {\n              return check && result.indexOf(check) === 0;\n            }\n            if (operator === \"*=\") {\n              return check && result.indexOf(check) > -1;\n            }\n            if (operator === \"$=\") {\n              return check && result.slice(-check.length) === check;\n            }\n            if (operator === \"~=\") {\n              return (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1;\n            }\n            if (operator === \"|=\") {\n              return result === check || result.slice(0, check.length + 1) === check + \"-\";\n            }\n            return false;\n          };\n        },\n        CHILD: function (type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n            forward = type.slice(-4) !== \"last\",\n            ofType = what === \"of-type\";\n          return first === 1 && last === 0 ?\n          // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n              outerCache,\n              node,\n              nodeIndex,\n              start,\n              dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n              parent = elem.parentNode,\n              name = ofType && elem.nodeName.toLowerCase(),\n              useCache = !xml && !ofType,\n              diff = false;\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n                  while (node = node[dir]) {\n                    if (ofType ? nodeName(node, name) : node.nodeType === 1) {\n                      return false;\n                    }\n                  }\n\n                  // Reverse direction for :only-* (if we haven't yet done so)\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n                return true;\n              }\n              start = [forward ? parent.firstChild : parent.lastChild];\n\n              // non-xml :nth-child(...) stores cache data on `parent`\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                outerCache = parent[expando] || (parent[expando] = {});\n                cache = outerCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n                while (node = ++nodeIndex && node && node[dir] || (\n                // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    outerCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  outerCache = elem[expando] || (elem[expando] = {});\n                  cache = outerCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                }\n\n                // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {});\n                        outerCache[type] = [dirruns, diff];\n                      }\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n\n              // Incorporate the offset, then check against cycle size\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        PSEUDO: function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // https://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n            fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || find.error(\"unsupported pseudo: \" + pseudo);\n\n          // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as jQuery does\n          if (fn[expando]) {\n            return fn(argument);\n          }\n\n          // But maintain support for old signatures\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                matched = fn(seed, argument),\n                i = matched.length;\n              while (i--) {\n                idx = indexOf.call(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        not: markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n            results = [],\n            matcher = compile(selector.replace(rtrimCSS, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n              unmatched = matcher(seed, null, xml, []),\n              i = seed.length;\n\n            // Match elements unmatched by `matcher`\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results);\n\n            // Don't keep the element\n            // (see https://github.com/jquery/sizzle/issues/299)\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        has: markFunction(function (selector) {\n          return function (elem) {\n            return find(selector, elem).length > 0;\n          };\n        }),\n        contains: markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || jQuery.text(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // https://www.w3.org/TR/selectors/#lang-pseudo\n        lang: markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            find.error(\"unsupported lang: \" + lang);\n          }\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n            return false;\n          };\n        }),\n        // Miscellaneous\n        target: function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        root: function (elem) {\n          return elem === documentElement;\n        },\n        focus: function (elem) {\n          return elem === safeActiveElement() && document.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        enabled: createDisabledPseudo(false),\n        disabled: createDisabledPseudo(true),\n        checked: function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          return nodeName(elem, \"input\") && !!elem.checked || nodeName(elem, \"option\") && !!elem.selected;\n        },\n        selected: function (elem) {\n          // Support: IE <=11+\n          // Accessing the selectedIndex property\n          // forces the browser to treat the default option as\n          // selected when in an optgroup.\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n          return elem.selected === true;\n        },\n        // Contents\n        empty: function (elem) {\n          // https://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n          return true;\n        },\n        parent: function (elem) {\n          return !Expr.pseudos.empty(elem);\n        },\n        // Element/input types\n        header: function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        input: function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        button: function (elem) {\n          return nodeName(elem, \"input\") && elem.type === \"button\" || nodeName(elem, \"button\");\n        },\n        text: function (elem) {\n          var attr;\n          return nodeName(elem, \"input\") && elem.type === \"text\" && (\n          // Support: IE <10 only\n          // New HTML5 attribute values (e.g., \"search\") appear\n          // with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        first: createPositionalPseudo(function () {\n          return [0];\n        }),\n        last: createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        eq: createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        even: createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        odd: createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        lt: createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i;\n          if (argument < 0) {\n            i = argument + length;\n          } else if (argument > length) {\n            i = length;\n          } else {\n            i = argument;\n          }\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        gt: createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos.nth = Expr.pseudos.eq;\n\n    // Add button/input type pseudos\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    }\n\n    // Easy API for creating new setFilters\n    function setFilters() {}\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n    function tokenize(selector, parseOnly) {\n      var matched,\n        match,\n        tokens,\n        type,\n        soFar,\n        groups,\n        preFilters,\n        cached = tokenCache[selector + \" \"];\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n          groups.push(tokens = []);\n        }\n        matched = false;\n\n        // Combinators\n        if (match = rleadingCombinator.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrimCSS, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        }\n\n        // Filters\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n        if (!matched) {\n          break;\n        }\n      }\n\n      // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n      if (parseOnly) {\n        return soFar.length;\n      }\n      return soFar ? find.error(selector) :\n      // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    }\n    function toSelector(tokens) {\n      var i = 0,\n        len = tokens.length,\n        selector = \"\";\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n      return selector;\n    }\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n        skip = combinator.next,\n        key = skip || dir,\n        checkNonElements = base && key === \"parentNode\",\n        doneName = done++;\n      return combinator.first ?\n      // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n        return false;\n      } :\n      // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n          outerCache,\n          newCache = [dirruns, doneName];\n\n        // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {});\n              if (skip && nodeName(elem, skip)) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                outerCache[key] = newCache;\n\n                // A match means we're done; a fail means we have to keep checking\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n        return false;\n      };\n    }\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n        return true;\n      } : matchers[0];\n    }\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n        len = contexts.length;\n      for (; i < len; i++) {\n        find(selector, contexts[i], results);\n      }\n      return results;\n    }\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n        newUnmatched = [],\n        i = 0,\n        len = unmatched.length,\n        mapped = map != null;\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n      return newUnmatched;\n    }\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n          i,\n          elem,\n          matcherOut,\n          preMap = [],\n          postMap = [],\n          preexisting = results.length,\n          // Get initial elements from seed or context\n          elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n          // Prefilter to get matcher input, preserving a map for seed-results synchronization\n          matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems;\n        if (matcher) {\n          // If we have a postFinder, or filtered seed, or non-seed postFilter\n          // or preexisting results,\n          matcherOut = postFinder || (seed ? preFilter : preexisting || postFilter) ?\n          // ...intermediate processing is necessary\n          [] :\n          // ...otherwise use results directly\n          results;\n\n          // Find primary matches\n          matcher(matcherIn, matcherOut, context, xml);\n        } else {\n          matcherOut = matcherIn;\n        }\n\n        // Apply postFilter\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml);\n\n          // Un-match failing elements by moving them back to matcherIn\n          i = temp.length;\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n              postFinder(null, matcherOut = [], temp, xml);\n            }\n\n            // Move matched elements from seed to results to keep them synchronized\n            i = matcherOut.length;\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          }\n\n          // Add elements to results, through postFinder if defined\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n    function matcherFromTokens(tokens) {\n      var checkContext,\n        matcher,\n        j,\n        len = tokens.length,\n        leadingRelative = Expr.relative[tokens[0].type],\n        implicitRelative = leadingRelative || Expr.relative[\" \"],\n        i = leadingRelative ? 1 : 0,\n        // The foundational matcher ensures that elements are reachable from top-level context(s)\n        matchContext = addCombinator(function (elem) {\n          return elem === checkContext;\n        }, implicitRelative, true),\n        matchAnyContext = addCombinator(function (elem) {\n          return indexOf.call(checkContext, elem) > -1;\n        }, implicitRelative, true),\n        matchers = [function (elem, context, xml) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n\n          // Avoid hanging onto element\n          // (see https://github.com/jquery/sizzle/issues/299)\n          checkContext = null;\n          return ret;\n        }];\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n\n          // Return special upon seeing a positional matcher\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(\n            // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrimCSS, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n          matchers.push(matcher);\n        }\n      }\n      return elementMatcher(matchers);\n    }\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n        byElement = elementMatchers.length > 0,\n        superMatcher = function (seed, context, xml, results, outermost) {\n          var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n            elems = seed || byElement && Expr.find.TAG(\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n            dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n          if (outermost) {\n            // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n            outermostContext = context == document || context || outermost;\n          }\n\n          // Add elements passing elementMatchers directly to results\n          // Support: iOS <=7 - 9 only\n          // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching\n          // elements by id. (see trac-14142)\n          for (; i !== len && (elem = elems[i]) != null; i++) {\n            if (byElement && elem) {\n              j = 0;\n\n              // Support: IE 11+, Edge 17 - 18+\n              // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n              // two documents; shallow comparisons work.\n              // eslint-disable-next-line eqeqeq\n              if (!context && elem.ownerDocument != document) {\n                setDocument(elem);\n                xml = !documentIsHTML;\n              }\n              while (matcher = elementMatchers[j++]) {\n                if (matcher(elem, context || document, xml)) {\n                  push.call(results, elem);\n                  break;\n                }\n              }\n              if (outermost) {\n                dirruns = dirrunsUnique;\n              }\n            }\n\n            // Track unmatched elements for set filters\n            if (bySet) {\n              // They will have gone through all possible matchers\n              if (elem = !matcher && elem) {\n                matchedCount--;\n              }\n\n              // Lengthen the array for every element, matched or not\n              if (seed) {\n                unmatched.push(elem);\n              }\n            }\n          }\n\n          // `i` is now the count of elements visited above, and adding it to `matchedCount`\n          // makes the latter nonnegative.\n          matchedCount += i;\n\n          // Apply set filters to unmatched elements\n          // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n          // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n          // no element matchers and no seed.\n          // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n          // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n          // numerically zero.\n          if (bySet && i !== matchedCount) {\n            j = 0;\n            while (matcher = setMatchers[j++]) {\n              matcher(unmatched, setMatched, context, xml);\n            }\n            if (seed) {\n              // Reintegrate element matches to eliminate the need for sorting\n              if (matchedCount > 0) {\n                while (i--) {\n                  if (!(unmatched[i] || setMatched[i])) {\n                    setMatched[i] = pop.call(results);\n                  }\n                }\n              }\n\n              // Discard index placeholder values to get only actual matches\n              setMatched = condense(setMatched);\n            }\n\n            // Add matches to results\n            push.apply(results, setMatched);\n\n            // Seedless set matches succeeding multiple successful matchers stipulate sorting\n            if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n              jQuery.uniqueSort(results);\n            }\n          }\n\n          // Override manipulation of globals by nested matchers\n          if (outermost) {\n            dirruns = dirrunsUnique;\n            outermostContext = contextBackup;\n          }\n          return unmatched;\n        };\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n    function compile(selector, match /* Internal Use Only */) {\n      var i,\n        setMatchers = [],\n        elementMatchers = [],\n        cached = compilerCache[selector + \" \"];\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n        i = match.length;\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        }\n\n        // Cache the compiled function\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n\n        // Save selector and tokenization\n        cached.selector = selector;\n      }\n      return cached;\n    }\n\n    /**\n     * A low-level selection function that works with jQuery's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with jQuery selector compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n    function select(selector, context, results, seed) {\n      var i,\n        tokens,\n        token,\n        type,\n        find,\n        compiled = typeof selector === \"function\" && selector,\n        match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || [];\n\n      // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];\n          if (!context) {\n            return results;\n\n            // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n          selector = selector.slice(tokens.shift().value.length);\n        }\n\n        // Fetch a seed set for right-to-left matching\n        i = matchExpr.needsContext.test(selector) ? 0 : tokens.length;\n        while (i--) {\n          token = tokens[i];\n\n          // Abort if we hit a combinator\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }\n\n    // One-time assignments\n\n    // Support: Android <=4.0 - 4.1+\n    // Sort stability\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n\n    // Initialize against the default document\n    setDocument();\n\n    // Support: Android <=4.0 - 4.1+\n    // Detached nodes confoundingly follow *each other*\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    });\n    jQuery.find = find;\n\n    // Deprecated\n    jQuery.expr[\":\"] = jQuery.expr.pseudos;\n    jQuery.unique = jQuery.uniqueSort;\n\n    // These have always been private, but they used to be documented as part of\n    // Sizzle so let's maintain them for now for backwards compatibility purposes.\n    find.compile = compile;\n    find.select = select;\n    find.setDocument = setDocument;\n    find.tokenize = tokenize;\n    find.escape = jQuery.escapeSelector;\n    find.getText = jQuery.text;\n    find.isXML = jQuery.isXMLDoc;\n    find.selectors = jQuery.expr;\n    find.support = jQuery.support;\n    find.uniqueSort = jQuery.uniqueSort;\n\n    /* eslint-enable */\n  })();\n  var dir = function (elem, dir, until) {\n    var matched = [],\n      truncate = until !== undefined;\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n        matched.push(elem);\n      }\n    }\n    return matched;\n  };\n  var siblings = function (n, elem) {\n    var matched = [];\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n    return matched;\n  };\n  var rneedsContext = jQuery.expr.match.needsContext;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n\n  // Implement the identical functionality for filter and not\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    }\n\n    // Single element\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    }\n\n    // Arraylike of elements (jQuery, arguments, Array)\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    }\n\n    // Filtered directly for both simple and complex selectors\n    return jQuery.filter(qualifier, elements, not);\n  }\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n        ret,\n        len = this.length,\n        self = this;\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n      ret = this.pushStack([]);\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this,\n      // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  });\n\n  // Initialize a jQuery object\n\n  // A central reference to the root jQuery(document)\n  var rootjQuery,\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n    // Strict HTML recognition (trac-11290: must start with <)\n    // Shortcut simple #id case for speed\n    rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n    init = jQuery.fn.init = function (selector, context, root) {\n      var match, elem;\n\n      // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n      if (!selector) {\n        return this;\n      }\n\n      // Method init() accepts an alternate rootjQuery\n      // so migrate can support jQuery.sub (gh-2101)\n      root = root || rootjQuery;\n\n      // Handle HTML strings\n      if (typeof selector === \"string\") {\n        if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n          // Assume that strings that start and end with <> are HTML and skip the regex check\n          match = [null, selector, null];\n        } else {\n          match = rquickExpr.exec(selector);\n        }\n\n        // Match html or make sure no context is specified for #id\n        if (match && (match[1] || !context)) {\n          // HANDLE: $(html) -> $(array)\n          if (match[1]) {\n            context = context instanceof jQuery ? context[0] : context;\n\n            // Option to run scripts is true for back-compat\n            // Intentionally let the error be thrown if parseHTML is not present\n            jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n\n            // HANDLE: $(html, props)\n            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n              for (match in context) {\n                // Properties of context are called as methods if possible\n                if (isFunction(this[match])) {\n                  this[match](context[match]);\n\n                  // ...and otherwise set as attributes\n                } else {\n                  this.attr(match, context[match]);\n                }\n              }\n            }\n            return this;\n\n            // HANDLE: $(#id)\n          } else {\n            elem = document.getElementById(match[2]);\n            if (elem) {\n              // Inject the element directly into the jQuery object\n              this[0] = elem;\n              this.length = 1;\n            }\n            return this;\n          }\n\n          // HANDLE: $(expr, $(...))\n        } else if (!context || context.jquery) {\n          return (context || root).find(selector);\n\n          // HANDLE: $(expr, context)\n          // (which is just equivalent to: $(context).find(expr)\n        } else {\n          return this.constructor(context).find(selector);\n        }\n\n        // HANDLE: $(DOMElement)\n      } else if (selector.nodeType) {\n        this[0] = selector;\n        this.length = 1;\n        return this;\n\n        // HANDLE: $(function)\n        // Shortcut for document ready\n      } else if (isFunction(selector)) {\n        return root.ready !== undefined ? root.ready(selector) :\n        // Execute immediately if ready is not present\n        selector(jQuery);\n      }\n      return jQuery.makeArray(selector, this);\n    };\n\n  // Give the init function the jQuery prototype for later instantiation\n  init.prototype = jQuery.fn;\n\n  // Initialize central reference\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n    // Methods guaranteed to produce a unique set when starting from a unique set\n    guaranteedUnique = {\n      children: true,\n      contents: true,\n      next: true,\n      prev: true\n    };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n        l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n        i = 0,\n        l = this.length,\n        matched = [],\n        targets = typeof selectors !== \"string\" && jQuery(selectors);\n\n      // Positional selectors never match, since there's no _selection_ context\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 :\n            // Don't pass non-elements to jQuery#find\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      }\n\n      // Index in selector\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      }\n\n      // Locate the position of the desired element\n      return indexOf.call(this,\n      // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n    return cur;\n  }\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (elem.contentDocument != null &&\n      // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      }\n\n      // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        }\n\n        // Reverse order for parents* and prev-derivatives\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n\n  // Convert String-formatted options into Object-formatted ones\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n    var\n      // Flag to know if list is currently firing\n      firing,\n      // Last fire value for non-forgettable lists\n      memory,\n      // Flag to know if list was already fired\n      fired,\n      // Flag to prevent firing\n      locked,\n      // Actual callback list\n      list = [],\n      // Queue of execution data for repeatable lists\n      queue = [],\n      // Index of currently firing callback (modified by add/remove as needed)\n      firingIndex = -1,\n      // Fire callbacks\n      fire = function () {\n        // Enforce single-firing\n        locked = locked || options.once;\n\n        // Execute callbacks for all pending executions,\n        // respecting firingIndex overrides and runtime changes\n        fired = firing = true;\n        for (; queue.length; firingIndex = -1) {\n          memory = queue.shift();\n          while (++firingIndex < list.length) {\n            // Run callback and check for early termination\n            if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n              // Jump to end and forget the data so .add doesn't re-fire\n              firingIndex = list.length;\n              memory = false;\n            }\n          }\n        }\n\n        // Forget the data if we're done with it\n        if (!options.memory) {\n          memory = false;\n        }\n        firing = false;\n\n        // Clean up if we're done firing for good\n        if (locked) {\n          // Keep an empty list if we have data for future add calls\n          if (memory) {\n            list = [];\n\n            // Otherwise, this object is spent\n          } else {\n            list = \"\";\n          }\n        }\n      },\n      // Actual Callbacks object\n      self = {\n        // Add a callback or a collection of callbacks to the list\n        add: function () {\n          if (list) {\n            // If we have memory from a past run, we should fire after adding\n            if (memory && !firing) {\n              firingIndex = list.length - 1;\n              queue.push(memory);\n            }\n            (function add(args) {\n              jQuery.each(args, function (_, arg) {\n                if (isFunction(arg)) {\n                  if (!options.unique || !self.has(arg)) {\n                    list.push(arg);\n                  }\n                } else if (arg && arg.length && toType(arg) !== \"string\") {\n                  // Inspect recursively\n                  add(arg);\n                }\n              });\n            })(arguments);\n            if (memory && !firing) {\n              fire();\n            }\n          }\n          return this;\n        },\n        // Remove a callback from the list\n        remove: function () {\n          jQuery.each(arguments, function (_, arg) {\n            var index;\n            while ((index = jQuery.inArray(arg, list, index)) > -1) {\n              list.splice(index, 1);\n\n              // Handle firing indexes\n              if (index <= firingIndex) {\n                firingIndex--;\n              }\n            }\n          });\n          return this;\n        },\n        // Check if a given callback is in the list.\n        // If no argument is given, return whether or not list has callbacks attached.\n        has: function (fn) {\n          return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n        },\n        // Remove all callbacks from the list\n        empty: function () {\n          if (list) {\n            list = [];\n          }\n          return this;\n        },\n        // Disable .fire and .add\n        // Abort any current/pending executions\n        // Clear all callbacks and values\n        disable: function () {\n          locked = queue = [];\n          list = memory = \"\";\n          return this;\n        },\n        disabled: function () {\n          return !list;\n        },\n        // Disable .fire\n        // Also disable .add unless we have memory (since it would have no effect)\n        // Abort any pending executions\n        lock: function () {\n          locked = queue = [];\n          if (!memory && !firing) {\n            list = memory = \"\";\n          }\n          return this;\n        },\n        locked: function () {\n          return !!locked;\n        },\n        // Call all callbacks with the given context and arguments\n        fireWith: function (context, args) {\n          if (!locked) {\n            args = args || [];\n            args = [context, args.slice ? args.slice() : args];\n            queue.push(args);\n            if (!firing) {\n              fire();\n            }\n          }\n          return this;\n        },\n        // Call all the callbacks with the given arguments\n        fire: function () {\n          self.fireWith(this, arguments);\n          return this;\n        },\n        // To know if the callbacks have already been called at least once\n        fired: function () {\n          return !!fired;\n        }\n      };\n    return self;\n  };\n  function Identity(v) {\n    return v;\n  }\n  function Thrower(ex) {\n    throw ex;\n  }\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject);\n\n        // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject);\n\n        // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      }\n\n      // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [\n        // action, add listener, callbacks,\n        // ... .then handlers, argument index, [final state]\n        [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n        state = \"pending\",\n        promise = {\n          state: function () {\n            return state;\n          },\n          always: function () {\n            deferred.done(arguments).fail(arguments);\n            return this;\n          },\n          \"catch\": function (fn) {\n            return promise.then(null, fn);\n          },\n          // Keep pipe for back-compat\n          pipe: function /* fnDone, fnFail, fnProgress */\n          () {\n            var fns = arguments;\n            return jQuery.Deferred(function (newDefer) {\n              jQuery.each(tuples, function (_i, tuple) {\n                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];\n\n                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                deferred[tuple[1]](function () {\n                  var returned = fn && fn.apply(this, arguments);\n                  if (returned && isFunction(returned.promise)) {\n                    returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                  } else {\n                    newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                  }\n                });\n              });\n              fns = null;\n            }).promise();\n          },\n          then: function (onFulfilled, onRejected, onProgress) {\n            var maxDepth = 0;\n            function resolve(depth, deferred, handler, special) {\n              return function () {\n                var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                    var returned, then;\n\n                    // Support: Promises/A+ section 2.3.3.3.3\n                    // https://promisesaplus.com/#point-59\n                    // Ignore double-resolution attempts\n                    if (depth < maxDepth) {\n                      return;\n                    }\n                    returned = handler.apply(that, args);\n\n                    // Support: Promises/A+ section 2.3.1\n                    // https://promisesaplus.com/#point-48\n                    if (returned === deferred.promise()) {\n                      throw new TypeError(\"Thenable self-resolution\");\n                    }\n\n                    // Support: Promises/A+ sections 2.3.3.1, 3.5\n                    // https://promisesaplus.com/#point-54\n                    // https://promisesaplus.com/#point-75\n                    // Retrieve `then` only once\n                    then = returned && (\n                    // Support: Promises/A+ section 2.3.4\n                    // https://promisesaplus.com/#point-64\n                    // Only check objects and functions for thenability\n                    typeof returned === \"object\" || typeof returned === \"function\") && returned.then;\n\n                    // Handle a returned thenable\n                    if (isFunction(then)) {\n                      // Special processors (notify) just wait for resolution\n                      if (special) {\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));\n\n                        // Normal processors (resolve) also hook into progress\n                      } else {\n                        // ...and disregard older resolution values\n                        maxDepth++;\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                      }\n\n                      // Handle all other returned values\n                    } else {\n                      // Only substitute handlers pass on context\n                      // and multiple values (non-spec behavior)\n                      if (handler !== Identity) {\n                        that = undefined;\n                        args = [returned];\n                      }\n\n                      // Process the value(s)\n                      // Default process is resolve\n                      (special || deferred.resolveWith)(that, args);\n                    }\n                  },\n                  // Only normal processors (resolve) catch and reject exceptions\n                  process = special ? mightThrow : function () {\n                    try {\n                      mightThrow();\n                    } catch (e) {\n                      if (jQuery.Deferred.exceptionHook) {\n                        jQuery.Deferred.exceptionHook(e, process.error);\n                      }\n\n                      // Support: Promises/A+ section 2.3.3.3.4.1\n                      // https://promisesaplus.com/#point-61\n                      // Ignore post-resolution exceptions\n                      if (depth + 1 >= maxDepth) {\n                        // Only substitute handlers pass on context\n                        // and multiple values (non-spec behavior)\n                        if (handler !== Thrower) {\n                          that = undefined;\n                          args = [e];\n                        }\n                        deferred.rejectWith(that, args);\n                      }\n                    }\n                  };\n\n                // Support: Promises/A+ section 2.3.3.3.1\n                // https://promisesaplus.com/#point-57\n                // Re-resolve promises immediately to dodge false rejection from\n                // subsequent errors\n                if (depth) {\n                  process();\n                } else {\n                  // Call an optional hook to record the error, in case of exception\n                  // since it's otherwise lost when execution goes async\n                  if (jQuery.Deferred.getErrorHook) {\n                    process.error = jQuery.Deferred.getErrorHook();\n\n                    // The deprecated alias of the above. While the name suggests\n                    // returning the stack, not an error instance, jQuery just passes\n                    // it directly to `console.warn` so both will work; an instance\n                    // just better cooperates with source maps.\n                  } else if (jQuery.Deferred.getStackHook) {\n                    process.error = jQuery.Deferred.getStackHook();\n                  }\n                  window.setTimeout(process);\n                }\n              };\n            }\n            return jQuery.Deferred(function (newDefer) {\n              // progress_handlers.add( ... )\n              tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n\n              // fulfilled_handlers.add( ... )\n              tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));\n\n              // rejected_handlers.add( ... )\n              tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n            }).promise();\n          },\n          // Get a promise for this deferred\n          // If obj is provided, the promise aspect is added to the object\n          promise: function (obj) {\n            return obj != null ? jQuery.extend(obj, promise) : promise;\n          }\n        },\n        deferred = {};\n\n      // Add list-specific methods\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n          stateString = tuple[5];\n\n        // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n        promise[tuple[1]] = list.add;\n\n        // Handle state\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          },\n          // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable,\n          // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable,\n          // progress_callbacks.lock\n          tuples[0][2].lock,\n          // progress_handlers.lock\n          tuples[0][3].lock);\n        }\n\n        // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n        list.add(tuple[3].fire);\n\n        // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        };\n\n        // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      });\n\n      // Make the deferred a promise\n      promise.promise(deferred);\n\n      // Call given func if any\n      if (func) {\n        func.call(deferred, deferred);\n      }\n\n      // All done!\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var\n        // count of uncompleted subordinates\n        remaining = arguments.length,\n        // count of unprocessed arguments\n        i = remaining,\n        // subordinate fulfillment data\n        resolveContexts = Array(i),\n        resolveValues = slice.call(arguments),\n        // the primary Deferred\n        primary = jQuery.Deferred(),\n        // subordinate callback factory\n        updateFunc = function (i) {\n          return function (value) {\n            resolveContexts[i] = this;\n            resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n            if (! --remaining) {\n              primary.resolveWith(resolveContexts, resolveValues);\n            }\n          };\n        };\n\n      // Single- and empty arguments are adopted like Promise.resolve\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining);\n\n        // Use .then() to unwrap secondary thenables (cf. gh-3000)\n        if (primary.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      }\n\n      // Multiple arguments are aggregated like Promise.all array elements\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n      return primary.promise();\n    }\n  });\n\n  // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  // If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error\n  // captured before the async barrier to get the original error cause\n  // which may otherwise be hidden.\n  jQuery.Deferred.exceptionHook = function (error, asyncError) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, asyncError);\n    }\n  };\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  };\n\n  // The deferred used on DOM ready\n  var readyList = jQuery.Deferred();\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn)\n\n    // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See trac-6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      }\n\n      // Remember that the DOM is ready\n      jQuery.isReady = true;\n\n      // If a normal DOM Ready event fired, decrement, and wait if need be\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      }\n\n      // If there are functions bound, to execute\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then;\n\n  // The ready event handler and self cleanup method\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  }\n\n  // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed);\n\n    // A fallback to window.onload, that will always work\n    window.addEventListener(\"load\", completed);\n  }\n\n  // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n      len = elems.length,\n      bulk = key == null;\n\n    // Sets many values\n    if (toType(key) === \"object\") {\n      chainable = true;\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      }\n\n      // Sets one value\n    } else if (value !== undefined) {\n      chainable = true;\n      if (!isFunction(value)) {\n        raw = true;\n      }\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null;\n\n          // ...except when executing function values\n        } else {\n          bulk = fn;\n          fn = function (elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n    if (chainable) {\n      return elems;\n    }\n\n    // Gets\n    if (bulk) {\n      return fn.call(elems);\n    }\n    return len ? fn(elems[0], key) : emptyGet;\n  };\n\n  // Matches dashed string for camelizing\n  var rmsPrefix = /^-ms-/,\n    rdashAlpha = /-([a-z])/g;\n\n  // Used by camelCase as callback to replace()\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  }\n\n  // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (trac-9572)\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando];\n\n      // If not, create one\n      if (!value) {\n        value = {};\n\n        // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see trac-8335.\n        // Always return an empty object.\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value;\n\n            // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n        cache = this.cache(owner);\n\n      // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value;\n\n        // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) :\n      // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      }\n\n      // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n      this.set(owner, key, value);\n\n      // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n        cache = owner[this.expando];\n      if (cache === undefined) {\n        return;\n      }\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key);\n\n          // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n        i = key.length;\n        while (i--) {\n          delete cache[key[i]];\n        }\n      }\n\n      // Remove the expando if there's no more data\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data();\n\n  //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n    rmultiDash = /[A-Z]/g;\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n    if (data === \"false\") {\n      return false;\n    }\n    if (data === \"null\") {\n      return null;\n    }\n\n    // Only convert to a number if it doesn't change the string\n    if (data === +data + \"\") {\n      return +data;\n    }\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n    return data;\n  }\n  function dataAttr(elem, key, data) {\n    var name;\n\n    // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {}\n\n        // Make sure we set the data so it isn't changed later\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n    return data;\n  }\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n        name,\n        data,\n        elem = this[0],\n        attrs = elem && elem.attributes;\n\n      // Gets all values\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (trac-14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n        return data;\n      }\n\n      // Sets multiple values\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n      return access(this, function (value) {\n        var data;\n\n        // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n          if (data !== undefined) {\n            return data;\n          }\n\n          // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n          data = dataAttr(elem, key);\n          if (data !== undefined) {\n            return data;\n          }\n\n          // We tried really hard, but the data doesn't exist.\n          return;\n        }\n\n        // Set the data...\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type);\n\n        // Speed up dequeue by getting out quickly if this is just a lookup\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n      var queue = jQuery.queue(elem, type),\n        startLength = queue.length,\n        fn = queue.shift(),\n        hooks = jQuery._queueHooks(elem, type),\n        next = function () {\n          jQuery.dequeue(elem, type);\n        };\n\n      // If the fx queue is dequeued, always remove the progress sentinel\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        }\n\n        // Clear up the last queue stop function\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data);\n\n        // Ensure a hooks for this queue\n        jQuery._queueHooks(this, type);\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n        count = 1,\n        defer = jQuery.Deferred(),\n        elements = this,\n        i = this.length,\n        resolve = function () {\n          if (! --count) {\n            defer.resolveWith(elements, [elements]);\n          }\n        };\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n      type = type || \"fx\";\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n  var isAttached = function (elem) {\n      return jQuery.contains(elem.ownerDocument, elem);\n    },\n    composed = {\n      composed: true\n    };\n\n  // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n  if (documentElement.getRootNode) {\n    isAttached = function (elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem;\n\n    // Inline style trumps all\n    return elem.style.display === \"none\" || elem.style.display === \"\" &&\n    // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n      scale,\n      maxIterations = 20,\n      currentValue = tween ? function () {\n        return tween.cur();\n      } : function () {\n        return jQuery.css(elem, prop, \"\");\n      },\n      initial = currentValue(),\n      unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n      // Starting value computation is required for potential unit mismatches\n      initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2;\n\n      // Trust units reported by jQuery.css\n      unit = unit || initialInUnit[3];\n\n      // Iteratively approximate from a nonzero starting point\n      initialInUnit = +initial || 1;\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n        initialInUnit = initialInUnit / scale;\n      }\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit);\n\n      // Make sure we update the tween properties later on\n      valueParts = valueParts || [];\n    }\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0;\n\n      // Apply relative offset (+=/-=) if specified\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n    return adjusted;\n  }\n  var defaultDisplayMap = {};\n  function getDefaultDisplay(elem) {\n    var temp,\n      doc = elem.ownerDocument,\n      nodeName = elem.nodeName,\n      display = defaultDisplayMap[nodeName];\n    if (display) {\n      return display;\n    }\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n    if (display === \"none\") {\n      display = \"block\";\n    }\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n  function showHide(elements, show) {\n    var display,\n      elem,\n      values = [],\n      index = 0,\n      length = elements.length;\n\n    // Determine new display value for elements that need to change\n    for (; index < length; index++) {\n      elem = elements[index];\n      if (!elem.style) {\n        continue;\n      }\n      display = elem.style.display;\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\";\n\n          // Remember what we're overwriting\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    }\n\n    // Set the display of the elements in a second loop to avoid constant reflow\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n    return elements;\n  }\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n  (function () {\n    var fragment = document.createDocumentFragment(),\n      div = fragment.appendChild(document.createElement(\"div\")),\n      input = document.createElement(\"input\");\n\n    // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (trac-11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (trac-14901)\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input);\n\n    // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n\n    // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n\n    // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })();\n\n  // We have to close these tags to support XHTML (trac-13200)\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  // Support: IE <=9 only\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n    var ret;\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n    return ret;\n  }\n\n  // Mark scripts as having already been evaluated\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n      l = elems.length;\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n  var rhtml = /<|&#?\\w+;/;\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n      tmp,\n      tag,\n      wrap,\n      attached,\n      j,\n      fragment = context.createDocumentFragment(),\n      nodes = [],\n      i = 0,\n      l = elems.length;\n    for (; i < l; i++) {\n      elem = elems[i];\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n\n          // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem));\n\n          // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n\n          // Deserialize a standard representation\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n\n          // Descend through wrappers to the right content\n          j = wrap[0];\n          while (j--) {\n            tmp = tmp.lastChild;\n          }\n\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, tmp.childNodes);\n\n          // Remember the top-level container\n          tmp = fragment.firstChild;\n\n          // Ensure the created nodes are orphaned (trac-12392)\n          tmp.textContent = \"\";\n        }\n      }\n    }\n\n    // Remove wrapper from fragment\n    fragment.textContent = \"\";\n    i = 0;\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n        continue;\n      }\n      attached = isAttached(elem);\n\n      // Append to fragment\n      tmp = getAll(fragment.appendChild(elem), \"script\");\n\n      // Preserve script evaluation history\n      if (attached) {\n        setGlobalEval(tmp);\n      }\n\n      // Capture executables\n      if (scripts) {\n        j = 0;\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type;\n\n    // Types can be a map of types/handlers\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n      return elem;\n    }\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n    if (one === 1) {\n      origFn = fn;\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      };\n\n      // Use same guid so caller can remove using origFn\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n        eventHandle,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.get(elem);\n\n      // Only attach events to objects that accept data\n      if (!acceptData(elem)) {\n        return;\n      }\n\n      // Caller can pass in an object of custom data in lieu of the handler\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      }\n\n      // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      }\n\n      // Make sure that the handler has a unique ID, used to find/remove it later\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      }\n\n      // Init the element's event structure and main handler, if this is the first\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      }\n\n      // Handle multiple events separated by a space\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n\n        // There *must* be a type, no attaching namespace-only handlers\n        if (!type) {\n          continue;\n        }\n\n        // If event changes its type, use the special event handlers for the changed type\n        special = jQuery.event.special[type] || {};\n\n        // If selector defined, determine special event api type, otherwise given type\n        type = (selector ? special.delegateType : special.bindType) || type;\n\n        // Update special based on newly reset type\n        special = jQuery.event.special[type] || {};\n\n        // handleObj is passed to all event handlers\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn);\n\n        // Init the event handler queue if we're the first\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0;\n\n          // Only use addEventListener if the special events handler returns false\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n        if (special.add) {\n          special.add.call(elem, handleObj);\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        }\n\n        // Add to the element's handler list, delegates in front\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        }\n\n        // Keep track of which events have ever been used, for event optimization\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n        origCount,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      }\n\n      // Once for each type.namespace in types; type may be omitted\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n\n        // Unbind all events (on this namespace, if provided) for the element\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n          continue;\n        }\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n\n        // Remove matching events\n        origCount = j = handlers.length;\n        while (j--) {\n          handleObj = handlers[j];\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        }\n\n        // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n          delete events[type];\n        }\n      }\n\n      // Remove data and the expando if it's no longer used\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      var i,\n        j,\n        ret,\n        matched,\n        handleObj,\n        handlerQueue,\n        args = new Array(arguments.length),\n        // Make a writable jQuery.Event from the native event object\n        event = jQuery.event.fix(nativeEvent),\n        handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [],\n        special = jQuery.event.special[event.type] || {};\n\n      // Use the fix-ed jQuery.Event rather than the (read-only) native event\n      args[0] = event;\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      event.delegateTarget = this;\n\n      // Call the preDispatch hook for the mapped type, and let it bail if desired\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      }\n\n      // Determine handlers\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n\n      // Run delegates first; they may want to stop propagation beneath us\n      i = 0;\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      }\n\n      // Call the postDispatch hook for the mapped type\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n        handleObj,\n        sel,\n        matchedHandlers,\n        matchedSelectors,\n        handlerQueue = [],\n        delegateCount = handlers.delegateCount,\n        cur = event.target;\n\n      // Find delegate handlers\n      if (delegateCount &&\n      // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType &&\n      // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (trac-13208)\n          // Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i];\n\n              // Don't conflict with Object.prototype properties (trac-13203)\n              sel = handleObj.selector + \" \";\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      }\n\n      // Add the remaining (directly-bound) handlers\n      cur = this;\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Claim the first handler\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", true);\n          }\n\n          // Return false to allow normal processing in the caller\n          return false;\n        },\n        trigger: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Force setup before triggering a click\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          }\n\n          // Return non-false to allow normal event-path propagation\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function (event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n\n  // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n  function leverageNative(el, type, isSetup) {\n    // Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add\n    if (!isSetup) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n      return;\n    }\n\n    // Register the controller as a special universal handler for all event namespaces\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function (event) {\n        var result,\n          saved = dataPriv.get(this, type);\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          if (!saved) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = slice.call(arguments);\n            dataPriv.set(this, type, saved);\n\n            // Trigger the native event and capture its result\n            this[type]();\n            result = dataPriv.get(this, type);\n            dataPriv.set(this, type, false);\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result;\n            }\n\n            // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering\n            // the native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          }\n\n          // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n        } else if (saved) {\n          // ...and capture the result\n          dataPriv.set(this, type, jQuery.event.trigger(saved[0], saved.slice(1), this));\n\n          // Abort handling of the native event by all jQuery handlers while allowing\n          // native handlers on the same element to run. On target, this is achieved\n          // by stopping immediate propagation just on the jQuery event. However,\n          // the native event is re-wrapped by a jQuery one on each level of the\n          // propagation so the only way to stop it for jQuery is to stop it for\n          // everyone via native `stopPropagation()`. This is not a problem for\n          // focus/blur which don't bubble, but it does also stop click on checkboxes\n          // and radios. We accept this limitation.\n          event.stopPropagation();\n          event.isImmediatePropagationStopped = returnTrue;\n        }\n      }\n    });\n  }\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    }\n\n    // Event object\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type;\n\n      // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &&\n      // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse;\n\n      // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (trac-504, trac-13143)\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget;\n\n      // Event type\n    } else {\n      this.type = src;\n    }\n\n    // Put explicitly provided properties onto the event object\n    if (props) {\n      jQuery.extend(this, props);\n    }\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = src && src.timeStamp || Date.now();\n\n    // Mark it as fixed\n    this[jQuery.expando] = true;\n  };\n\n  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n      this.stopPropagation();\n    }\n  };\n\n  // Includes all common event props including KeyEvent and MouseEvent specific props\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    function focusMappedHandler(nativeEvent) {\n      if (document.documentMode) {\n        // Support: IE 11+\n        // Attach a single focusin/focusout handler on the document while someone wants\n        // focus/blur. This is because the former are synchronous in IE while the latter\n        // are async. In other browsers, all those handlers are invoked synchronously.\n\n        // `handle` from private data would already wrap the event, but we need\n        // to change the `type` here.\n        var handle = dataPriv.get(this, \"handle\"),\n          event = jQuery.event.fix(nativeEvent);\n        event.type = nativeEvent.type === \"focusin\" ? \"focus\" : \"blur\";\n        event.isSimulated = true;\n\n        // First, handle focusin/focusout\n        handle(nativeEvent);\n\n        // ...then, handle focus/blur\n        //\n        // focus/blur don't bubble while focusin/focusout do; simulate the former by only\n        // invoking the handler at the lower level.\n        if (event.target === event.currentTarget) {\n          // The setup part calls `leverageNative`, which, in turn, calls\n          // `jQuery.event.add`, so event handle will already have been set\n          // by this point.\n          handle(event);\n        }\n      } else {\n        // For non-IE browsers, attach a single capturing handler on the document\n        // while someone wants focusin/focusout.\n        jQuery.event.simulate(delegateType, nativeEvent.target, jQuery.event.fix(nativeEvent));\n      }\n    }\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function () {\n        var attaches;\n\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, true);\n        if (document.documentMode) {\n          // Support: IE 9 - 11+\n          // We use the same native handler for focusin & focus (and focusout & blur)\n          // so we need to coordinate setup & teardown parts between those events.\n          // Use `delegateType` as the key as `type` is already used by `leverageNative`.\n          attaches = dataPriv.get(this, delegateType);\n          if (!attaches) {\n            this.addEventListener(delegateType, focusMappedHandler);\n          }\n          dataPriv.set(this, delegateType, (attaches || 0) + 1);\n        } else {\n          // Return false to allow normal processing in the caller\n          return false;\n        }\n      },\n      trigger: function () {\n        // Force setup before trigger\n        leverageNative(this, type);\n\n        // Return non-false to allow normal event-path propagation\n        return true;\n      },\n      teardown: function () {\n        var attaches;\n        if (document.documentMode) {\n          attaches = dataPriv.get(this, delegateType) - 1;\n          if (!attaches) {\n            this.removeEventListener(delegateType, focusMappedHandler);\n            dataPriv.remove(this, delegateType);\n          } else {\n            dataPriv.set(this, delegateType, attaches);\n          }\n        } else {\n          // Return false to indicate standard teardown should be applied\n          return false;\n        }\n      },\n      // Suppress native focus or blur if we're currently inside\n      // a leveraged native-event stack\n      _default: function (event) {\n        return dataPriv.get(event.target, type);\n      },\n      delegateType: delegateType\n    };\n\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    //\n    // Support: IE 9 - 11+\n    // To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,\n    // attach a single handler for both events in IE.\n    jQuery.event.special[delegateType] = {\n      setup: function () {\n        // Handle: regular nodes (via `this.ownerDocument`), window\n        // (via `this.document`) & document (via `this`).\n        var doc = this.ownerDocument || this.document || this,\n          dataHolder = document.documentMode ? this : doc,\n          attaches = dataPriv.get(dataHolder, delegateType);\n\n        // Support: IE 9 - 11+\n        // We use the same native handler for focusin & focus (and focusout & blur)\n        // so we need to coordinate setup & teardown parts between those events.\n        // Use `delegateType` as the key as `type` is already used by `leverageNative`.\n        if (!attaches) {\n          if (document.documentMode) {\n            this.addEventListener(delegateType, focusMappedHandler);\n          } else {\n            doc.addEventListener(type, focusMappedHandler, true);\n          }\n        }\n        dataPriv.set(dataHolder, delegateType, (attaches || 0) + 1);\n      },\n      teardown: function () {\n        var doc = this.ownerDocument || this.document || this,\n          dataHolder = document.documentMode ? this : doc,\n          attaches = dataPriv.get(dataHolder, delegateType) - 1;\n        if (!attaches) {\n          if (document.documentMode) {\n            this.removeEventListener(delegateType, focusMappedHandler);\n          } else {\n            doc.removeEventListener(type, focusMappedHandler, true);\n          }\n          dataPriv.remove(dataHolder, delegateType);\n        } else {\n          dataPriv.set(dataHolder, delegateType, attaches);\n        }\n      }\n    };\n  });\n\n  // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n          target = this,\n          related = event.relatedTarget,\n          handleObj = event.handleObj;\n\n        // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n        return this;\n      }\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n      if (fn === false) {\n        fn = returnFalse;\n      }\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n    // Support: IE <=10 - 11, Edge 12 - 13 only\n    // In IE/Edge using regex groups here causes severe slowdowns.\n    // See https://connect.microsoft.com/IE/feedback/details/1736512/\n    rnoInnerhtml = /<script|<style|<link/i,\n    // checked=\"checked\" or checked\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n    rcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n  // Prefer a tbody over its parent table for containing new rows\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n    return elem;\n  }\n\n  // Replace/restore the type attribute of script elements for safe DOM manipulation\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n    return elem;\n  }\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n    if (dest.nodeType !== 1) {\n      return;\n    }\n\n    // 1. Copy private data: events, handlers, etc.\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    }\n\n    // 2. Copy user data\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  }\n\n  // Fix IE bugs, see support tests\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase();\n\n    // Fails to persist the checked state of a cloned checkbox or radio button.\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked;\n\n      // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n      first,\n      scripts,\n      hasScripts,\n      node,\n      doc,\n      i = 0,\n      l = collection.length,\n      iNoClone = l - 1,\n      value = args[0],\n      valueIsFunction = isFunction(value);\n\n    // We can't cloneNode fragments that contain checked, in WebKit\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n        domManip(self, args, callback, ignored);\n      });\n    }\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      }\n\n      // Require either new content or an interest in ignored elements to invoke the callback\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length;\n\n        // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (trac-8070).\n        for (; i < l; i++) {\n          node = fragment;\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true);\n\n            // Keep references to cloned scripts for later restoration\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n          callback.call(collection[i], node, i);\n        }\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument;\n\n          // Re-enable scripts\n          jQuery.map(scripts, restoreScript);\n\n          // Evaluate executable scripts on first document insertion\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                // Unwrap a CDATA section containing script contents. This shouldn't be\n                // needed as in XML documents they're already not visible when\n                // inspecting element contents and in HTML documents they have no\n                // meaning but we're preserving that logic for backwards compatibility.\n                // This will be removed completely in 4.0. See gh-4904.\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n    return collection;\n  }\n  function remove(elem, selector, keepData) {\n    var node,\n      nodes = selector ? jQuery.filter(selector, elem) : elem,\n      i = 0;\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n        node.parentNode.removeChild(node);\n      }\n    }\n    return elem;\n  }\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html;\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n        l,\n        srcElements,\n        destElements,\n        clone = elem.cloneNode(true),\n        inPage = isAttached(elem);\n\n      // Fix IE cloning issues\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew jQuery#find here for performance reasons:\n        // https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      }\n\n      // Copy the events from the original to the clone\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      }\n\n      // Preserve script evaluation history\n      destElements = getAll(clone, \"script\");\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      }\n\n      // Return the cloned set\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n        elem,\n        type,\n        special = jQuery.event.special,\n        i = 0;\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type);\n\n                  // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            }\n\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataPriv.expando] = undefined;\n          }\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n        i = 0;\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false));\n\n          // Remove any remaining nodes\n          elem.textContent = \"\";\n        }\n      }\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n          i = 0,\n          l = this.length;\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        }\n\n        // See if we can take a shortcut and just use innerHTML\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {};\n\n              // Remove element nodes and prevent memory leaks\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n            elem = 0;\n\n            // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = [];\n\n      // Make the changes, replacing each non-ignored context element with the new content\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        }\n\n        // Force callback invocation\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n        ret = [],\n        insert = jQuery(selector),\n        last = insert.length - 1,\n        i = 0;\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems);\n\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n        push.apply(ret, elems.get());\n      }\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n  var rcustomProp = /^--/;\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n    if (!view || !view.opener) {\n      view = window;\n    }\n    return view.getComputedStyle(elem);\n  };\n  var swap = function (elem, options, callback) {\n    var ret,\n      name,\n      old = {};\n\n    // Remember the old values, and insert the new ones\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n    ret = callback.call(elem);\n\n    // Revert the old values\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n    return ret;\n  };\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\";\n\n      // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;\n\n      // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;\n\n      // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;\n\n      // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container);\n\n      // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n      div = null;\n    }\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n    var pixelPositionVal,\n      boxSizingReliableVal,\n      scrollboxSizeVal,\n      pixelBoxStylesVal,\n      reliableTrDimensionsVal,\n      reliableMarginLeftVal,\n      container = document.createElement(\"div\"),\n      div = document.createElement(\"div\");\n\n    // Finish early in limited (non-browser) environments\n    if (!div.style) {\n      return;\n    }\n\n    // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (trac-8908)\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function () {\n        var table, tr, trChild, trStyle;\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"box-sizing:content-box;border:1px solid\";\n\n          // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\";\n\n          // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to \"inline\",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is `display: block`\n          // gets around this issue.\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n  function curCSS(elem, name, computed) {\n    var width,\n      minWidth,\n      maxWidth,\n      ret,\n      isCustomProp = rcustomProp.test(name),\n      // Support: Firefox 51+\n      // Retrieving style before computed somehow\n      // fixes an issue with getting wrong values\n      // on detached elements\n      style = elem.style;\n    computed = computed || getStyles(elem);\n\n    // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, trac-12537)\n    //   .css('--customProperty) (gh-3144)\n    if (computed) {\n      // Support: IE <=9 - 11+\n      // IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n      // it's only available as `\"cssFloat\"`. We no longer modify properties\n      // sent to `.css()` apart from camelCasing, so we need to check both.\n      // Normally, this would create difference in behavior: if\n      // `getPropertyValue` returns an empty string, the value returned\n      // by `.css()` would be `undefined`. This is usually the case for\n      // disconnected elements. However, in IE even disconnected elements\n      // with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n      ret = computed.getPropertyValue(name) || computed[name];\n      if (isCustomProp && ret) {\n        // Support: Firefox 105+, Chrome <=105+\n        // Spec requires trimming whitespace for custom properties (gh-4926).\n        // Firefox only trims leading whitespace. Chrome just collapses\n        // both leading & trailing whitespace to a single space.\n        //\n        // Fall back to `undefined` if empty string returned.\n        // This collapses a missing definition with property defined\n        // and set to an empty string but there's no standard API\n        // allowing us to differentiate them without a performance penalty\n        // and returning `undefined` aligns with older jQuery.\n        //\n        // rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n        // as whitespace while CSS does not, but this is not a problem\n        // because CSS preprocessing replaces them with U+000A LINE FEED\n        // (which *is* CSS whitespace)\n        // https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n        ret = ret.replace(rtrimCSS, \"$1\") || undefined;\n      }\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      }\n\n      // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth;\n\n        // Put in the new values to get a computed value out\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width;\n\n        // Revert the changed values\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n    return ret !== undefined ?\n    // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        }\n\n        // Hook needed; redefine it so that the support test is not executed again.\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n    emptyStyle = document.createElement(\"div\").style,\n    vendorProps = {};\n\n  // Return a vendor-prefixed property or undefined\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n      i = cssPrefixes.length;\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  }\n\n  // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n    if (final) {\n      return final;\n    }\n    if (name in emptyStyle) {\n      return name;\n    }\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n  var\n    // Swappable if display is none or starts with table\n    // except \"table\", \"table-cell\", or \"table-caption\"\n    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n    cssShow = {\n      position: \"absolute\",\n      visibility: \"hidden\",\n      display: \"block\"\n    },\n    cssNormalTransform = {\n      letterSpacing: \"0\",\n      fontWeight: \"400\"\n    };\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ?\n    // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n      extra = 0,\n      delta = 0,\n      marginDelta = 0;\n\n    // Adjustment may not be necessary\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      // Count margin delta separately to only add it after scroll gutter adjustment.\n      // This is needed to make negative margins work with `outerHeight( true )` (gh-3982).\n      if (box === \"margin\") {\n        marginDelta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      }\n\n      // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n\n        // For \"border\" or \"margin\", add border\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\n          // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n\n        // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        }\n\n        // For \"content\" or \"padding\", subtract border\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    }\n\n    // Account for positive content-box scroll gutter when requested by providing computedVal\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5\n\n      // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n    return delta + marginDelta;\n  }\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n      // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n      // Fake content-box until we know it's needed to know the true value.\n      boxSizingNeeded = !support.boxSizingReliable() || extra,\n      isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n      valueIsBorderBox = isBorderBox,\n      val = curCSS(elem, dimension, styles),\n      offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n\n    // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n      val = \"auto\";\n    }\n\n    // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n    if ((!support.boxSizingReliable() && isBorderBox ||\n    // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, \"tr\") ||\n    // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === \"auto\" ||\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") &&\n    // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n\n      // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n      valueIsBorderBox = offsetProp in elem;\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    }\n\n    // Normalize \"\" and auto\n    val = parseFloat(val) || 0;\n\n    // Adjust for the element's box model\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles,\n    // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      animationIterationCount: true,\n      aspectRatio: true,\n      borderImageSlice: true,\n      columnCount: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      gridArea: true,\n      gridColumn: true,\n      gridColumnEnd: true,\n      gridColumnStart: true,\n      gridRow: true,\n      gridRowEnd: true,\n      gridRowStart: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      scale: true,\n      widows: true,\n      zIndex: true,\n      zoom: true,\n      // SVG-related\n      fillOpacity: true,\n      floodOpacity: true,\n      stopOpacity: true,\n      strokeMiterlimit: true,\n      strokeOpacity: true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      }\n\n      // Make sure that we're working with the right name\n      var ret,\n        type,\n        hooks,\n        origName = camelCase(name),\n        isCustomProp = rcustomProp.test(name),\n        style = elem.style;\n\n      // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n\n      // Gets hook for the prefixed version, then unprefixed version\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // Check if we're setting a value\n      if (value !== undefined) {\n        type = typeof value;\n\n        // Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret);\n\n          // Fixes bug trac-9237\n          type = \"number\";\n        }\n\n        // Make sure that null and NaN values aren't set (trac-7116)\n        if (value == null || value !== value) {\n          return;\n        }\n\n        // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        }\n\n        // background-* props affect original clone's values\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        }\n\n        // If a hook was provided, use that value, otherwise just set the specified value\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        }\n\n        // Otherwise just get the value from the style object\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n        num,\n        hooks,\n        origName = camelCase(name),\n        isCustomProp = rcustomProp.test(name);\n\n      // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n\n      // Try prefixed name followed by the unprefixed name\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // If a hook was provided get the computed value from there\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      }\n\n      // Otherwise, if a way to get the computed value exists, use that\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      }\n\n      // Convert \"normal\" to computed value\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      }\n\n      // Make numeric if forced or a qualifier was provided and val looks numeric\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && (\n          // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n          styles = getStyles(elem),\n          // Only read styles.position if the test has a chance to fail\n          // to avoid forcing a reflow.\n          scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n          // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n          boxSizingNeeded = scrollboxSizeBuggy || extra,\n          isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n          subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;\n\n        // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        }\n\n        // Convert to pixels if value adjustment is needed\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  });\n\n  // These hooks are used by animate to expand properties\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n          expanded = {},\n          // Assumes a single number if not a string\n          parts = typeof value === \"string\" ? value.split(\" \") : [value];\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n        return expanded;\n      }\n    };\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n          len,\n          map = {},\n          i = 0;\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n          return map;\n        }\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n        hooks = Tween.propHooks[this.prop];\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n      this.now = (this.end - this.start) * eased + this.start;\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result;\n\n        // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        }\n\n        // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n        result = jQuery.css(tween.elem, tween.prop, \"\");\n\n        // Empty strings, null, undefined and \"auto\" are converted to 0.\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  };\n\n  // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init;\n\n  // Back compat <1.8 extension point\n  jQuery.fx.step = {};\n  var fxNow,\n    inProgress,\n    rfxtypes = /^(?:toggle|show|hide)$/,\n    rrun = /queueHooks$/;\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n      jQuery.fx.tick();\n    }\n  }\n\n  // Animations created synchronously will run synchronously\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  }\n\n  // Generate parameters to create a standard animation\n  function genFx(type, includeWidth) {\n    var which,\n      i = 0,\n      attrs = {\n        height: type\n      };\n\n    // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n    includeWidth = includeWidth ? 1 : 0;\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n    return attrs;\n  }\n  function createTween(value, prop, animation) {\n    var tween,\n      collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n      index = 0,\n      length = collection.length;\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n      value,\n      toggle,\n      hooks,\n      oldfire,\n      propTween,\n      restoreDisplay,\n      display,\n      isBox = \"width\" in props || \"height\" in props,\n      anim = this,\n      orig = {},\n      style = elem.style,\n      hidden = elem.nodeType && isHiddenWithinTree(elem),\n      dataShow = dataPriv.get(elem, \"fxshow\");\n\n    // Queue-skipping animations hijack the fx hooks\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    }\n\n    // Detect show/hide animations\n    for (prop in props) {\n      value = props[prop];\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true;\n\n            // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    }\n\n    // Bail out if this is a no-op like .hide().hide()\n    propTween = !jQuery.isEmptyObject(props);\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    }\n\n    // Restrict \"overflow\" and \"display\" styles during box animations\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n\n      // Identify a display type, preferring old show/hide data over the CSS cascade\n      restoreDisplay = dataShow && dataShow.display;\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n      display = jQuery.css(elem, \"display\");\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      }\n\n      // Animate inline elements as inline-block\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n          style.display = \"inline-block\";\n        }\n      }\n    }\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    }\n\n    // Implement show/hide animations\n    propTween = false;\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        }\n\n        // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        }\n\n        // Show elements before animating them\n        if (hidden) {\n          showHide([elem], true);\n        }\n\n        /* eslint-disable no-loop-func */\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n          dataPriv.remove(elem, \"fxshow\");\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      }\n\n      // Per-property setup\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks;\n\n    // camelCase, specialEasing and expand cssHook pass\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n      hooks = jQuery.cssHooks[name];\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name];\n\n        // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n  function Animation(elem, properties, options) {\n    var result,\n      stopped,\n      index = 0,\n      length = Animation.prefilters.length,\n      deferred = jQuery.Deferred().always(function () {\n        // Don't match elem in the :animated selector\n        delete tick.elem;\n      }),\n      tick = function () {\n        if (stopped) {\n          return false;\n        }\n        var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n          // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n          temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n        for (; index < length; index++) {\n          animation.tweens[index].run(percent);\n        }\n        deferred.notifyWith(elem, [animation, percent, remaining]);\n\n        // If there's more to do, yield\n        if (percent < 1 && length) {\n          return remaining;\n        }\n\n        // If this was an empty animation, synthesize a final progress notification\n        if (!length) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n        }\n\n        // Resolve the animation and report its conclusion\n        deferred.resolveWith(elem, [animation]);\n        return false;\n      },\n      animation = deferred.promise({\n        elem: elem,\n        props: jQuery.extend({}, properties),\n        opts: jQuery.extend(true, {\n          specialEasing: {},\n          easing: jQuery.easing._default\n        }, options),\n        originalProperties: properties,\n        originalOptions: options,\n        startTime: fxNow || createFxNow(),\n        duration: options.duration,\n        tweens: [],\n        createTween: function (prop, end) {\n          var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n          animation.tweens.push(tween);\n          return tween;\n        },\n        stop: function (gotoEnd) {\n          var index = 0,\n            // If we are going to the end, we want to run all the tweens\n            // otherwise we skip this part\n            length = gotoEnd ? animation.tweens.length : 0;\n          if (stopped) {\n            return this;\n          }\n          stopped = true;\n          for (; index < length; index++) {\n            animation.tweens[index].run(1);\n          }\n\n          // Resolve when we played the last frame; otherwise, reject\n          if (gotoEnd) {\n            deferred.notifyWith(elem, [animation, 1, 0]);\n            deferred.resolveWith(elem, [animation, gotoEnd]);\n          } else {\n            deferred.rejectWith(elem, [animation, gotoEnd]);\n          }\n          return this;\n        }\n      }),\n      props = animation.props;\n    propFilter(props, animation.opts.specialEasing);\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n        return result;\n      }\n    }\n    jQuery.map(props, createTween, animation);\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    }\n\n    // Attach callbacks from options\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n      var prop,\n        index = 0,\n        length = props.length;\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    };\n\n    // Go to the end state if fx are off\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    }\n\n    // Normalize opt.queue - true/undefined/null -> \"fx\"\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    }\n\n    // Queueing\n    opt.old = opt.complete;\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n    return opt;\n  };\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show()\n\n      // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n        optall = jQuery.speed(speed, easing, callback),\n        doAnimation = function () {\n          // Operate on a copy of prop so per-property easing won't be lost\n          var anim = Animation(this, jQuery.extend({}, prop), optall);\n\n          // Empty animations, or finishing resolves immediately\n          if (empty || dataPriv.get(this, \"finish\")) {\n            anim.stop(true);\n          }\n        };\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n      return this.each(function () {\n        var dequeue = true,\n          index = type != null && type + \"queueHooks\",\n          timers = jQuery.timers,\n          data = dataPriv.get(this);\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        }\n\n        // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n      return this.each(function () {\n        var index,\n          data = dataPriv.get(this),\n          queue = data[type + \"queue\"],\n          hooks = data[type + \"queueHooks\"],\n          timers = jQuery.timers,\n          length = queue ? queue.length : 0;\n\n        // Enable finishing flag on private data\n        data.finish = true;\n\n        // Empty the queue first\n        jQuery.queue(this, type, []);\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        }\n\n        // Look for any active animations, and finish them\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        }\n\n        // Look for any animations in the old queue and finish them\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        }\n\n        // Turn off finishing flag\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  });\n\n  // Generate shortcuts for custom animations\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n  jQuery.fx.tick = function () {\n    var timer,\n      i = 0,\n      timers = jQuery.timers;\n    fxNow = Date.now();\n    for (; i < timers.length; i++) {\n      timer = timers[i];\n\n      // Run the timer and safely remove it when done (allowing for external removal)\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n    fxNow = undefined;\n  };\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n  jQuery.fx.interval = 13;\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n    inProgress = true;\n    schedule();\n  };\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  };\n\n  // Based off of the plugin by Clint Helfers, with permission.\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n  (function () {\n    var input = document.createElement(\"input\"),\n      select = document.createElement(\"select\"),\n      opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\";\n\n    // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n    support.checkOn = input.value !== \"\";\n\n    // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n    support.optSelected = opt.selected;\n\n    // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n  var boolHook,\n    attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set attributes on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      // Fallback to prop when attributes are not supported\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      }\n\n      // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      ret = jQuery.find.attr(elem, name);\n\n      // Non-existent attributes return null, we normalize to undefined\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n            if (val) {\n              elem.value = val;\n            }\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n        i = 0,\n        // Attribute names can contain non-HTML whitespace characters\n        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n        attrNames = value && value.match(rnothtmlwhite);\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  });\n\n  // Hooks for boolean attributes\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n        handle,\n        lowercaseName = name.toLowerCase();\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n    rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set properties on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n        return elem[name] = value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // Use proper attribute retrieval (trac-12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  });\n\n  // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent) {\n          parent.selectedIndex;\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  });\n\n  // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n    return [];\n  }\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classNames, cur, curValue, className, i, finalValue;\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n      classNames = classesToArray(value);\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this);\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i];\n              if (cur.indexOf(\" \" + className + \" \") < 0) {\n                cur += className + \" \";\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n      return this;\n    },\n    removeClass: function (value) {\n      var classNames, cur, curValue, className, i, finalValue;\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n      classNames = classesToArray(value);\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this);\n\n          // This expression is here for better compressibility (see addClass)\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i];\n\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + className + \" \") > -1) {\n                cur = cur.replace(\" \" + className + \" \", \" \");\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var classNames,\n        className,\n        i,\n        self,\n        type = typeof value,\n        isValidValue = type === \"string\" || Array.isArray(value);\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n      classNames = classesToArray(value);\n      return this.each(function () {\n        if (isValidValue) {\n          // Toggle individual class names\n          self = jQuery(this);\n          for (i = 0; i < classNames.length; i++) {\n            className = classNames[i];\n\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          }\n\n          // Toggle whole class name\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          }\n\n          // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n        elem,\n        i = 0;\n      className = \" \" + selector + \" \";\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n        ret,\n        valueIsFunction,\n        elem = this[0];\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n          ret = elem.value;\n\n          // Handle most common string cases\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          }\n\n          // Handle cases where value is null/undef or number\n          return ret == null ? \"\" : ret;\n        }\n        return;\n      }\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n        if (this.nodeType !== 1) {\n          return;\n        }\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        }\n\n        // Treat null/undefined as \"\"; convert numbers to string\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n\n        // If set returns undefined, fall back to normal setting\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val :\n          // Support: IE <=10 - 11 only\n          // option.text throws exceptions (trac-14686, trac-14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n            option,\n            i,\n            options = elem.options,\n            index = elem.selectedIndex,\n            one = elem.type === \"select-one\",\n            values = one ? null : [],\n            max = one ? index + 1 : options.length;\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          }\n\n          // Loop through all the selected options\n          for (; i < max; i++) {\n            option = options[i];\n\n            // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (trac-2551)\n            if ((option.selected || i === index) &&\n            // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val();\n\n              // We don't need an array for one selects\n              if (one) {\n                return value;\n              }\n\n              // Multi-Selects return an array\n              values.push(value);\n            }\n          }\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n            option,\n            options = elem.options,\n            values = jQuery.makeArray(value),\n            i = options.length;\n          while (i--) {\n            option = options[i];\n\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n\n            /* eslint-enable no-cond-assign */\n          }\n\n          // Force browsers to behave consistently when non-matching value is set\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n          return values;\n        }\n      }\n    }\n  });\n\n  // Radios and checkboxes getter/setter\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  });\n\n  // Return jQuery for attributes-only inclusion\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/;\n\n  // Cross-browser xml parsing\n  jQuery.parseXML = function (data) {\n    var xml, parserErrorElem;\n    if (!data || typeof data !== \"string\") {\n      return null;\n    }\n\n    // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {}\n    parserErrorElem = xml && xml.getElementsByTagName(\"parsererror\")[0];\n    if (!xml || parserErrorElem) {\n      jQuery.error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {\n        return el.textContent;\n      }).join(\"\\n\") : data));\n    }\n    return xml;\n  };\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n    stopPropagationCallback = function (e) {\n      e.stopPropagation();\n    };\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n        cur,\n        tmp,\n        bubbleType,\n        ontype,\n        handle,\n        special,\n        lastElement,\n        eventPath = [elem || document],\n        type = hasOwn.call(event, \"type\") ? event.type : event,\n        namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document;\n\n      // Don't do events on text and comment nodes\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      }\n\n      // focus/blur morphs to focusin/out; ensure we're not firing them right now\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n      // Caller can pass in a jQuery.Event object, Object, or just an event type string\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event);\n\n      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n\n      // Clean up the event in case it is being reused\n      event.result = undefined;\n      if (!event.target) {\n        event.target = elem;\n      }\n\n      // Clone any incoming data and prepend the event, creating the handler arg list\n      data = data == null ? [event] : jQuery.makeArray(data, [event]);\n\n      // Allow special events to draw outside the lines\n      special = jQuery.event.special[type] || {};\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      }\n\n      // Determine event propagation path in advance, per W3C events spec (trac-9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        }\n\n        // Only add window if we got to document (e.g., not plain obj or detached DOM)\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      }\n\n      // Fire handlers on the event path\n      i = 0;\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type;\n\n        // jQuery handler\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n        if (handle) {\n          handle.apply(cur, data);\n        }\n\n        // Native handler\n        handle = ontype && cur[ontype];\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n      event.type = type;\n\n      // If nobody prevented the default action, do it now\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (trac-6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n            if (tmp) {\n              elem[ontype] = null;\n            }\n\n            // Prevent re-triggering of the same event, since we already bubbled it above\n            jQuery.event.triggered = type;\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n            elem[type]();\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n            jQuery.event.triggered = undefined;\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  });\n  var rbracket = /\\[\\]$/,\n    rCRLF = /\\r?\\n/g,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n    rsubmittable = /^(?:input|select|textarea|keygen)/i;\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  }\n\n  // Serialize an array of form elements or a set of\n  // key/values into a query string\n  jQuery.param = function (a, traditional) {\n    var prefix,\n      s = [],\n      add = function (key, valueOrFunction) {\n        // If value is a function, invoke it and use its return value\n        var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n        s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n      };\n    if (a == null) {\n      return \"\";\n    }\n\n    // If an array was passed in, assume that it is an array of form elements.\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    }\n\n    // Return the resulting serialization\n    return s.join(\"&\");\n  };\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type;\n\n        // Use .is( \":disabled\" ) so that fieldset[disabled] works\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n        if (val == null) {\n          return null;\n        }\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n    rhash = /#.*$/,\n    rantiCache = /([?&])_=[^&]*/,\n    rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n    // trac-7653, trac-8125, trac-8152: local protocol detection\n    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n    rnoContent = /^(?:GET|HEAD)$/,\n    rprotocol = /^\\/\\//,\n    /* Prefilters\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n     * 2) These are called:\n     *    - BEFORE asking for a transport\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\n     * 3) key is the dataType\n     * 4) the catchall symbol \"*\" can be used\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n     */\n    prefilters = {},\n    /* Transports bindings\n     * 1) key is the dataType\n     * 2) the catchall symbol \"*\" can be used\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n     */\n    transports = {},\n    // Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n    allTypes = \"*/\".concat(\"*\"),\n    // Anchor tag for parsing the document origin\n    originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href;\n\n  // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n      var dataType,\n        i = 0,\n        dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func);\n\n            // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  }\n\n  // Base inspection function for prefilters and transports\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n      seekingTransport = structure === transports;\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  }\n\n  // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes trac-9887\n  function ajaxExtend(target, src) {\n    var key,\n      deep,\n      flatOptions = jQuery.ajaxSettings.flatOptions || {};\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n    return target;\n  }\n\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n      type,\n      finalDataType,\n      firstDataType,\n      contents = s.contents,\n      dataTypes = s.dataTypes;\n\n    // Remove auto dataType and get content-type in the process\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    }\n\n    // Check if we're dealing with a known content-type\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    }\n\n    // Check to see if we have a response for the expected dataType\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      }\n\n      // Or just use first one\n      finalDataType = finalDataType || firstDataType;\n    }\n\n    // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n      return responses[finalDataType];\n    }\n  }\n\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n      current,\n      conv,\n      tmp,\n      prev,\n      converters = {},\n      // Work with a copy of dataTypes in case we need to modify it for conversion\n      dataTypes = s.dataTypes.slice();\n\n    // Create converters map with lowercased keys\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n    current = dataTypes.shift();\n\n    // Convert to each sequential dataType\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      }\n\n      // Apply the dataFilter if provided\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n      prev = current;\n      current = dataTypes.shift();\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev;\n\n          // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n\n          // If none found, seek a pair\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2];\n\n                    // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n                  break;\n                }\n              }\n            }\n          }\n\n          // Apply converter (if not an equivalence)\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ?\n      // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\n      // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      }\n\n      // Force options to be an object\n      options = options || {};\n      var transport,\n        // URL without anti-cache param\n        cacheURL,\n        // Response headers\n        responseHeadersString,\n        responseHeaders,\n        // timeout handle\n        timeoutTimer,\n        // Url cleanup var\n        urlAnchor,\n        // Request state (becomes false upon send and true upon completion)\n        completed,\n        // To know if global events are to be dispatched\n        fireGlobals,\n        // Loop variable\n        i,\n        // uncached part of the url\n        uncached,\n        // Create the final options object\n        s = jQuery.ajaxSetup({}, options),\n        // Callbacks context\n        callbackContext = s.context || s,\n        // Context for global events is callbackContext if it is a DOM node or jQuery collection\n        globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n        // Deferreds\n        deferred = jQuery.Deferred(),\n        completeDeferred = jQuery.Callbacks(\"once memory\"),\n        // Status-dependent callbacks\n        statusCode = s.statusCode || {},\n        // Headers (they are sent all at once)\n        requestHeaders = {},\n        requestHeadersNames = {},\n        // Default abort message\n        strAbort = \"canceled\",\n        // Fake xhr\n        jqXHR = {\n          readyState: 0,\n          // Builds headers hashtable if needed\n          getResponseHeader: function (key) {\n            var match;\n            if (completed) {\n              if (!responseHeaders) {\n                responseHeaders = {};\n                while (match = rheaders.exec(responseHeadersString)) {\n                  responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n                }\n              }\n              match = responseHeaders[key.toLowerCase() + \" \"];\n            }\n            return match == null ? null : match.join(\", \");\n          },\n          // Raw string\n          getAllResponseHeaders: function () {\n            return completed ? responseHeadersString : null;\n          },\n          // Caches the header\n          setRequestHeader: function (name, value) {\n            if (completed == null) {\n              name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n              requestHeaders[name] = value;\n            }\n            return this;\n          },\n          // Overrides response content-type header\n          overrideMimeType: function (type) {\n            if (completed == null) {\n              s.mimeType = type;\n            }\n            return this;\n          },\n          // Status-dependent callbacks\n          statusCode: function (map) {\n            var code;\n            if (map) {\n              if (completed) {\n                // Execute the appropriate callbacks\n                jqXHR.always(map[jqXHR.status]);\n              } else {\n                // Lazy-add the new callbacks in a way that preserves old ones\n                for (code in map) {\n                  statusCode[code] = [statusCode[code], map[code]];\n                }\n              }\n            }\n            return this;\n          },\n          // Cancel the request\n          abort: function (statusText) {\n            var finalText = statusText || strAbort;\n            if (transport) {\n              transport.abort(finalText);\n            }\n            done(0, finalText);\n            return this;\n          }\n        };\n\n      // Attach deferreds\n      deferred.promise(jqXHR);\n\n      // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (trac-10093: consistency with old signature)\n      // We also use the url parameter if available\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\");\n\n      // Alias method option to type as per ticket trac-12004\n      s.type = options.method || options.type || s.method || s.type;\n\n      // Extract dataTypes list\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"];\n\n      // A cross-domain request is in order when the origin doesn't match the current origin.\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\");\n\n        // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n        try {\n          urlAnchor.href = s.url;\n\n          // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      }\n\n      // Convert data if not already a string\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      }\n\n      // Apply prefilters\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n\n      // If request was aborted inside a prefilter, stop there\n      if (completed) {\n        return jqXHR;\n      }\n\n      // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n      fireGlobals = jQuery.event && s.global;\n\n      // Watch for a new set of requests\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      }\n\n      // Uppercase the type\n      s.type = s.type.toUpperCase();\n\n      // Determine if request has content\n      s.hasContent = !rnoContent.test(s.type);\n\n      // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n      cacheURL = s.url.replace(rhash, \"\");\n\n      // More options handling for requests with no content\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length);\n\n        // If data is available and should be processed, append data to url\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data;\n\n          // trac-9682: remove data so that it's not used in an eventual retry\n          delete s.data;\n        }\n\n        // Add or update anti-cache param if needed\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        }\n\n        // Put hash and anti-cache on the URL that will be requested (gh-1732)\n        s.url = cacheURL + uncached;\n\n        // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      }\n\n      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      }\n\n      // Set the correct header, if data is being sent\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      }\n\n      // Set the Accepts header for the server, depending on the dataType\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n\n      // Check for headers option\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      }\n\n      // Allow custom headers/mimetypes and early abort\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      }\n\n      // Aborting is no longer a cancellation\n      strAbort = \"abort\";\n\n      // Install callbacks on deferreds\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error);\n\n      // Get transport\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n\n      // If no transport, we auto-abort\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1;\n\n        // Send global event\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        }\n\n        // If request was aborted inside ajaxSend, stop there\n        if (completed) {\n          return jqXHR;\n        }\n\n        // Timeout\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          }\n\n          // Propagate others as results\n          done(-1, e);\n        }\n      }\n\n      // Callback for when everything is done\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n          success,\n          error,\n          response,\n          modified,\n          statusText = nativeStatusText;\n\n        // Ignore repeat invocations\n        if (completed) {\n          return;\n        }\n        completed = true;\n\n        // Clear timeout if it exists\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        }\n\n        // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n        transport = undefined;\n\n        // Cache response headers\n        responseHeadersString = headers || \"\";\n\n        // Set readyState\n        jqXHR.readyState = status > 0 ? 4 : 0;\n\n        // Determine if successful\n        isSuccess = status >= 200 && status < 300 || status === 304;\n\n        // Get response data\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        }\n\n        // Use a noop converter for missing script but not if jsonp\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1 && jQuery.inArray(\"json\", s.dataTypes) < 0) {\n          s.converters[\"text script\"] = function () {};\n        }\n\n        // Convert no matter what (that way responseXXX fields are always set)\n        response = ajaxConvert(s, response, jqXHR, isSuccess);\n\n        // If successful, handle type chaining\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n            modified = jqXHR.getResponseHeader(\"etag\");\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          }\n\n          // if no content\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\";\n\n            // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\";\n\n            // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n          if (status || !statusText) {\n            statusText = \"error\";\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        }\n\n        // Set data for the fake xhr object\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n\n        // Success/Error\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        }\n\n        // Status-dependent callbacks\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        }\n\n        // Complete\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n\n          // Handle the global AJAX counter\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      }\n\n      // The url can be an options object (which then must have .url)\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (trac-11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function () {}\n      },\n      dataFilter: function (response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        }\n\n        // The elements to wrap the target around\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n        wrap.map(function () {\n          var elem = this;\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n          return elem;\n        }).append(this);\n      }\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n      return this.each(function () {\n        var self = jQuery(this),\n          contents = self.contents();\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n  var xhrSuccessStatus = {\n      // File protocol always yields status code 0, assume 200\n      0: 200,\n      // Support: IE <=9 only\n      // trac-1450: sometimes IE returns 1223 when it should be 204\n      1223: 204\n    },\n    xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback;\n\n    // Cross domain only allowed if supported through XMLHttpRequest\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n            xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password);\n\n          // Apply custom fields if provided\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          }\n\n          // Override mime type if needed\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          }\n\n          // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          }\n\n          // Set headers\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          }\n\n          // Callback\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete(\n                    // File: protocol always yields status 0; see trac-8605, trac-14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText,\n                  // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          };\n\n          // Listen to events\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\");\n\n          // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          }\n\n          // Create the abort callback\n          callback = callback(\"abort\");\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // trac-14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n\n  // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  });\n\n  // Install script dataType\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  });\n\n  // Handle cache's special case and crossDomain\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  });\n\n  // Bind script tag hack transport\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          });\n\n          // Use native DOM manipulation to avoid our domManip AJAX trickery\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n  // Default jsonp settings\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  });\n\n  // Detect, normalize options and install callbacks for jsonp requests\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n      overwritten,\n      responseContainer,\n      jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\");\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n\n      // Insert callback into url or form data\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      }\n\n      // Use data converter to retrieve json after script execution\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n        return responseContainer[0];\n      };\n\n      // Force json dataType\n      s.dataTypes[0] = \"json\";\n\n      // Install callback\n      overwritten = window[callbackName];\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      };\n\n      // Clean-up function (fires after converters)\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName);\n\n          // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        }\n\n        // Save back as free\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback;\n\n          // Save the callback name for future use\n          oldCallbacks.push(callbackName);\n        }\n\n        // Call if it was a function and we have a response\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n        responseContainer = overwritten = undefined;\n      });\n\n      // Delegate to script\n      return \"script\";\n    }\n  });\n\n  // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }();\n\n  // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n    var base, parsed, scripts;\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\");\n\n        // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && [];\n\n    // Single tag\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n    parsed = buildFragment([data], context, scripts);\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n    return jQuery.merge([], parsed.childNodes);\n  };\n\n  /**\n   * Load a url into a page\n   */\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n      type,\n      response,\n      self = this,\n      off = url.indexOf(\" \");\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    }\n\n    // If it's a function\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined;\n\n      // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    }\n\n    // If we have elements to modify, make the request\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ?\n        // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) :\n        // Otherwise use the full result\n        responseText);\n\n        // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n    return this;\n  };\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n        curLeft,\n        curCSSTop,\n        curTop,\n        curOffset,\n        curCSSLeft,\n        calculatePosition,\n        position = jQuery.css(elem, \"position\"),\n        curElem = jQuery(elem),\n        props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n      var rect,\n        win,\n        elem = this[0];\n      if (!elem) {\n        return;\n      }\n\n      // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n\n      // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n      var offsetParent,\n        offset,\n        doc,\n        elem = this[0],\n        parentOffset = {\n          top: 0,\n          left: 0\n        };\n\n      // position:fixed elements are offset from the viewport, which itself always has zero offset\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset();\n\n        // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || documentElement;\n      });\n    }\n  });\n\n  // Create scrollLeft and scrollTop methods\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  });\n\n  // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n  jQuery.each([\"top\", \"left\"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop);\n\n        // If curCSS returns percentage, fallback to offset\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  });\n\n  // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n          extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          }\n\n          // Get document width or height\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement;\n\n            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n          return value === undefined ?\n          // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) :\n          // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function (fnOver, fnOut) {\n      return this.on(\"mouseenter\", fnOver).on(\"mouseleave\", fnOut || fnOver);\n    }\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n\n  // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  // Require that the \"whitespace run\" starts from a non-whitespace\n  // to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n  // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    }\n\n    // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n    if (!isFunction(fn)) {\n      return undefined;\n    }\n\n    // Simulated bind\n    args = slice.call(arguments, 2);\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    };\n\n    // Set the guid of unique handler to the same of original handler, so it can be removed\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") &&\n    // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n  jQuery.trim = function (text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"$1\");\n  };\n\n  // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n  if (typeof define === \"function\" && define.amd) {\n    define(\"jquery\", [], function () {\n      return jQuery;\n    });\n  }\n  var\n    // Map over jQuery in case of overwrite\n    _jQuery = window.jQuery,\n    // Map over the $ in case of overwrite\n    _$ = window.$;\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n    return jQuery;\n  };\n\n  // Expose jQuery and $ identifiers, even in AMD\n  // (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (trac-13566)\n  if (typeof noGlobal === \"undefined\") {\n    window.jQuery = window.$ = jQuery;\n  }\n  return jQuery;\n});","function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var n = 0, F = function () {}; return { s: F, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] }; }, e: function (r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function () { t = t.call(r); }, n: function () { var r = t.next(); return a = r.done, r; }, e: function (r) { u = !0, o = r; }, f: function () { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/*\nStimulus 3.2.1\nCopyright © 2023 Basecamp, LLC\n */\nclass EventListener {\n  constructor(eventTarget, eventName, eventOptions) {\n    this.eventTarget = eventTarget;\n    this.eventName = eventName;\n    this.eventOptions = eventOptions;\n    this.unorderedBindings = new Set();\n  }\n  connect() {\n    this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);\n  }\n  disconnect() {\n    this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);\n  }\n  bindingConnected(binding) {\n    this.unorderedBindings.add(binding);\n  }\n  bindingDisconnected(binding) {\n    this.unorderedBindings.delete(binding);\n  }\n  handleEvent(event) {\n    const extendedEvent = extendEvent(event);\n    var _iterator = _createForOfIteratorHelper(this.bindings),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        const binding = _step.value;\n        if (extendedEvent.immediatePropagationStopped) {\n          break;\n        } else {\n          binding.handleEvent(extendedEvent);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  hasBindings() {\n    return this.unorderedBindings.size > 0;\n  }\n  get bindings() {\n    return Array.from(this.unorderedBindings).sort((left, right) => {\n      const leftIndex = left.index,\n        rightIndex = right.index;\n      return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;\n    });\n  }\n}\nfunction extendEvent(event) {\n  if (\"immediatePropagationStopped\" in event) {\n    return event;\n  } else {\n    const stopImmediatePropagation = event.stopImmediatePropagation;\n    return Object.assign(event, {\n      immediatePropagationStopped: false,\n      stopImmediatePropagation() {\n        this.immediatePropagationStopped = true;\n        stopImmediatePropagation.call(this);\n      }\n    });\n  }\n}\nclass Dispatcher {\n  constructor(application) {\n    this.application = application;\n    this.eventListenerMaps = new Map();\n    this.started = false;\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.eventListeners.forEach(eventListener => eventListener.connect());\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this.eventListeners.forEach(eventListener => eventListener.disconnect());\n    }\n  }\n  get eventListeners() {\n    return Array.from(this.eventListenerMaps.values()).reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);\n  }\n  bindingConnected(binding) {\n    this.fetchEventListenerForBinding(binding).bindingConnected(binding);\n  }\n  bindingDisconnected(binding, clearEventListeners = false) {\n    this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);\n    if (clearEventListeners) this.clearEventListenersForBinding(binding);\n  }\n  handleError(error, message, detail = {}) {\n    this.application.handleError(error, `Error ${message}`, detail);\n  }\n  clearEventListenersForBinding(binding) {\n    const eventListener = this.fetchEventListenerForBinding(binding);\n    if (!eventListener.hasBindings()) {\n      eventListener.disconnect();\n      this.removeMappedEventListenerFor(binding);\n    }\n  }\n  removeMappedEventListenerFor(binding) {\n    const eventTarget = binding.eventTarget,\n      eventName = binding.eventName,\n      eventOptions = binding.eventOptions;\n    const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n    const cacheKey = this.cacheKey(eventName, eventOptions);\n    eventListenerMap.delete(cacheKey);\n    if (eventListenerMap.size == 0) this.eventListenerMaps.delete(eventTarget);\n  }\n  fetchEventListenerForBinding(binding) {\n    const eventTarget = binding.eventTarget,\n      eventName = binding.eventName,\n      eventOptions = binding.eventOptions;\n    return this.fetchEventListener(eventTarget, eventName, eventOptions);\n  }\n  fetchEventListener(eventTarget, eventName, eventOptions) {\n    const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);\n    const cacheKey = this.cacheKey(eventName, eventOptions);\n    let eventListener = eventListenerMap.get(cacheKey);\n    if (!eventListener) {\n      eventListener = this.createEventListener(eventTarget, eventName, eventOptions);\n      eventListenerMap.set(cacheKey, eventListener);\n    }\n    return eventListener;\n  }\n  createEventListener(eventTarget, eventName, eventOptions) {\n    const eventListener = new EventListener(eventTarget, eventName, eventOptions);\n    if (this.started) {\n      eventListener.connect();\n    }\n    return eventListener;\n  }\n  fetchEventListenerMapForEventTarget(eventTarget) {\n    let eventListenerMap = this.eventListenerMaps.get(eventTarget);\n    if (!eventListenerMap) {\n      eventListenerMap = new Map();\n      this.eventListenerMaps.set(eventTarget, eventListenerMap);\n    }\n    return eventListenerMap;\n  }\n  cacheKey(eventName, eventOptions) {\n    const parts = [eventName];\n    Object.keys(eventOptions).sort().forEach(key => {\n      parts.push(`${eventOptions[key] ? \"\" : \"!\"}${key}`);\n    });\n    return parts.join(\":\");\n  }\n}\nconst defaultActionDescriptorFilters = {\n  stop({\n    event,\n    value\n  }) {\n    if (value) event.stopPropagation();\n    return true;\n  },\n  prevent({\n    event,\n    value\n  }) {\n    if (value) event.preventDefault();\n    return true;\n  },\n  self({\n    event,\n    value,\n    element\n  }) {\n    if (value) {\n      return element === event.target;\n    } else {\n      return true;\n    }\n  }\n};\nconst descriptorPattern = /^(?:(?:([^.]+?)\\+)?(.+?)(?:\\.(.+?))?(?:@(window|document))?->)?(.+?)(?:#([^:]+?))(?::(.+))?$/;\nfunction parseActionDescriptorString(descriptorString) {\n  const source = descriptorString.trim();\n  const matches = source.match(descriptorPattern) || [];\n  let eventName = matches[2];\n  let keyFilter = matches[3];\n  if (keyFilter && ![\"keydown\", \"keyup\", \"keypress\"].includes(eventName)) {\n    eventName += `.${keyFilter}`;\n    keyFilter = \"\";\n  }\n  return {\n    eventTarget: parseEventTarget(matches[4]),\n    eventName,\n    eventOptions: matches[7] ? parseEventOptions(matches[7]) : {},\n    identifier: matches[5],\n    methodName: matches[6],\n    keyFilter: matches[1] || keyFilter\n  };\n}\nfunction parseEventTarget(eventTargetName) {\n  if (eventTargetName == \"window\") {\n    return window;\n  } else if (eventTargetName == \"document\") {\n    return document;\n  }\n}\nfunction parseEventOptions(eventOptions) {\n  return eventOptions.split(\":\").reduce((options, token) => Object.assign(options, {\n    [token.replace(/^!/, \"\")]: !/^!/.test(token)\n  }), {});\n}\nfunction stringifyEventTarget(eventTarget) {\n  if (eventTarget == window) {\n    return \"window\";\n  } else if (eventTarget == document) {\n    return \"document\";\n  }\n}\nfunction camelize(value) {\n  return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase());\n}\nfunction namespaceCamelize(value) {\n  return camelize(value.replace(/--/g, \"-\").replace(/__/g, \"_\"));\n}\nfunction capitalize(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction dasherize(value) {\n  return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`);\n}\nfunction tokenize(value) {\n  return value.match(/[^\\s]+/g) || [];\n}\nfunction isSomething(object) {\n  return object !== null && object !== undefined;\n}\nfunction hasProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\nconst allModifiers = [\"meta\", \"ctrl\", \"alt\", \"shift\"];\nclass Action {\n  constructor(element, index, descriptor, schema) {\n    this.element = element;\n    this.index = index;\n    this.eventTarget = descriptor.eventTarget || element;\n    this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error(\"missing event name\");\n    this.eventOptions = descriptor.eventOptions || {};\n    this.identifier = descriptor.identifier || error(\"missing identifier\");\n    this.methodName = descriptor.methodName || error(\"missing method name\");\n    this.keyFilter = descriptor.keyFilter || \"\";\n    this.schema = schema;\n  }\n  static forToken(token, schema) {\n    return new this(token.element, token.index, parseActionDescriptorString(token.content), schema);\n  }\n  toString() {\n    const eventFilter = this.keyFilter ? `.${this.keyFilter}` : \"\";\n    const eventTarget = this.eventTargetName ? `@${this.eventTargetName}` : \"\";\n    return `${this.eventName}${eventFilter}${eventTarget}->${this.identifier}#${this.methodName}`;\n  }\n  shouldIgnoreKeyboardEvent(event) {\n    if (!this.keyFilter) {\n      return false;\n    }\n    const filters = this.keyFilter.split(\"+\");\n    if (this.keyFilterDissatisfied(event, filters)) {\n      return true;\n    }\n    const standardFilter = filters.filter(key => !allModifiers.includes(key))[0];\n    if (!standardFilter) {\n      return false;\n    }\n    if (!hasProperty(this.keyMappings, standardFilter)) {\n      error(`contains unknown key filter: ${this.keyFilter}`);\n    }\n    return this.keyMappings[standardFilter].toLowerCase() !== event.key.toLowerCase();\n  }\n  shouldIgnoreMouseEvent(event) {\n    if (!this.keyFilter) {\n      return false;\n    }\n    const filters = [this.keyFilter];\n    if (this.keyFilterDissatisfied(event, filters)) {\n      return true;\n    }\n    return false;\n  }\n  get params() {\n    const params = {};\n    const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`, \"i\");\n    for (var _i = 0, _Array$from = Array.from(this.element.attributes); _i < _Array$from.length; _i++) {\n      const _Array$from$_i = _Array$from[_i],\n        name = _Array$from$_i.name,\n        value = _Array$from$_i.value;\n      const match = name.match(pattern);\n      const key = match && match[1];\n      if (key) {\n        params[camelize(key)] = typecast(value);\n      }\n    }\n    return params;\n  }\n  get eventTargetName() {\n    return stringifyEventTarget(this.eventTarget);\n  }\n  get keyMappings() {\n    return this.schema.keyMappings;\n  }\n  keyFilterDissatisfied(event, filters) {\n    const _allModifiers$map = allModifiers.map(modifier => filters.includes(modifier)),\n      _allModifiers$map2 = _slicedToArray(_allModifiers$map, 4),\n      meta = _allModifiers$map2[0],\n      ctrl = _allModifiers$map2[1],\n      alt = _allModifiers$map2[2],\n      shift = _allModifiers$map2[3];\n    return event.metaKey !== meta || event.ctrlKey !== ctrl || event.altKey !== alt || event.shiftKey !== shift;\n  }\n}\nconst defaultEventNames = {\n  a: () => \"click\",\n  button: () => \"click\",\n  form: () => \"submit\",\n  details: () => \"toggle\",\n  input: e => e.getAttribute(\"type\") == \"submit\" ? \"click\" : \"input\",\n  select: () => \"change\",\n  textarea: () => \"input\"\n};\nfunction getDefaultEventNameForElement(element) {\n  const tagName = element.tagName.toLowerCase();\n  if (tagName in defaultEventNames) {\n    return defaultEventNames[tagName](element);\n  }\n}\nfunction error(message) {\n  throw new Error(message);\n}\nfunction typecast(value) {\n  try {\n    return JSON.parse(value);\n  } catch (o_O) {\n    return value;\n  }\n}\nclass Binding {\n  constructor(context, action) {\n    this.context = context;\n    this.action = action;\n  }\n  get index() {\n    return this.action.index;\n  }\n  get eventTarget() {\n    return this.action.eventTarget;\n  }\n  get eventOptions() {\n    return this.action.eventOptions;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  handleEvent(event) {\n    const actionEvent = this.prepareActionEvent(event);\n    if (this.willBeInvokedByEvent(event) && this.applyEventModifiers(actionEvent)) {\n      this.invokeWithEvent(actionEvent);\n    }\n  }\n  get eventName() {\n    return this.action.eventName;\n  }\n  get method() {\n    const method = this.controller[this.methodName];\n    if (typeof method == \"function\") {\n      return method;\n    }\n    throw new Error(`Action \"${this.action}\" references undefined method \"${this.methodName}\"`);\n  }\n  applyEventModifiers(event) {\n    const element = this.action.element;\n    const actionDescriptorFilters = this.context.application.actionDescriptorFilters;\n    const controller = this.context.controller;\n    let passes = true;\n    for (var _i2 = 0, _Object$entries = Object.entries(this.eventOptions); _i2 < _Object$entries.length; _i2++) {\n      const _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n        name = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      if (name in actionDescriptorFilters) {\n        const filter = actionDescriptorFilters[name];\n        passes = passes && filter({\n          name,\n          value,\n          event,\n          element,\n          controller\n        });\n      } else {\n        continue;\n      }\n    }\n    return passes;\n  }\n  prepareActionEvent(event) {\n    return Object.assign(event, {\n      params: this.action.params\n    });\n  }\n  invokeWithEvent(event) {\n    const target = event.target,\n      currentTarget = event.currentTarget;\n    try {\n      this.method.call(this.controller, event);\n      this.context.logDebugActivity(this.methodName, {\n        event,\n        target,\n        currentTarget,\n        action: this.methodName\n      });\n    } catch (error) {\n      const identifier = this.identifier,\n        controller = this.controller,\n        element = this.element,\n        index = this.index;\n      const detail = {\n        identifier,\n        controller,\n        element,\n        index,\n        event\n      };\n      this.context.handleError(error, `invoking action \"${this.action}\"`, detail);\n    }\n  }\n  willBeInvokedByEvent(event) {\n    const eventTarget = event.target;\n    if (event instanceof KeyboardEvent && this.action.shouldIgnoreKeyboardEvent(event)) {\n      return false;\n    }\n    if (event instanceof MouseEvent && this.action.shouldIgnoreMouseEvent(event)) {\n      return false;\n    }\n    if (this.element === eventTarget) {\n      return true;\n    } else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {\n      return this.scope.containsElement(eventTarget);\n    } else {\n      return this.scope.containsElement(this.action.element);\n    }\n  }\n  get controller() {\n    return this.context.controller;\n  }\n  get methodName() {\n    return this.action.methodName;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n}\nclass ElementObserver {\n  constructor(element, delegate) {\n    this.mutationObserverInit = {\n      attributes: true,\n      childList: true,\n      subtree: true\n    };\n    this.element = element;\n    this.started = false;\n    this.delegate = delegate;\n    this.elements = new Set();\n    this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations));\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.mutationObserver.observe(this.element, this.mutationObserverInit);\n      this.refresh();\n    }\n  }\n  pause(callback) {\n    if (this.started) {\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n    callback();\n    if (!this.started) {\n      this.mutationObserver.observe(this.element, this.mutationObserverInit);\n      this.started = true;\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords();\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n  }\n  refresh() {\n    if (this.started) {\n      const matches = new Set(this.matchElementsInTree());\n      for (var _i3 = 0, _Array$from2 = Array.from(this.elements); _i3 < _Array$from2.length; _i3++) {\n        const element = _Array$from2[_i3];\n        if (!matches.has(element)) {\n          this.removeElement(element);\n        }\n      }\n      for (var _i4 = 0, _Array$from3 = Array.from(matches); _i4 < _Array$from3.length; _i4++) {\n        const element = _Array$from3[_i4];\n        this.addElement(element);\n      }\n    }\n  }\n  processMutations(mutations) {\n    if (this.started) {\n      var _iterator2 = _createForOfIteratorHelper(mutations),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          const mutation = _step2.value;\n          this.processMutation(mutation);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }\n  processMutation(mutation) {\n    if (mutation.type == \"attributes\") {\n      this.processAttributeChange(mutation.target, mutation.attributeName);\n    } else if (mutation.type == \"childList\") {\n      this.processRemovedNodes(mutation.removedNodes);\n      this.processAddedNodes(mutation.addedNodes);\n    }\n  }\n  processAttributeChange(element, attributeName) {\n    if (this.elements.has(element)) {\n      if (this.delegate.elementAttributeChanged && this.matchElement(element)) {\n        this.delegate.elementAttributeChanged(element, attributeName);\n      } else {\n        this.removeElement(element);\n      }\n    } else if (this.matchElement(element)) {\n      this.addElement(element);\n    }\n  }\n  processRemovedNodes(nodes) {\n    for (var _i5 = 0, _Array$from4 = Array.from(nodes); _i5 < _Array$from4.length; _i5++) {\n      const node = _Array$from4[_i5];\n      const element = this.elementFromNode(node);\n      if (element) {\n        this.processTree(element, this.removeElement);\n      }\n    }\n  }\n  processAddedNodes(nodes) {\n    for (var _i6 = 0, _Array$from5 = Array.from(nodes); _i6 < _Array$from5.length; _i6++) {\n      const node = _Array$from5[_i6];\n      const element = this.elementFromNode(node);\n      if (element && this.elementIsActive(element)) {\n        this.processTree(element, this.addElement);\n      }\n    }\n  }\n  matchElement(element) {\n    return this.delegate.matchElement(element);\n  }\n  matchElementsInTree(tree = this.element) {\n    return this.delegate.matchElementsInTree(tree);\n  }\n  processTree(tree, processor) {\n    var _iterator3 = _createForOfIteratorHelper(this.matchElementsInTree(tree)),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        const element = _step3.value;\n        processor.call(this, element);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  elementFromNode(node) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      return node;\n    }\n  }\n  elementIsActive(element) {\n    if (element.isConnected != this.element.isConnected) {\n      return false;\n    } else {\n      return this.element.contains(element);\n    }\n  }\n  addElement(element) {\n    if (!this.elements.has(element)) {\n      if (this.elementIsActive(element)) {\n        this.elements.add(element);\n        if (this.delegate.elementMatched) {\n          this.delegate.elementMatched(element);\n        }\n      }\n    }\n  }\n  removeElement(element) {\n    if (this.elements.has(element)) {\n      this.elements.delete(element);\n      if (this.delegate.elementUnmatched) {\n        this.delegate.elementUnmatched(element);\n      }\n    }\n  }\n}\nclass AttributeObserver {\n  constructor(element, attributeName, delegate) {\n    this.attributeName = attributeName;\n    this.delegate = delegate;\n    this.elementObserver = new ElementObserver(element, this);\n  }\n  get element() {\n    return this.elementObserver.element;\n  }\n  get selector() {\n    return `[${this.attributeName}]`;\n  }\n  start() {\n    this.elementObserver.start();\n  }\n  pause(callback) {\n    this.elementObserver.pause(callback);\n  }\n  stop() {\n    this.elementObserver.stop();\n  }\n  refresh() {\n    this.elementObserver.refresh();\n  }\n  get started() {\n    return this.elementObserver.started;\n  }\n  matchElement(element) {\n    return element.hasAttribute(this.attributeName);\n  }\n  matchElementsInTree(tree) {\n    const match = this.matchElement(tree) ? [tree] : [];\n    const matches = Array.from(tree.querySelectorAll(this.selector));\n    return match.concat(matches);\n  }\n  elementMatched(element) {\n    if (this.delegate.elementMatchedAttribute) {\n      this.delegate.elementMatchedAttribute(element, this.attributeName);\n    }\n  }\n  elementUnmatched(element) {\n    if (this.delegate.elementUnmatchedAttribute) {\n      this.delegate.elementUnmatchedAttribute(element, this.attributeName);\n    }\n  }\n  elementAttributeChanged(element, attributeName) {\n    if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {\n      this.delegate.elementAttributeValueChanged(element, attributeName);\n    }\n  }\n}\nfunction add(map, key, value) {\n  fetch(map, key).add(value);\n}\nfunction del(map, key, value) {\n  fetch(map, key).delete(value);\n  prune(map, key);\n}\nfunction fetch(map, key) {\n  let values = map.get(key);\n  if (!values) {\n    values = new Set();\n    map.set(key, values);\n  }\n  return values;\n}\nfunction prune(map, key) {\n  const values = map.get(key);\n  if (values != null && values.size == 0) {\n    map.delete(key);\n  }\n}\nclass Multimap {\n  constructor() {\n    this.valuesByKey = new Map();\n  }\n  get keys() {\n    return Array.from(this.valuesByKey.keys());\n  }\n  get values() {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.reduce((values, set) => values.concat(Array.from(set)), []);\n  }\n  get size() {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.reduce((size, set) => size + set.size, 0);\n  }\n  add(key, value) {\n    add(this.valuesByKey, key, value);\n  }\n  delete(key, value) {\n    del(this.valuesByKey, key, value);\n  }\n  has(key, value) {\n    const values = this.valuesByKey.get(key);\n    return values != null && values.has(value);\n  }\n  hasKey(key) {\n    return this.valuesByKey.has(key);\n  }\n  hasValue(value) {\n    const sets = Array.from(this.valuesByKey.values());\n    return sets.some(set => set.has(value));\n  }\n  getValuesForKey(key) {\n    const values = this.valuesByKey.get(key);\n    return values ? Array.from(values) : [];\n  }\n  getKeysForValue(value) {\n    return Array.from(this.valuesByKey).filter(([_key, values]) => values.has(value)).map(([key, _values]) => key);\n  }\n}\nclass IndexedMultimap extends Multimap {\n  constructor() {\n    super();\n    this.keysByValue = new Map();\n  }\n  get values() {\n    return Array.from(this.keysByValue.keys());\n  }\n  add(key, value) {\n    super.add(key, value);\n    add(this.keysByValue, value, key);\n  }\n  delete(key, value) {\n    super.delete(key, value);\n    del(this.keysByValue, value, key);\n  }\n  hasValue(value) {\n    return this.keysByValue.has(value);\n  }\n  getKeysForValue(value) {\n    const set = this.keysByValue.get(value);\n    return set ? Array.from(set) : [];\n  }\n}\nclass SelectorObserver {\n  constructor(element, selector, delegate, details) {\n    this._selector = selector;\n    this.details = details;\n    this.elementObserver = new ElementObserver(element, this);\n    this.delegate = delegate;\n    this.matchesByElement = new Multimap();\n  }\n  get started() {\n    return this.elementObserver.started;\n  }\n  get selector() {\n    return this._selector;\n  }\n  set selector(selector) {\n    this._selector = selector;\n    this.refresh();\n  }\n  start() {\n    this.elementObserver.start();\n  }\n  pause(callback) {\n    this.elementObserver.pause(callback);\n  }\n  stop() {\n    this.elementObserver.stop();\n  }\n  refresh() {\n    this.elementObserver.refresh();\n  }\n  get element() {\n    return this.elementObserver.element;\n  }\n  matchElement(element) {\n    const selector = this.selector;\n    if (selector) {\n      const matches = element.matches(selector);\n      if (this.delegate.selectorMatchElement) {\n        return matches && this.delegate.selectorMatchElement(element, this.details);\n      }\n      return matches;\n    } else {\n      return false;\n    }\n  }\n  matchElementsInTree(tree) {\n    const selector = this.selector;\n    if (selector) {\n      const match = this.matchElement(tree) ? [tree] : [];\n      const matches = Array.from(tree.querySelectorAll(selector)).filter(match => this.matchElement(match));\n      return match.concat(matches);\n    } else {\n      return [];\n    }\n  }\n  elementMatched(element) {\n    const selector = this.selector;\n    if (selector) {\n      this.selectorMatched(element, selector);\n    }\n  }\n  elementUnmatched(element) {\n    const selectors = this.matchesByElement.getKeysForValue(element);\n    var _iterator4 = _createForOfIteratorHelper(selectors),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        const selector = _step4.value;\n        this.selectorUnmatched(element, selector);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n  elementAttributeChanged(element, _attributeName) {\n    const selector = this.selector;\n    if (selector) {\n      const matches = this.matchElement(element);\n      const matchedBefore = this.matchesByElement.has(selector, element);\n      if (matches && !matchedBefore) {\n        this.selectorMatched(element, selector);\n      } else if (!matches && matchedBefore) {\n        this.selectorUnmatched(element, selector);\n      }\n    }\n  }\n  selectorMatched(element, selector) {\n    this.delegate.selectorMatched(element, selector, this.details);\n    this.matchesByElement.add(selector, element);\n  }\n  selectorUnmatched(element, selector) {\n    this.delegate.selectorUnmatched(element, selector, this.details);\n    this.matchesByElement.delete(selector, element);\n  }\n}\nclass StringMapObserver {\n  constructor(element, delegate) {\n    this.element = element;\n    this.delegate = delegate;\n    this.started = false;\n    this.stringMap = new Map();\n    this.mutationObserver = new MutationObserver(mutations => this.processMutations(mutations));\n  }\n  start() {\n    if (!this.started) {\n      this.started = true;\n      this.mutationObserver.observe(this.element, {\n        attributes: true,\n        attributeOldValue: true\n      });\n      this.refresh();\n    }\n  }\n  stop() {\n    if (this.started) {\n      this.mutationObserver.takeRecords();\n      this.mutationObserver.disconnect();\n      this.started = false;\n    }\n  }\n  refresh() {\n    if (this.started) {\n      var _iterator5 = _createForOfIteratorHelper(this.knownAttributeNames),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          const attributeName = _step5.value;\n          this.refreshAttribute(attributeName, null);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }\n  processMutations(mutations) {\n    if (this.started) {\n      var _iterator6 = _createForOfIteratorHelper(mutations),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          const mutation = _step6.value;\n          this.processMutation(mutation);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }\n  processMutation(mutation) {\n    const attributeName = mutation.attributeName;\n    if (attributeName) {\n      this.refreshAttribute(attributeName, mutation.oldValue);\n    }\n  }\n  refreshAttribute(attributeName, oldValue) {\n    const key = this.delegate.getStringMapKeyForAttribute(attributeName);\n    if (key != null) {\n      if (!this.stringMap.has(attributeName)) {\n        this.stringMapKeyAdded(key, attributeName);\n      }\n      const value = this.element.getAttribute(attributeName);\n      if (this.stringMap.get(attributeName) != value) {\n        this.stringMapValueChanged(value, key, oldValue);\n      }\n      if (value == null) {\n        const oldValue = this.stringMap.get(attributeName);\n        this.stringMap.delete(attributeName);\n        if (oldValue) this.stringMapKeyRemoved(key, attributeName, oldValue);\n      } else {\n        this.stringMap.set(attributeName, value);\n      }\n    }\n  }\n  stringMapKeyAdded(key, attributeName) {\n    if (this.delegate.stringMapKeyAdded) {\n      this.delegate.stringMapKeyAdded(key, attributeName);\n    }\n  }\n  stringMapValueChanged(value, key, oldValue) {\n    if (this.delegate.stringMapValueChanged) {\n      this.delegate.stringMapValueChanged(value, key, oldValue);\n    }\n  }\n  stringMapKeyRemoved(key, attributeName, oldValue) {\n    if (this.delegate.stringMapKeyRemoved) {\n      this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);\n    }\n  }\n  get knownAttributeNames() {\n    return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));\n  }\n  get currentAttributeNames() {\n    return Array.from(this.element.attributes).map(attribute => attribute.name);\n  }\n  get recordedAttributeNames() {\n    return Array.from(this.stringMap.keys());\n  }\n}\nclass TokenListObserver {\n  constructor(element, attributeName, delegate) {\n    this.attributeObserver = new AttributeObserver(element, attributeName, this);\n    this.delegate = delegate;\n    this.tokensByElement = new Multimap();\n  }\n  get started() {\n    return this.attributeObserver.started;\n  }\n  start() {\n    this.attributeObserver.start();\n  }\n  pause(callback) {\n    this.attributeObserver.pause(callback);\n  }\n  stop() {\n    this.attributeObserver.stop();\n  }\n  refresh() {\n    this.attributeObserver.refresh();\n  }\n  get element() {\n    return this.attributeObserver.element;\n  }\n  get attributeName() {\n    return this.attributeObserver.attributeName;\n  }\n  elementMatchedAttribute(element) {\n    this.tokensMatched(this.readTokensForElement(element));\n  }\n  elementAttributeValueChanged(element) {\n    const _this$refreshTokensFo = this.refreshTokensForElement(element),\n      _this$refreshTokensFo2 = _slicedToArray(_this$refreshTokensFo, 2),\n      unmatchedTokens = _this$refreshTokensFo2[0],\n      matchedTokens = _this$refreshTokensFo2[1];\n    this.tokensUnmatched(unmatchedTokens);\n    this.tokensMatched(matchedTokens);\n  }\n  elementUnmatchedAttribute(element) {\n    this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));\n  }\n  tokensMatched(tokens) {\n    tokens.forEach(token => this.tokenMatched(token));\n  }\n  tokensUnmatched(tokens) {\n    tokens.forEach(token => this.tokenUnmatched(token));\n  }\n  tokenMatched(token) {\n    this.delegate.tokenMatched(token);\n    this.tokensByElement.add(token.element, token);\n  }\n  tokenUnmatched(token) {\n    this.delegate.tokenUnmatched(token);\n    this.tokensByElement.delete(token.element, token);\n  }\n  refreshTokensForElement(element) {\n    const previousTokens = this.tokensByElement.getValuesForKey(element);\n    const currentTokens = this.readTokensForElement(element);\n    const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));\n    if (firstDifferingIndex == -1) {\n      return [[], []];\n    } else {\n      return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];\n    }\n  }\n  readTokensForElement(element) {\n    const attributeName = this.attributeName;\n    const tokenString = element.getAttribute(attributeName) || \"\";\n    return parseTokenString(tokenString, element, attributeName);\n  }\n}\nfunction parseTokenString(tokenString, element, attributeName) {\n  return tokenString.trim().split(/\\s+/).filter(content => content.length).map((content, index) => ({\n    element,\n    attributeName,\n    content,\n    index\n  }));\n}\nfunction zip(left, right) {\n  const length = Math.max(left.length, right.length);\n  return Array.from({\n    length\n  }, (_, index) => [left[index], right[index]]);\n}\nfunction tokensAreEqual(left, right) {\n  return left && right && left.index == right.index && left.content == right.content;\n}\nclass ValueListObserver {\n  constructor(element, attributeName, delegate) {\n    this.tokenListObserver = new TokenListObserver(element, attributeName, this);\n    this.delegate = delegate;\n    this.parseResultsByToken = new WeakMap();\n    this.valuesByTokenByElement = new WeakMap();\n  }\n  get started() {\n    return this.tokenListObserver.started;\n  }\n  start() {\n    this.tokenListObserver.start();\n  }\n  stop() {\n    this.tokenListObserver.stop();\n  }\n  refresh() {\n    this.tokenListObserver.refresh();\n  }\n  get element() {\n    return this.tokenListObserver.element;\n  }\n  get attributeName() {\n    return this.tokenListObserver.attributeName;\n  }\n  tokenMatched(token) {\n    const element = token.element;\n    const _this$fetchParseResul = this.fetchParseResultForToken(token),\n      value = _this$fetchParseResul.value;\n    if (value) {\n      this.fetchValuesByTokenForElement(element).set(token, value);\n      this.delegate.elementMatchedValue(element, value);\n    }\n  }\n  tokenUnmatched(token) {\n    const element = token.element;\n    const _this$fetchParseResul2 = this.fetchParseResultForToken(token),\n      value = _this$fetchParseResul2.value;\n    if (value) {\n      this.fetchValuesByTokenForElement(element).delete(token);\n      this.delegate.elementUnmatchedValue(element, value);\n    }\n  }\n  fetchParseResultForToken(token) {\n    let parseResult = this.parseResultsByToken.get(token);\n    if (!parseResult) {\n      parseResult = this.parseToken(token);\n      this.parseResultsByToken.set(token, parseResult);\n    }\n    return parseResult;\n  }\n  fetchValuesByTokenForElement(element) {\n    let valuesByToken = this.valuesByTokenByElement.get(element);\n    if (!valuesByToken) {\n      valuesByToken = new Map();\n      this.valuesByTokenByElement.set(element, valuesByToken);\n    }\n    return valuesByToken;\n  }\n  parseToken(token) {\n    try {\n      const value = this.delegate.parseValueForToken(token);\n      return {\n        value\n      };\n    } catch (error) {\n      return {\n        error\n      };\n    }\n  }\n}\nclass BindingObserver {\n  constructor(context, delegate) {\n    this.context = context;\n    this.delegate = delegate;\n    this.bindingsByAction = new Map();\n  }\n  start() {\n    if (!this.valueListObserver) {\n      this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);\n      this.valueListObserver.start();\n    }\n  }\n  stop() {\n    if (this.valueListObserver) {\n      this.valueListObserver.stop();\n      delete this.valueListObserver;\n      this.disconnectAllActions();\n    }\n  }\n  get element() {\n    return this.context.element;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  get actionAttribute() {\n    return this.schema.actionAttribute;\n  }\n  get schema() {\n    return this.context.schema;\n  }\n  get bindings() {\n    return Array.from(this.bindingsByAction.values());\n  }\n  connectAction(action) {\n    const binding = new Binding(this.context, action);\n    this.bindingsByAction.set(action, binding);\n    this.delegate.bindingConnected(binding);\n  }\n  disconnectAction(action) {\n    const binding = this.bindingsByAction.get(action);\n    if (binding) {\n      this.bindingsByAction.delete(action);\n      this.delegate.bindingDisconnected(binding);\n    }\n  }\n  disconnectAllActions() {\n    this.bindings.forEach(binding => this.delegate.bindingDisconnected(binding, true));\n    this.bindingsByAction.clear();\n  }\n  parseValueForToken(token) {\n    const action = Action.forToken(token, this.schema);\n    if (action.identifier == this.identifier) {\n      return action;\n    }\n  }\n  elementMatchedValue(element, action) {\n    this.connectAction(action);\n  }\n  elementUnmatchedValue(element, action) {\n    this.disconnectAction(action);\n  }\n}\nclass ValueObserver {\n  constructor(context, receiver) {\n    this.context = context;\n    this.receiver = receiver;\n    this.stringMapObserver = new StringMapObserver(this.element, this);\n    this.valueDescriptorMap = this.controller.valueDescriptorMap;\n  }\n  start() {\n    this.stringMapObserver.start();\n    this.invokeChangedCallbacksForDefaultValues();\n  }\n  stop() {\n    this.stringMapObserver.stop();\n  }\n  get element() {\n    return this.context.element;\n  }\n  get controller() {\n    return this.context.controller;\n  }\n  getStringMapKeyForAttribute(attributeName) {\n    if (attributeName in this.valueDescriptorMap) {\n      return this.valueDescriptorMap[attributeName].name;\n    }\n  }\n  stringMapKeyAdded(key, attributeName) {\n    const descriptor = this.valueDescriptorMap[attributeName];\n    if (!this.hasValue(key)) {\n      this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));\n    }\n  }\n  stringMapValueChanged(value, name, oldValue) {\n    const descriptor = this.valueDescriptorNameMap[name];\n    if (value === null) return;\n    if (oldValue === null) {\n      oldValue = descriptor.writer(descriptor.defaultValue);\n    }\n    this.invokeChangedCallback(name, value, oldValue);\n  }\n  stringMapKeyRemoved(key, attributeName, oldValue) {\n    const descriptor = this.valueDescriptorNameMap[key];\n    if (this.hasValue(key)) {\n      this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);\n    } else {\n      this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);\n    }\n  }\n  invokeChangedCallbacksForDefaultValues() {\n    var _iterator7 = _createForOfIteratorHelper(this.valueDescriptors),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        const _step7$value = _step7.value,\n          key = _step7$value.key,\n          name = _step7$value.name,\n          defaultValue = _step7$value.defaultValue,\n          writer = _step7$value.writer;\n        if (defaultValue != undefined && !this.controller.data.has(key)) {\n          this.invokeChangedCallback(name, writer(defaultValue), undefined);\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n  }\n  invokeChangedCallback(name, rawValue, rawOldValue) {\n    const changedMethodName = `${name}Changed`;\n    const changedMethod = this.receiver[changedMethodName];\n    if (typeof changedMethod == \"function\") {\n      const descriptor = this.valueDescriptorNameMap[name];\n      try {\n        const value = descriptor.reader(rawValue);\n        let oldValue = rawOldValue;\n        if (rawOldValue) {\n          oldValue = descriptor.reader(rawOldValue);\n        }\n        changedMethod.call(this.receiver, value, oldValue);\n      } catch (error) {\n        if (error instanceof TypeError) {\n          error.message = `Stimulus Value \"${this.context.identifier}.${descriptor.name}\" - ${error.message}`;\n        }\n        throw error;\n      }\n    }\n  }\n  get valueDescriptors() {\n    const valueDescriptorMap = this.valueDescriptorMap;\n    return Object.keys(valueDescriptorMap).map(key => valueDescriptorMap[key]);\n  }\n  get valueDescriptorNameMap() {\n    const descriptors = {};\n    Object.keys(this.valueDescriptorMap).forEach(key => {\n      const descriptor = this.valueDescriptorMap[key];\n      descriptors[descriptor.name] = descriptor;\n    });\n    return descriptors;\n  }\n  hasValue(attributeName) {\n    const descriptor = this.valueDescriptorNameMap[attributeName];\n    const hasMethodName = `has${capitalize(descriptor.name)}`;\n    return this.receiver[hasMethodName];\n  }\n}\nclass TargetObserver {\n  constructor(context, delegate) {\n    this.context = context;\n    this.delegate = delegate;\n    this.targetsByName = new Multimap();\n  }\n  start() {\n    if (!this.tokenListObserver) {\n      this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);\n      this.tokenListObserver.start();\n    }\n  }\n  stop() {\n    if (this.tokenListObserver) {\n      this.disconnectAllTargets();\n      this.tokenListObserver.stop();\n      delete this.tokenListObserver;\n    }\n  }\n  tokenMatched({\n    element,\n    content: name\n  }) {\n    if (this.scope.containsElement(element)) {\n      this.connectTarget(element, name);\n    }\n  }\n  tokenUnmatched({\n    element,\n    content: name\n  }) {\n    this.disconnectTarget(element, name);\n  }\n  connectTarget(element, name) {\n    var _a;\n    if (!this.targetsByName.has(name, element)) {\n      this.targetsByName.add(name, element);\n      (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));\n    }\n  }\n  disconnectTarget(element, name) {\n    var _a;\n    if (this.targetsByName.has(name, element)) {\n      this.targetsByName.delete(name, element);\n      (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));\n    }\n  }\n  disconnectAllTargets() {\n    var _iterator8 = _createForOfIteratorHelper(this.targetsByName.keys),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        const name = _step8.value;\n        var _iterator9 = _createForOfIteratorHelper(this.targetsByName.getValuesForKey(name)),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            const element = _step9.value;\n            this.disconnectTarget(element, name);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n  }\n  get attributeName() {\n    return `data-${this.context.identifier}-target`;\n  }\n  get element() {\n    return this.context.element;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n}\nfunction readInheritableStaticArrayValues(constructor, propertyName) {\n  const ancestors = getAncestorsForConstructor(constructor);\n  return Array.from(ancestors.reduce((values, constructor) => {\n    getOwnStaticArrayValues(constructor, propertyName).forEach(name => values.add(name));\n    return values;\n  }, new Set()));\n}\nfunction readInheritableStaticObjectPairs(constructor, propertyName) {\n  const ancestors = getAncestorsForConstructor(constructor);\n  return ancestors.reduce((pairs, constructor) => {\n    pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));\n    return pairs;\n  }, []);\n}\nfunction getAncestorsForConstructor(constructor) {\n  const ancestors = [];\n  while (constructor) {\n    ancestors.push(constructor);\n    constructor = Object.getPrototypeOf(constructor);\n  }\n  return ancestors.reverse();\n}\nfunction getOwnStaticArrayValues(constructor, propertyName) {\n  const definition = constructor[propertyName];\n  return Array.isArray(definition) ? definition : [];\n}\nfunction getOwnStaticObjectPairs(constructor, propertyName) {\n  const definition = constructor[propertyName];\n  return definition ? Object.keys(definition).map(key => [key, definition[key]]) : [];\n}\nclass OutletObserver {\n  constructor(context, delegate) {\n    this.started = false;\n    this.context = context;\n    this.delegate = delegate;\n    this.outletsByName = new Multimap();\n    this.outletElementsByName = new Multimap();\n    this.selectorObserverMap = new Map();\n    this.attributeObserverMap = new Map();\n  }\n  start() {\n    if (!this.started) {\n      this.outletDefinitions.forEach(outletName => {\n        this.setupSelectorObserverForOutlet(outletName);\n        this.setupAttributeObserverForOutlet(outletName);\n      });\n      this.started = true;\n      this.dependentContexts.forEach(context => context.refresh());\n    }\n  }\n  refresh() {\n    this.selectorObserverMap.forEach(observer => observer.refresh());\n    this.attributeObserverMap.forEach(observer => observer.refresh());\n  }\n  stop() {\n    if (this.started) {\n      this.started = false;\n      this.disconnectAllOutlets();\n      this.stopSelectorObservers();\n      this.stopAttributeObservers();\n    }\n  }\n  stopSelectorObservers() {\n    if (this.selectorObserverMap.size > 0) {\n      this.selectorObserverMap.forEach(observer => observer.stop());\n      this.selectorObserverMap.clear();\n    }\n  }\n  stopAttributeObservers() {\n    if (this.attributeObserverMap.size > 0) {\n      this.attributeObserverMap.forEach(observer => observer.stop());\n      this.attributeObserverMap.clear();\n    }\n  }\n  selectorMatched(element, _selector, {\n    outletName\n  }) {\n    const outlet = this.getOutlet(element, outletName);\n    if (outlet) {\n      this.connectOutlet(outlet, element, outletName);\n    }\n  }\n  selectorUnmatched(element, _selector, {\n    outletName\n  }) {\n    const outlet = this.getOutletFromMap(element, outletName);\n    if (outlet) {\n      this.disconnectOutlet(outlet, element, outletName);\n    }\n  }\n  selectorMatchElement(element, {\n    outletName\n  }) {\n    const selector = this.selector(outletName);\n    const hasOutlet = this.hasOutlet(element, outletName);\n    const hasOutletController = element.matches(`[${this.schema.controllerAttribute}~=${outletName}]`);\n    if (selector) {\n      return hasOutlet && hasOutletController && element.matches(selector);\n    } else {\n      return false;\n    }\n  }\n  elementMatchedAttribute(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  elementAttributeValueChanged(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  elementUnmatchedAttribute(_element, attributeName) {\n    const outletName = this.getOutletNameFromOutletAttributeName(attributeName);\n    if (outletName) {\n      this.updateSelectorObserverForOutlet(outletName);\n    }\n  }\n  connectOutlet(outlet, element, outletName) {\n    var _a;\n    if (!this.outletElementsByName.has(outletName, element)) {\n      this.outletsByName.add(outletName, outlet);\n      this.outletElementsByName.add(outletName, element);\n      (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletConnected(outlet, element, outletName));\n    }\n  }\n  disconnectOutlet(outlet, element, outletName) {\n    var _a;\n    if (this.outletElementsByName.has(outletName, element)) {\n      this.outletsByName.delete(outletName, outlet);\n      this.outletElementsByName.delete(outletName, element);\n      (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletDisconnected(outlet, element, outletName));\n    }\n  }\n  disconnectAllOutlets() {\n    var _iterator0 = _createForOfIteratorHelper(this.outletElementsByName.keys),\n      _step0;\n    try {\n      for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n        const outletName = _step0.value;\n        var _iterator1 = _createForOfIteratorHelper(this.outletElementsByName.getValuesForKey(outletName)),\n          _step1;\n        try {\n          for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n            const element = _step1.value;\n            var _iterator10 = _createForOfIteratorHelper(this.outletsByName.getValuesForKey(outletName)),\n              _step10;\n            try {\n              for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                const outlet = _step10.value;\n                this.disconnectOutlet(outlet, element, outletName);\n              }\n            } catch (err) {\n              _iterator10.e(err);\n            } finally {\n              _iterator10.f();\n            }\n          }\n        } catch (err) {\n          _iterator1.e(err);\n        } finally {\n          _iterator1.f();\n        }\n      }\n    } catch (err) {\n      _iterator0.e(err);\n    } finally {\n      _iterator0.f();\n    }\n  }\n  updateSelectorObserverForOutlet(outletName) {\n    const observer = this.selectorObserverMap.get(outletName);\n    if (observer) {\n      observer.selector = this.selector(outletName);\n    }\n  }\n  setupSelectorObserverForOutlet(outletName) {\n    const selector = this.selector(outletName);\n    const selectorObserver = new SelectorObserver(document.body, selector, this, {\n      outletName\n    });\n    this.selectorObserverMap.set(outletName, selectorObserver);\n    selectorObserver.start();\n  }\n  setupAttributeObserverForOutlet(outletName) {\n    const attributeName = this.attributeNameForOutletName(outletName);\n    const attributeObserver = new AttributeObserver(this.scope.element, attributeName, this);\n    this.attributeObserverMap.set(outletName, attributeObserver);\n    attributeObserver.start();\n  }\n  selector(outletName) {\n    return this.scope.outlets.getSelectorForOutletName(outletName);\n  }\n  attributeNameForOutletName(outletName) {\n    return this.scope.schema.outletAttributeForScope(this.identifier, outletName);\n  }\n  getOutletNameFromOutletAttributeName(attributeName) {\n    return this.outletDefinitions.find(outletName => this.attributeNameForOutletName(outletName) === attributeName);\n  }\n  get outletDependencies() {\n    const dependencies = new Multimap();\n    this.router.modules.forEach(module => {\n      const constructor = module.definition.controllerConstructor;\n      const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n      outlets.forEach(outlet => dependencies.add(outlet, module.identifier));\n    });\n    return dependencies;\n  }\n  get outletDefinitions() {\n    return this.outletDependencies.getKeysForValue(this.identifier);\n  }\n  get dependentControllerIdentifiers() {\n    return this.outletDependencies.getValuesForKey(this.identifier);\n  }\n  get dependentContexts() {\n    const identifiers = this.dependentControllerIdentifiers;\n    return this.router.contexts.filter(context => identifiers.includes(context.identifier));\n  }\n  hasOutlet(element, outletName) {\n    return !!this.getOutlet(element, outletName) || !!this.getOutletFromMap(element, outletName);\n  }\n  getOutlet(element, outletName) {\n    return this.application.getControllerForElementAndIdentifier(element, outletName);\n  }\n  getOutletFromMap(element, outletName) {\n    return this.outletsByName.getValuesForKey(outletName).find(outlet => outlet.element === element);\n  }\n  get scope() {\n    return this.context.scope;\n  }\n  get schema() {\n    return this.context.schema;\n  }\n  get identifier() {\n    return this.context.identifier;\n  }\n  get application() {\n    return this.context.application;\n  }\n  get router() {\n    return this.application.router;\n  }\n}\nclass Context {\n  constructor(module, scope) {\n    this.logDebugActivity = (functionName, detail = {}) => {\n      const identifier = this.identifier,\n        controller = this.controller,\n        element = this.element;\n      detail = Object.assign({\n        identifier,\n        controller,\n        element\n      }, detail);\n      this.application.logDebugActivity(this.identifier, functionName, detail);\n    };\n    this.module = module;\n    this.scope = scope;\n    this.controller = new module.controllerConstructor(this);\n    this.bindingObserver = new BindingObserver(this, this.dispatcher);\n    this.valueObserver = new ValueObserver(this, this.controller);\n    this.targetObserver = new TargetObserver(this, this);\n    this.outletObserver = new OutletObserver(this, this);\n    try {\n      this.controller.initialize();\n      this.logDebugActivity(\"initialize\");\n    } catch (error) {\n      this.handleError(error, \"initializing controller\");\n    }\n  }\n  connect() {\n    this.bindingObserver.start();\n    this.valueObserver.start();\n    this.targetObserver.start();\n    this.outletObserver.start();\n    try {\n      this.controller.connect();\n      this.logDebugActivity(\"connect\");\n    } catch (error) {\n      this.handleError(error, \"connecting controller\");\n    }\n  }\n  refresh() {\n    this.outletObserver.refresh();\n  }\n  disconnect() {\n    try {\n      this.controller.disconnect();\n      this.logDebugActivity(\"disconnect\");\n    } catch (error) {\n      this.handleError(error, \"disconnecting controller\");\n    }\n    this.outletObserver.stop();\n    this.targetObserver.stop();\n    this.valueObserver.stop();\n    this.bindingObserver.stop();\n  }\n  get application() {\n    return this.module.application;\n  }\n  get identifier() {\n    return this.module.identifier;\n  }\n  get schema() {\n    return this.application.schema;\n  }\n  get dispatcher() {\n    return this.application.dispatcher;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get parentElement() {\n    return this.element.parentElement;\n  }\n  handleError(error, message, detail = {}) {\n    const identifier = this.identifier,\n      controller = this.controller,\n      element = this.element;\n    detail = Object.assign({\n      identifier,\n      controller,\n      element\n    }, detail);\n    this.application.handleError(error, `Error ${message}`, detail);\n  }\n  targetConnected(element, name) {\n    this.invokeControllerMethod(`${name}TargetConnected`, element);\n  }\n  targetDisconnected(element, name) {\n    this.invokeControllerMethod(`${name}TargetDisconnected`, element);\n  }\n  outletConnected(outlet, element, name) {\n    this.invokeControllerMethod(`${namespaceCamelize(name)}OutletConnected`, outlet, element);\n  }\n  outletDisconnected(outlet, element, name) {\n    this.invokeControllerMethod(`${namespaceCamelize(name)}OutletDisconnected`, outlet, element);\n  }\n  invokeControllerMethod(methodName, ...args) {\n    const controller = this.controller;\n    if (typeof controller[methodName] == \"function\") {\n      controller[methodName](...args);\n    }\n  }\n}\nfunction bless(constructor) {\n  return shadow(constructor, getBlessedProperties(constructor));\n}\nfunction shadow(constructor, properties) {\n  const shadowConstructor = extend(constructor);\n  const shadowProperties = getShadowProperties(constructor.prototype, properties);\n  Object.defineProperties(shadowConstructor.prototype, shadowProperties);\n  return shadowConstructor;\n}\nfunction getBlessedProperties(constructor) {\n  const blessings = readInheritableStaticArrayValues(constructor, \"blessings\");\n  return blessings.reduce((blessedProperties, blessing) => {\n    const properties = blessing(constructor);\n    for (const key in properties) {\n      const descriptor = blessedProperties[key] || {};\n      blessedProperties[key] = Object.assign(descriptor, properties[key]);\n    }\n    return blessedProperties;\n  }, {});\n}\nfunction getShadowProperties(prototype, properties) {\n  return getOwnKeys(properties).reduce((shadowProperties, key) => {\n    const descriptor = getShadowedDescriptor(prototype, properties, key);\n    if (descriptor) {\n      Object.assign(shadowProperties, {\n        [key]: descriptor\n      });\n    }\n    return shadowProperties;\n  }, {});\n}\nfunction getShadowedDescriptor(prototype, properties, key) {\n  const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);\n  const shadowedByValue = shadowingDescriptor && \"value\" in shadowingDescriptor;\n  if (!shadowedByValue) {\n    const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;\n    if (shadowingDescriptor) {\n      descriptor.get = shadowingDescriptor.get || descriptor.get;\n      descriptor.set = shadowingDescriptor.set || descriptor.set;\n    }\n    return descriptor;\n  }\n}\nconst getOwnKeys = (() => {\n  if (typeof Object.getOwnPropertySymbols == \"function\") {\n    return object => [...Object.getOwnPropertyNames(object), ...Object.getOwnPropertySymbols(object)];\n  } else {\n    return Object.getOwnPropertyNames;\n  }\n})();\nconst extend = (() => {\n  function extendWithReflect(constructor) {\n    function extended() {\n      return Reflect.construct(constructor, arguments, new.target);\n    }\n    extended.prototype = Object.create(constructor.prototype, {\n      constructor: {\n        value: extended\n      }\n    });\n    Reflect.setPrototypeOf(extended, constructor);\n    return extended;\n  }\n  function testReflectExtension() {\n    const a = function () {\n      this.a.call(this);\n    };\n    const b = extendWithReflect(a);\n    b.prototype.a = function () {};\n    return new b();\n  }\n  try {\n    testReflectExtension();\n    return extendWithReflect;\n  } catch (error) {\n    return constructor => class extended extends constructor {};\n  }\n})();\nfunction blessDefinition(definition) {\n  return {\n    identifier: definition.identifier,\n    controllerConstructor: bless(definition.controllerConstructor)\n  };\n}\nclass Module {\n  constructor(application, definition) {\n    this.application = application;\n    this.definition = blessDefinition(definition);\n    this.contextsByScope = new WeakMap();\n    this.connectedContexts = new Set();\n  }\n  get identifier() {\n    return this.definition.identifier;\n  }\n  get controllerConstructor() {\n    return this.definition.controllerConstructor;\n  }\n  get contexts() {\n    return Array.from(this.connectedContexts);\n  }\n  connectContextForScope(scope) {\n    const context = this.fetchContextForScope(scope);\n    this.connectedContexts.add(context);\n    context.connect();\n  }\n  disconnectContextForScope(scope) {\n    const context = this.contextsByScope.get(scope);\n    if (context) {\n      this.connectedContexts.delete(context);\n      context.disconnect();\n    }\n  }\n  fetchContextForScope(scope) {\n    let context = this.contextsByScope.get(scope);\n    if (!context) {\n      context = new Context(this, scope);\n      this.contextsByScope.set(scope, context);\n    }\n    return context;\n  }\n}\nclass ClassMap {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  has(name) {\n    return this.data.has(this.getDataKey(name));\n  }\n  get(name) {\n    return this.getAll(name)[0];\n  }\n  getAll(name) {\n    const tokenString = this.data.get(this.getDataKey(name)) || \"\";\n    return tokenize(tokenString);\n  }\n  getAttributeName(name) {\n    return this.data.getAttributeNameForKey(this.getDataKey(name));\n  }\n  getDataKey(name) {\n    return `${name}-class`;\n  }\n  get data() {\n    return this.scope.data;\n  }\n}\nclass DataMap {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get(key) {\n    const name = this.getAttributeNameForKey(key);\n    return this.element.getAttribute(name);\n  }\n  set(key, value) {\n    const name = this.getAttributeNameForKey(key);\n    this.element.setAttribute(name, value);\n    return this.get(key);\n  }\n  has(key) {\n    const name = this.getAttributeNameForKey(key);\n    return this.element.hasAttribute(name);\n  }\n  delete(key) {\n    if (this.has(key)) {\n      const name = this.getAttributeNameForKey(key);\n      this.element.removeAttribute(name);\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getAttributeNameForKey(key) {\n    return `data-${this.identifier}-${dasherize(key)}`;\n  }\n}\nclass Guide {\n  constructor(logger) {\n    this.warnedKeysByObject = new WeakMap();\n    this.logger = logger;\n  }\n  warn(object, key, message) {\n    let warnedKeys = this.warnedKeysByObject.get(object);\n    if (!warnedKeys) {\n      warnedKeys = new Set();\n      this.warnedKeysByObject.set(object, warnedKeys);\n    }\n    if (!warnedKeys.has(key)) {\n      warnedKeys.add(key);\n      this.logger.warn(message, object);\n    }\n  }\n}\nfunction attributeValueContainsToken(attributeName, token) {\n  return `[${attributeName}~=\"${token}\"]`;\n}\nclass TargetSet {\n  constructor(scope) {\n    this.scope = scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get schema() {\n    return this.scope.schema;\n  }\n  has(targetName) {\n    return this.find(targetName) != null;\n  }\n  find(...targetNames) {\n    return targetNames.reduce((target, targetName) => target || this.findTarget(targetName) || this.findLegacyTarget(targetName), undefined);\n  }\n  findAll(...targetNames) {\n    return targetNames.reduce((targets, targetName) => [...targets, ...this.findAllTargets(targetName), ...this.findAllLegacyTargets(targetName)], []);\n  }\n  findTarget(targetName) {\n    const selector = this.getSelectorForTargetName(targetName);\n    return this.scope.findElement(selector);\n  }\n  findAllTargets(targetName) {\n    const selector = this.getSelectorForTargetName(targetName);\n    return this.scope.findAllElements(selector);\n  }\n  getSelectorForTargetName(targetName) {\n    const attributeName = this.schema.targetAttributeForScope(this.identifier);\n    return attributeValueContainsToken(attributeName, targetName);\n  }\n  findLegacyTarget(targetName) {\n    const selector = this.getLegacySelectorForTargetName(targetName);\n    return this.deprecate(this.scope.findElement(selector), targetName);\n  }\n  findAllLegacyTargets(targetName) {\n    const selector = this.getLegacySelectorForTargetName(targetName);\n    return this.scope.findAllElements(selector).map(element => this.deprecate(element, targetName));\n  }\n  getLegacySelectorForTargetName(targetName) {\n    const targetDescriptor = `${this.identifier}.${targetName}`;\n    return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);\n  }\n  deprecate(element, targetName) {\n    if (element) {\n      const identifier = this.identifier;\n      const attributeName = this.schema.targetAttribute;\n      const revisedAttributeName = this.schema.targetAttributeForScope(identifier);\n      this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}=\"${identifier}.${targetName}\" with ${revisedAttributeName}=\"${targetName}\". ` + `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);\n    }\n    return element;\n  }\n  get guide() {\n    return this.scope.guide;\n  }\n}\nclass OutletSet {\n  constructor(scope, controllerElement) {\n    this.scope = scope;\n    this.controllerElement = controllerElement;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get schema() {\n    return this.scope.schema;\n  }\n  has(outletName) {\n    return this.find(outletName) != null;\n  }\n  find(...outletNames) {\n    return outletNames.reduce((outlet, outletName) => outlet || this.findOutlet(outletName), undefined);\n  }\n  findAll(...outletNames) {\n    return outletNames.reduce((outlets, outletName) => [...outlets, ...this.findAllOutlets(outletName)], []);\n  }\n  getSelectorForOutletName(outletName) {\n    const attributeName = this.schema.outletAttributeForScope(this.identifier, outletName);\n    return this.controllerElement.getAttribute(attributeName);\n  }\n  findOutlet(outletName) {\n    const selector = this.getSelectorForOutletName(outletName);\n    if (selector) return this.findElement(selector, outletName);\n  }\n  findAllOutlets(outletName) {\n    const selector = this.getSelectorForOutletName(outletName);\n    return selector ? this.findAllElements(selector, outletName) : [];\n  }\n  findElement(selector, outletName) {\n    const elements = this.scope.queryElements(selector);\n    return elements.filter(element => this.matchesElement(element, selector, outletName))[0];\n  }\n  findAllElements(selector, outletName) {\n    const elements = this.scope.queryElements(selector);\n    return elements.filter(element => this.matchesElement(element, selector, outletName));\n  }\n  matchesElement(element, selector, outletName) {\n    const controllerAttribute = element.getAttribute(this.scope.schema.controllerAttribute) || \"\";\n    return element.matches(selector) && controllerAttribute.split(\" \").includes(outletName);\n  }\n}\nclass Scope {\n  constructor(schema, element, identifier, logger) {\n    this.targets = new TargetSet(this);\n    this.classes = new ClassMap(this);\n    this.data = new DataMap(this);\n    this.containsElement = element => {\n      return element.closest(this.controllerSelector) === this.element;\n    };\n    this.schema = schema;\n    this.element = element;\n    this.identifier = identifier;\n    this.guide = new Guide(logger);\n    this.outlets = new OutletSet(this.documentScope, element);\n  }\n  findElement(selector) {\n    return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);\n  }\n  findAllElements(selector) {\n    return [...(this.element.matches(selector) ? [this.element] : []), ...this.queryElements(selector).filter(this.containsElement)];\n  }\n  queryElements(selector) {\n    return Array.from(this.element.querySelectorAll(selector));\n  }\n  get controllerSelector() {\n    return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);\n  }\n  get isDocumentScope() {\n    return this.element === document.documentElement;\n  }\n  get documentScope() {\n    return this.isDocumentScope ? this : new Scope(this.schema, document.documentElement, this.identifier, this.guide.logger);\n  }\n}\nclass ScopeObserver {\n  constructor(element, schema, delegate) {\n    this.element = element;\n    this.schema = schema;\n    this.delegate = delegate;\n    this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);\n    this.scopesByIdentifierByElement = new WeakMap();\n    this.scopeReferenceCounts = new WeakMap();\n  }\n  start() {\n    this.valueListObserver.start();\n  }\n  stop() {\n    this.valueListObserver.stop();\n  }\n  get controllerAttribute() {\n    return this.schema.controllerAttribute;\n  }\n  parseValueForToken(token) {\n    const element = token.element,\n      identifier = token.content;\n    return this.parseValueForElementAndIdentifier(element, identifier);\n  }\n  parseValueForElementAndIdentifier(element, identifier) {\n    const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);\n    let scope = scopesByIdentifier.get(identifier);\n    if (!scope) {\n      scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);\n      scopesByIdentifier.set(identifier, scope);\n    }\n    return scope;\n  }\n  elementMatchedValue(element, value) {\n    const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;\n    this.scopeReferenceCounts.set(value, referenceCount);\n    if (referenceCount == 1) {\n      this.delegate.scopeConnected(value);\n    }\n  }\n  elementUnmatchedValue(element, value) {\n    const referenceCount = this.scopeReferenceCounts.get(value);\n    if (referenceCount) {\n      this.scopeReferenceCounts.set(value, referenceCount - 1);\n      if (referenceCount == 1) {\n        this.delegate.scopeDisconnected(value);\n      }\n    }\n  }\n  fetchScopesByIdentifierForElement(element) {\n    let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);\n    if (!scopesByIdentifier) {\n      scopesByIdentifier = new Map();\n      this.scopesByIdentifierByElement.set(element, scopesByIdentifier);\n    }\n    return scopesByIdentifier;\n  }\n}\nclass Router {\n  constructor(application) {\n    this.application = application;\n    this.scopeObserver = new ScopeObserver(this.element, this.schema, this);\n    this.scopesByIdentifier = new Multimap();\n    this.modulesByIdentifier = new Map();\n  }\n  get element() {\n    return this.application.element;\n  }\n  get schema() {\n    return this.application.schema;\n  }\n  get logger() {\n    return this.application.logger;\n  }\n  get controllerAttribute() {\n    return this.schema.controllerAttribute;\n  }\n  get modules() {\n    return Array.from(this.modulesByIdentifier.values());\n  }\n  get contexts() {\n    return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);\n  }\n  start() {\n    this.scopeObserver.start();\n  }\n  stop() {\n    this.scopeObserver.stop();\n  }\n  loadDefinition(definition) {\n    this.unloadIdentifier(definition.identifier);\n    const module = new Module(this.application, definition);\n    this.connectModule(module);\n    const afterLoad = definition.controllerConstructor.afterLoad;\n    if (afterLoad) {\n      afterLoad.call(definition.controllerConstructor, definition.identifier, this.application);\n    }\n  }\n  unloadIdentifier(identifier) {\n    const module = this.modulesByIdentifier.get(identifier);\n    if (module) {\n      this.disconnectModule(module);\n    }\n  }\n  getContextForElementAndIdentifier(element, identifier) {\n    const module = this.modulesByIdentifier.get(identifier);\n    if (module) {\n      return module.contexts.find(context => context.element == element);\n    }\n  }\n  proposeToConnectScopeForElementAndIdentifier(element, identifier) {\n    const scope = this.scopeObserver.parseValueForElementAndIdentifier(element, identifier);\n    if (scope) {\n      this.scopeObserver.elementMatchedValue(scope.element, scope);\n    } else {\n      console.error(`Couldn't find or create scope for identifier: \"${identifier}\" and element:`, element);\n    }\n  }\n  handleError(error, message, detail) {\n    this.application.handleError(error, message, detail);\n  }\n  createScopeForElementAndIdentifier(element, identifier) {\n    return new Scope(this.schema, element, identifier, this.logger);\n  }\n  scopeConnected(scope) {\n    this.scopesByIdentifier.add(scope.identifier, scope);\n    const module = this.modulesByIdentifier.get(scope.identifier);\n    if (module) {\n      module.connectContextForScope(scope);\n    }\n  }\n  scopeDisconnected(scope) {\n    this.scopesByIdentifier.delete(scope.identifier, scope);\n    const module = this.modulesByIdentifier.get(scope.identifier);\n    if (module) {\n      module.disconnectContextForScope(scope);\n    }\n  }\n  connectModule(module) {\n    this.modulesByIdentifier.set(module.identifier, module);\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n    scopes.forEach(scope => module.connectContextForScope(scope));\n  }\n  disconnectModule(module) {\n    this.modulesByIdentifier.delete(module.identifier);\n    const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);\n    scopes.forEach(scope => module.disconnectContextForScope(scope));\n  }\n}\nconst defaultSchema = {\n  controllerAttribute: \"data-controller\",\n  actionAttribute: \"data-action\",\n  targetAttribute: \"data-target\",\n  targetAttributeForScope: identifier => `data-${identifier}-target`,\n  outletAttributeForScope: (identifier, outlet) => `data-${identifier}-${outlet}-outlet`,\n  keyMappings: Object.assign(Object.assign({\n    enter: \"Enter\",\n    tab: \"Tab\",\n    esc: \"Escape\",\n    space: \" \",\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\",\n    home: \"Home\",\n    end: \"End\",\n    page_up: \"PageUp\",\n    page_down: \"PageDown\"\n  }, objectFromEntries(\"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(c => [c, c]))), objectFromEntries(\"0123456789\".split(\"\").map(n => [n, n])))\n};\nfunction objectFromEntries(array) {\n  return array.reduce((memo, [k, v]) => Object.assign(Object.assign({}, memo), {\n    [k]: v\n  }), {});\n}\nclass Application {\n  constructor(element = document.documentElement, schema = defaultSchema) {\n    this.logger = console;\n    this.debug = false;\n    this.logDebugActivity = (identifier, functionName, detail = {}) => {\n      if (this.debug) {\n        this.logFormattedMessage(identifier, functionName, detail);\n      }\n    };\n    this.element = element;\n    this.schema = schema;\n    this.dispatcher = new Dispatcher(this);\n    this.router = new Router(this);\n    this.actionDescriptorFilters = Object.assign({}, defaultActionDescriptorFilters);\n  }\n  static start(element, schema) {\n    const application = new this(element, schema);\n    application.start();\n    return application;\n  }\n  async start() {\n    await domReady();\n    this.logDebugActivity(\"application\", \"starting\");\n    this.dispatcher.start();\n    this.router.start();\n    this.logDebugActivity(\"application\", \"start\");\n  }\n  stop() {\n    this.logDebugActivity(\"application\", \"stopping\");\n    this.dispatcher.stop();\n    this.router.stop();\n    this.logDebugActivity(\"application\", \"stop\");\n  }\n  register(identifier, controllerConstructor) {\n    this.load({\n      identifier,\n      controllerConstructor\n    });\n  }\n  registerActionOption(name, filter) {\n    this.actionDescriptorFilters[name] = filter;\n  }\n  load(head, ...rest) {\n    const definitions = Array.isArray(head) ? head : [head, ...rest];\n    definitions.forEach(definition => {\n      if (definition.controllerConstructor.shouldLoad) {\n        this.router.loadDefinition(definition);\n      }\n    });\n  }\n  unload(head, ...rest) {\n    const identifiers = Array.isArray(head) ? head : [head, ...rest];\n    identifiers.forEach(identifier => this.router.unloadIdentifier(identifier));\n  }\n  get controllers() {\n    return this.router.contexts.map(context => context.controller);\n  }\n  getControllerForElementAndIdentifier(element, identifier) {\n    const context = this.router.getContextForElementAndIdentifier(element, identifier);\n    return context ? context.controller : null;\n  }\n  handleError(error, message, detail) {\n    var _a;\n    this.logger.error(`%s\\n\\n%o\\n\\n%o`, message, error, detail);\n    (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, \"\", 0, 0, error);\n  }\n  logFormattedMessage(identifier, functionName, detail = {}) {\n    detail = Object.assign({\n      application: this\n    }, detail);\n    this.logger.groupCollapsed(`${identifier} #${functionName}`);\n    this.logger.log(\"details:\", Object.assign({}, detail));\n    this.logger.groupEnd();\n  }\n}\nfunction domReady() {\n  return new Promise(resolve => {\n    if (document.readyState == \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", () => resolve());\n    } else {\n      resolve();\n    }\n  });\n}\nfunction ClassPropertiesBlessing(constructor) {\n  const classes = readInheritableStaticArrayValues(constructor, \"classes\");\n  return classes.reduce((properties, classDefinition) => {\n    return Object.assign(properties, propertiesForClassDefinition(classDefinition));\n  }, {});\n}\nfunction propertiesForClassDefinition(key) {\n  return {\n    [`${key}Class`]: {\n      get() {\n        const classes = this.classes;\n        if (classes.has(key)) {\n          return classes.get(key);\n        } else {\n          const attribute = classes.getAttributeName(key);\n          throw new Error(`Missing attribute \"${attribute}\"`);\n        }\n      }\n    },\n    [`${key}Classes`]: {\n      get() {\n        return this.classes.getAll(key);\n      }\n    },\n    [`has${capitalize(key)}Class`]: {\n      get() {\n        return this.classes.has(key);\n      }\n    }\n  };\n}\nfunction OutletPropertiesBlessing(constructor) {\n  const outlets = readInheritableStaticArrayValues(constructor, \"outlets\");\n  return outlets.reduce((properties, outletDefinition) => {\n    return Object.assign(properties, propertiesForOutletDefinition(outletDefinition));\n  }, {});\n}\nfunction getOutletController(controller, element, identifier) {\n  return controller.application.getControllerForElementAndIdentifier(element, identifier);\n}\nfunction getControllerAndEnsureConnectedScope(controller, element, outletName) {\n  let outletController = getOutletController(controller, element, outletName);\n  if (outletController) return outletController;\n  controller.application.router.proposeToConnectScopeForElementAndIdentifier(element, outletName);\n  outletController = getOutletController(controller, element, outletName);\n  if (outletController) return outletController;\n}\nfunction propertiesForOutletDefinition(name) {\n  const camelizedName = namespaceCamelize(name);\n  return {\n    [`${camelizedName}Outlet`]: {\n      get() {\n        const outletElement = this.outlets.find(name);\n        const selector = this.outlets.getSelectorForOutletName(name);\n        if (outletElement) {\n          const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n          if (outletController) return outletController;\n          throw new Error(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`);\n        }\n        throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n      }\n    },\n    [`${camelizedName}Outlets`]: {\n      get() {\n        const outlets = this.outlets.findAll(name);\n        if (outlets.length > 0) {\n          return outlets.map(outletElement => {\n            const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);\n            if (outletController) return outletController;\n            console.warn(`The provided outlet element is missing an outlet controller \"${name}\" instance for host controller \"${this.identifier}\"`, outletElement);\n          }).filter(controller => controller);\n        }\n        return [];\n      }\n    },\n    [`${camelizedName}OutletElement`]: {\n      get() {\n        const outletElement = this.outlets.find(name);\n        const selector = this.outlets.getSelectorForOutletName(name);\n        if (outletElement) {\n          return outletElement;\n        } else {\n          throw new Error(`Missing outlet element \"${name}\" for host controller \"${this.identifier}\". Stimulus couldn't find a matching outlet element using selector \"${selector}\".`);\n        }\n      }\n    },\n    [`${camelizedName}OutletElements`]: {\n      get() {\n        return this.outlets.findAll(name);\n      }\n    },\n    [`has${capitalize(camelizedName)}Outlet`]: {\n      get() {\n        return this.outlets.has(name);\n      }\n    }\n  };\n}\nfunction TargetPropertiesBlessing(constructor) {\n  const targets = readInheritableStaticArrayValues(constructor, \"targets\");\n  return targets.reduce((properties, targetDefinition) => {\n    return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));\n  }, {});\n}\nfunction propertiesForTargetDefinition(name) {\n  return {\n    [`${name}Target`]: {\n      get() {\n        const target = this.targets.find(name);\n        if (target) {\n          return target;\n        } else {\n          throw new Error(`Missing target element \"${name}\" for \"${this.identifier}\" controller`);\n        }\n      }\n    },\n    [`${name}Targets`]: {\n      get() {\n        return this.targets.findAll(name);\n      }\n    },\n    [`has${capitalize(name)}Target`]: {\n      get() {\n        return this.targets.has(name);\n      }\n    }\n  };\n}\nfunction ValuePropertiesBlessing(constructor) {\n  const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, \"values\");\n  const propertyDescriptorMap = {\n    valueDescriptorMap: {\n      get() {\n        return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {\n          const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);\n          const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);\n          return Object.assign(result, {\n            [attributeName]: valueDescriptor\n          });\n        }, {});\n      }\n    }\n  };\n  return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {\n    return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));\n  }, propertyDescriptorMap);\n}\nfunction propertiesForValueDefinitionPair(valueDefinitionPair, controller) {\n  const definition = parseValueDefinitionPair(valueDefinitionPair, controller);\n  const key = definition.key,\n    name = definition.name,\n    read = definition.reader,\n    write = definition.writer;\n  return {\n    [name]: {\n      get() {\n        const value = this.data.get(key);\n        if (value !== null) {\n          return read(value);\n        } else {\n          return definition.defaultValue;\n        }\n      },\n      set(value) {\n        if (value === undefined) {\n          this.data.delete(key);\n        } else {\n          this.data.set(key, write(value));\n        }\n      }\n    },\n    [`has${capitalize(name)}`]: {\n      get() {\n        return this.data.has(key) || definition.hasCustomDefaultValue;\n      }\n    }\n  };\n}\nfunction parseValueDefinitionPair([token, typeDefinition], controller) {\n  return valueDescriptorForTokenAndTypeDefinition({\n    controller,\n    token,\n    typeDefinition\n  });\n}\nfunction parseValueTypeConstant(constant) {\n  switch (constant) {\n    case Array:\n      return \"array\";\n    case Boolean:\n      return \"boolean\";\n    case Number:\n      return \"number\";\n    case Object:\n      return \"object\";\n    case String:\n      return \"string\";\n  }\n}\nfunction parseValueTypeDefault(defaultValue) {\n  switch (typeof defaultValue) {\n    case \"boolean\":\n      return \"boolean\";\n    case \"number\":\n      return \"number\";\n    case \"string\":\n      return \"string\";\n  }\n  if (Array.isArray(defaultValue)) return \"array\";\n  if (Object.prototype.toString.call(defaultValue) === \"[object Object]\") return \"object\";\n}\nfunction parseValueTypeObject(payload) {\n  const controller = payload.controller,\n    token = payload.token,\n    typeObject = payload.typeObject;\n  const hasType = isSomething(typeObject.type);\n  const hasDefault = isSomething(typeObject.default);\n  const fullObject = hasType && hasDefault;\n  const onlyType = hasType && !hasDefault;\n  const onlyDefault = !hasType && hasDefault;\n  const typeFromObject = parseValueTypeConstant(typeObject.type);\n  const typeFromDefaultValue = parseValueTypeDefault(payload.typeObject.default);\n  if (onlyType) return typeFromObject;\n  if (onlyDefault) return typeFromDefaultValue;\n  if (typeFromObject !== typeFromDefaultValue) {\n    const propertyPath = controller ? `${controller}.${token}` : token;\n    throw new Error(`The specified default value for the Stimulus Value \"${propertyPath}\" must match the defined type \"${typeFromObject}\". The provided default value of \"${typeObject.default}\" is of type \"${typeFromDefaultValue}\".`);\n  }\n  if (fullObject) return typeFromObject;\n}\nfunction parseValueTypeDefinition(payload) {\n  const controller = payload.controller,\n    token = payload.token,\n    typeDefinition = payload.typeDefinition;\n  const typeObject = {\n    controller,\n    token,\n    typeObject: typeDefinition\n  };\n  const typeFromObject = parseValueTypeObject(typeObject);\n  const typeFromDefaultValue = parseValueTypeDefault(typeDefinition);\n  const typeFromConstant = parseValueTypeConstant(typeDefinition);\n  const type = typeFromObject || typeFromDefaultValue || typeFromConstant;\n  if (type) return type;\n  const propertyPath = controller ? `${controller}.${typeDefinition}` : token;\n  throw new Error(`Unknown value type \"${propertyPath}\" for \"${token}\" value`);\n}\nfunction defaultValueForDefinition(typeDefinition) {\n  const constant = parseValueTypeConstant(typeDefinition);\n  if (constant) return defaultValuesByType[constant];\n  const hasDefault = hasProperty(typeDefinition, \"default\");\n  const hasType = hasProperty(typeDefinition, \"type\");\n  const typeObject = typeDefinition;\n  if (hasDefault) return typeObject.default;\n  if (hasType) {\n    const type = typeObject.type;\n    const constantFromType = parseValueTypeConstant(type);\n    if (constantFromType) return defaultValuesByType[constantFromType];\n  }\n  return typeDefinition;\n}\nfunction valueDescriptorForTokenAndTypeDefinition(payload) {\n  const token = payload.token,\n    typeDefinition = payload.typeDefinition;\n  const key = `${dasherize(token)}-value`;\n  const type = parseValueTypeDefinition(payload);\n  return {\n    type,\n    key,\n    name: camelize(key),\n    get defaultValue() {\n      return defaultValueForDefinition(typeDefinition);\n    },\n    get hasCustomDefaultValue() {\n      return parseValueTypeDefault(typeDefinition) !== undefined;\n    },\n    reader: readers[type],\n    writer: writers[type] || writers.default\n  };\n}\nconst defaultValuesByType = {\n  get array() {\n    return [];\n  },\n  boolean: false,\n  number: 0,\n  get object() {\n    return {};\n  },\n  string: \"\"\n};\nconst readers = {\n  array(value) {\n    const array = JSON.parse(value);\n    if (!Array.isArray(array)) {\n      throw new TypeError(`expected value of type \"array\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(array)}\"`);\n    }\n    return array;\n  },\n  boolean(value) {\n    return !(value == \"0\" || String(value).toLowerCase() == \"false\");\n  },\n  number(value) {\n    return Number(value.replace(/_/g, \"\"));\n  },\n  object(value) {\n    const object = JSON.parse(value);\n    if (object === null || typeof object != \"object\" || Array.isArray(object)) {\n      throw new TypeError(`expected value of type \"object\" but instead got value \"${value}\" of type \"${parseValueTypeDefault(object)}\"`);\n    }\n    return object;\n  },\n  string(value) {\n    return value;\n  }\n};\nconst writers = {\n  default: writeString,\n  array: writeJSON,\n  object: writeJSON\n};\nfunction writeJSON(value) {\n  return JSON.stringify(value);\n}\nfunction writeString(value) {\n  return `${value}`;\n}\nclass Controller {\n  constructor(context) {\n    this.context = context;\n  }\n  static get shouldLoad() {\n    return true;\n  }\n  static afterLoad(_identifier, _application) {\n    return;\n  }\n  get application() {\n    return this.context.application;\n  }\n  get scope() {\n    return this.context.scope;\n  }\n  get element() {\n    return this.scope.element;\n  }\n  get identifier() {\n    return this.scope.identifier;\n  }\n  get targets() {\n    return this.scope.targets;\n  }\n  get outlets() {\n    return this.scope.outlets;\n  }\n  get classes() {\n    return this.scope.classes;\n  }\n  get data() {\n    return this.scope.data;\n  }\n  initialize() {}\n  connect() {}\n  disconnect() {}\n  dispatch(eventName, {\n    target = this.element,\n    detail = {},\n    prefix = this.identifier,\n    bubbles = true,\n    cancelable = true\n  } = {}) {\n    const type = prefix ? `${prefix}:${eventName}` : eventName;\n    const event = new CustomEvent(type, {\n      detail,\n      bubbles,\n      cancelable\n    });\n    target.dispatchEvent(event);\n    return event;\n  }\n}\nController.blessings = [ClassPropertiesBlessing, TargetPropertiesBlessing, ValuePropertiesBlessing, OutletPropertiesBlessing];\nController.targets = [];\nController.outlets = [];\nController.values = {};\nexport { Application, AttributeObserver, Context, Controller, ElementObserver, IndexedMultimap, Multimap, SelectorObserver, StringMapObserver, TokenListObserver, ValueListObserver, add, defaultSchema, del, fetch, prune };","export * from \"@hotwired/stimulus-webpack-helpers\";","function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function (t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine(u), _regeneratorDefine(u, o, \"Generator\"), _regeneratorDefine(u, n, function () { return this; }), _regeneratorDefine(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function () { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine = function (e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { function o(r, n) { _regeneratorDefine(e, r, function (e) { return this._invoke(r, n, e); }); } o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine(e, r, n, t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var n = 0, F = function () {}; return { s: F, n: function () { return n >= r.length ? { done: !0 } : { done: !1, value: r[n++] }; }, e: function (r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function () { t = t.call(r); }, n: function () { var r = t.next(); return a = r.done, r; }, e: function (r) { u = !0, o = r; }, f: function () { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n/**\n* Tom Select v2.4.3\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, function () {\n  'use strict';\n\n  /**\n   * MicroEvent - to make any js object an event emitter\n   *\n   * - pure javascript - server compatible, browser compatible\n   * - dont rely on the browser doms\n   * - super simple - you get it immediatly, no mistery, no magic involved\n   *\n   * @author Jerome Etienne (https://github.com/jeromeetienne)\n   */\n\n  /**\n   * Execute callback for each event in space separated list of event names\n   *\n   */\n  var _marked = /*#__PURE__*/_regenerator().m(generator);\n  function forEvents(events, callback) {\n    events.split(/\\s+/).forEach(event => {\n      callback(event);\n    });\n  }\n  class MicroEvent {\n    constructor() {\n      this._events = {};\n    }\n    on(events, fct) {\n      forEvents(events, event => {\n        const event_array = this._events[event] || [];\n        event_array.push(fct);\n        this._events[event] = event_array;\n      });\n    }\n    off(events, fct) {\n      var n = arguments.length;\n      if (n === 0) {\n        this._events = {};\n        return;\n      }\n      forEvents(events, event => {\n        if (n === 1) {\n          delete this._events[event];\n          return;\n        }\n        const event_array = this._events[event];\n        if (event_array === undefined) return;\n        event_array.splice(event_array.indexOf(fct), 1);\n        this._events[event] = event_array;\n      });\n    }\n    trigger(events, ...args) {\n      var self = this;\n      forEvents(events, event => {\n        const event_array = self._events[event];\n        if (event_array === undefined) return;\n        event_array.forEach(fct => {\n          fct.apply(self, args);\n        });\n      });\n    }\n  }\n\n  /**\n   * microplugin.js\n   * Copyright (c) 2013 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n\n  function MicroPlugin(Interface) {\n    Interface.plugins = {};\n    return class extends Interface {\n      constructor(...args) {\n        super(...args);\n        this.plugins = {\n          names: [],\n          settings: {},\n          requested: {},\n          loaded: {}\n        };\n      }\n      /**\n       * Registers a plugin.\n       *\n       * @param {function} fn\n       */\n      static define(name, fn) {\n        Interface.plugins[name] = {\n          'name': name,\n          'fn': fn\n        };\n      }\n\n      /**\n       * Initializes the listed plugins (with options).\n       * Acceptable formats:\n       *\n       * List (without options):\n       *   ['a', 'b', 'c']\n       *\n       * List (with options):\n       *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n       *\n       * Hash (with options):\n       *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n       *\n       * @param {array|object} plugins\n       */\n      initializePlugins(plugins) {\n        var key, name;\n        const self = this;\n        const queue = [];\n        if (Array.isArray(plugins)) {\n          plugins.forEach(plugin => {\n            if (typeof plugin === 'string') {\n              queue.push(plugin);\n            } else {\n              self.plugins.settings[plugin.name] = plugin.options;\n              queue.push(plugin.name);\n            }\n          });\n        } else if (plugins) {\n          for (key in plugins) {\n            if (plugins.hasOwnProperty(key)) {\n              self.plugins.settings[key] = plugins[key];\n              queue.push(key);\n            }\n          }\n        }\n        while (name = queue.shift()) {\n          self.require(name);\n        }\n      }\n      loadPlugin(name) {\n        var self = this;\n        var plugins = self.plugins;\n        var plugin = Interface.plugins[name];\n        if (!Interface.plugins.hasOwnProperty(name)) {\n          throw new Error('Unable to find \"' + name + '\" plugin');\n        }\n        plugins.requested[name] = true;\n        plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n        plugins.names.push(name);\n      }\n\n      /**\n       * Initializes a plugin.\n       *\n       */\n      require(name) {\n        var self = this;\n        var plugins = self.plugins;\n        if (!self.plugins.loaded.hasOwnProperty(name)) {\n          if (plugins.requested[name]) {\n            throw new Error('Plugin has circular dependency (\"' + name + '\")');\n          }\n          self.loadPlugin(name);\n        }\n        return plugins.loaded[name];\n      }\n    };\n  }\n\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   */\n  const arrayToPattern = chars => {\n    chars = chars.filter(Boolean);\n    if (chars.length < 2) {\n      return chars[0] || '';\n    }\n    return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n  };\n  const sequencePattern = array => {\n    if (!hasDuplicates(array)) {\n      return array.join('');\n    }\n    let pattern = '';\n    let prev_char_count = 0;\n    const prev_pattern = () => {\n      if (prev_char_count > 1) {\n        pattern += '{' + prev_char_count + '}';\n      }\n    };\n    array.forEach((char, i) => {\n      if (char === array[i - 1]) {\n        prev_char_count++;\n        return;\n      }\n      prev_pattern();\n      pattern += char;\n      prev_char_count = 1;\n    });\n    prev_pattern();\n    return pattern;\n  };\n  /**\n   * Convert array of strings to a regular expression\n   *\tex ['ab','a'] => (?:ab|a)\n   * \tex ['a','b'] => [ab]\n   */\n  const setToPattern = chars => {\n    let array = Array.from(chars);\n    return arrayToPattern(array);\n  };\n  /**\n   * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n   */\n  const hasDuplicates = array => {\n    return new Set(array).size !== array.length;\n  };\n  /**\n   * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n   */\n  const escape_regex = str => {\n    return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n  };\n  /**\n   * Return the max length of array values\n   */\n  const maxValueLength = array => {\n    return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n  };\n  const unicodeLength = str => {\n    return Array.from(str).length;\n  };\n\n  /**\n   * Get all possible combinations of substrings that add up to the given string\n   * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n   */\n  const allSubstrings = input => {\n    if (input.length === 1) return [[input]];\n    let result = [];\n    const start = input.substring(1);\n    const suba = allSubstrings(start);\n    suba.forEach(function (subresult) {\n      let tmp = subresult.slice(0);\n      tmp[0] = input.charAt(0) + tmp[0];\n      result.push(tmp);\n      tmp = subresult.slice(0);\n      tmp.unshift(input.charAt(0));\n      result.push(tmp);\n    });\n    return result;\n  };\n  const code_points = [[0, 65535]];\n  const accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n  let unicode_map;\n  let multi_char_reg;\n  const max_char_length = 3;\n  const latin_convert = {};\n  const latin_condensed = {\n    '/': '⁄∕',\n    '0': '߀',\n    \"a\": \"ⱥɐɑ\",\n    \"aa\": \"ꜳ\",\n    \"ae\": \"æǽǣ\",\n    \"ao\": \"ꜵ\",\n    \"au\": \"ꜷ\",\n    \"av\": \"ꜹꜻ\",\n    \"ay\": \"ꜽ\",\n    \"b\": \"ƀɓƃ\",\n    \"c\": \"ꜿƈȼↄ\",\n    \"d\": \"đɗɖᴅƌꮷԁɦ\",\n    \"e\": \"ɛǝᴇɇ\",\n    \"f\": \"ꝼƒ\",\n    \"g\": \"ǥɠꞡᵹꝿɢ\",\n    \"h\": \"ħⱨⱶɥ\",\n    \"i\": \"ɨı\",\n    \"j\": \"ɉȷ\",\n    \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n    \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n    \"m\": \"ɱɯϻ\",\n    \"n\": \"ꞥƞɲꞑᴎлԉ\",\n    \"o\": \"øǿɔɵꝋꝍᴑ\",\n    \"oe\": \"œ\",\n    \"oi\": \"ƣ\",\n    \"oo\": \"ꝏ\",\n    \"ou\": \"ȣ\",\n    \"p\": \"ƥᵽꝑꝓꝕρ\",\n    \"q\": \"ꝗꝙɋ\",\n    \"r\": \"ɍɽꝛꞧꞃ\",\n    \"s\": \"ßȿꞩꞅʂ\",\n    \"t\": \"ŧƭʈⱦꞇ\",\n    \"th\": \"þ\",\n    \"tz\": \"ꜩ\",\n    \"u\": \"ʉ\",\n    \"v\": \"ʋꝟʌ\",\n    \"vy\": \"ꝡ\",\n    \"w\": \"ⱳ\",\n    \"y\": \"ƴɏỿ\",\n    \"z\": \"ƶȥɀⱬꝣ\",\n    \"hv\": \"ƕ\"\n  };\n  for (let latin in latin_condensed) {\n    let unicode = latin_condensed[latin] || '';\n    for (let i = 0; i < unicode.length; i++) {\n      let char = unicode.substring(i, i + 1);\n      latin_convert[char] = latin;\n    }\n  }\n  const convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n  /**\n   * Initialize the unicode_map from the give code point ranges\n   */\n  const initialize = _code_points => {\n    if (unicode_map !== undefined) return;\n    unicode_map = generateMap(code_points);\n  };\n  /**\n   * Helper method for normalize a string\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n   */\n  const normalize = (str, form = 'NFKD') => str.normalize(form);\n  /**\n   * Remove accents without reordering string\n   * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n   * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n   */\n  const asciifold = str => {\n    return Array.from(str).reduce(\n    /**\n     * @param {string} result\n     * @param {string} char\n     */\n    (result, char) => {\n      return result + _asciifold(char);\n    }, '');\n  };\n  const _asciifold = str => {\n    str = normalize(str).toLowerCase().replace(convert_pat, (/** @type {string} */char) => {\n      return latin_convert[char] || '';\n    });\n    //return str;\n    return normalize(str, 'NFC');\n  };\n  /**\n   * Generate a list of unicode variants from the list of code points\n   */\n  function generator(code_points) {\n    var _iterator, _step, _step$value, code_point_min, code_point_max, i, composed, folded, _t;\n    return _regenerator().w(function (_context) {\n      while (1) switch (_context.n) {\n        case 0:\n          _iterator = _createForOfIteratorHelper(code_points);\n          _context.p = 1;\n          _iterator.s();\n        case 2:\n          if ((_step = _iterator.n()).done) {\n            _context.n = 9;\n            break;\n          }\n          _step$value = _slicedToArray(_step.value, 2), code_point_min = _step$value[0], code_point_max = _step$value[1];\n          i = code_point_min;\n        case 3:\n          if (!(i <= code_point_max)) {\n            _context.n = 8;\n            break;\n          }\n          composed = String.fromCharCode(i);\n          folded = asciifold(composed);\n          if (!(folded == composed.toLowerCase())) {\n            _context.n = 4;\n            break;\n          }\n          return _context.a(3, 7);\n        case 4:\n          if (!(folded.length > max_char_length)) {\n            _context.n = 5;\n            break;\n          }\n          return _context.a(3, 7);\n        case 5:\n          if (!(folded.length == 0)) {\n            _context.n = 6;\n            break;\n          }\n          return _context.a(3, 7);\n        case 6:\n          _context.n = 7;\n          return {\n            folded: folded,\n            composed: composed,\n            code_point: i\n          };\n        case 7:\n          i++;\n          _context.n = 3;\n          break;\n        case 8:\n          _context.n = 2;\n          break;\n        case 9:\n          _context.n = 11;\n          break;\n        case 10:\n          _context.p = 10;\n          _t = _context.v;\n          _iterator.e(_t);\n        case 11:\n          _context.p = 11;\n          _iterator.f();\n          return _context.f(11);\n        case 12:\n          return _context.a(2);\n      }\n    }, _marked, null, [[1, 10, 11, 12]]);\n  }\n  /**\n   * Generate a unicode map from the list of code points\n   */\n  const generateSets = code_points => {\n    const unicode_sets = {};\n    const addMatching = (folded, to_add) => {\n      /** @type {Set<string>} */\n      const folded_set = unicode_sets[folded] || new Set();\n      const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n      if (to_add.match(patt)) {\n        return;\n      }\n      folded_set.add(escape_regex(to_add));\n      unicode_sets[folded] = folded_set;\n    };\n    var _iterator2 = _createForOfIteratorHelper(generator(code_points)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        let value = _step2.value;\n        addMatching(value.folded, value.folded);\n        addMatching(value.folded, value.composed);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return unicode_sets;\n  };\n  /**\n   * Generate a unicode map from the list of code points\n   * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n   */\n  const generateMap = code_points => {\n    const unicode_sets = generateSets(code_points);\n    const unicode_map = {};\n    let multi_char = [];\n    for (let folded in unicode_sets) {\n      let set = unicode_sets[folded];\n      if (set) {\n        unicode_map[folded] = setToPattern(set);\n      }\n      if (folded.length > 1) {\n        multi_char.push(escape_regex(folded));\n      }\n    }\n    multi_char.sort((a, b) => b.length - a.length);\n    const multi_char_patt = arrayToPattern(multi_char);\n    multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n    return unicode_map;\n  };\n  /**\n   * Map each element of an array from its folded value to all possible unicode matches\n   */\n  const mapSequence = (strings, min_replacement = 1) => {\n    let chars_replaced = 0;\n    strings = strings.map(str => {\n      if (unicode_map[str]) {\n        chars_replaced += str.length;\n      }\n      return unicode_map[str] || str;\n    });\n    if (chars_replaced >= min_replacement) {\n      return sequencePattern(strings);\n    }\n    return '';\n  };\n  /**\n   * Convert a short string and split it into all possible patterns\n   * Keep a pattern only if min_replacement is met\n   *\n   * 'abc'\n   * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n   *\t\t=> ['abc-pattern','ab-c-pattern'...]\n   */\n  const substringsToPattern = (str, min_replacement = 1) => {\n    min_replacement = Math.max(min_replacement, str.length - 1);\n    return arrayToPattern(allSubstrings(str).map(sub_pat => {\n      return mapSequence(sub_pat, min_replacement);\n    }));\n  };\n  /**\n   * Convert an array of sequences into a pattern\n   * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n   */\n  const sequencesToPattern = (sequences, all = true) => {\n    let min_replacement = sequences.length > 1 ? 1 : 0;\n    return arrayToPattern(sequences.map(sequence => {\n      let seq = [];\n      const len = all ? sequence.length() : sequence.length() - 1;\n      for (let j = 0; j < len; j++) {\n        seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n      }\n      return sequencePattern(seq);\n    }));\n  };\n  /**\n   * Return true if the sequence is already in the sequences\n   */\n  const inSequences = (needle_seq, sequences) => {\n    var _iterator3 = _createForOfIteratorHelper(sequences),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        const seq = _step3.value;\n        if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n          continue;\n        }\n        if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n          continue;\n        }\n        let needle_parts = needle_seq.parts;\n        const filter = part => {\n          var _iterator4 = _createForOfIteratorHelper(needle_parts),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              const needle_part = _step4.value;\n              if (needle_part.start === part.start && needle_part.substr === part.substr) {\n                return false;\n              }\n              if (part.length == 1 || needle_part.length == 1) {\n                continue;\n              }\n              // check for overlapping parts\n              // a = ['::=','==']\n              // b = ['::','===']\n              // a = ['r','sm']\n              // b = ['rs','m']\n              if (part.start < needle_part.start && part.end > needle_part.start) {\n                return true;\n              }\n              if (needle_part.start < part.start && needle_part.end > part.start) {\n                return true;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          return false;\n        };\n        let filtered = seq.parts.filter(filter);\n        if (filtered.length > 0) {\n          continue;\n        }\n        return true;\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return false;\n  };\n  class Sequence {\n    constructor() {\n      this.parts = void 0;\n      this.substrs = void 0;\n      this.start = void 0;\n      this.end = void 0;\n      this.parts = [];\n      this.substrs = [];\n      this.start = 0;\n      this.end = 0;\n    }\n    add(part) {\n      if (part) {\n        this.parts.push(part);\n        this.substrs.push(part.substr);\n        this.start = Math.min(part.start, this.start);\n        this.end = Math.max(part.end, this.end);\n      }\n    }\n    last() {\n      return this.parts[this.parts.length - 1];\n    }\n    length() {\n      return this.parts.length;\n    }\n    clone(position, last_piece) {\n      let clone = new Sequence();\n      let parts = JSON.parse(JSON.stringify(this.parts));\n      let last_part = parts.pop();\n      var _iterator5 = _createForOfIteratorHelper(parts),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          const part = _step5.value;\n          clone.add(part);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      let last_substr = last_piece.substr.substring(0, position - last_part.start);\n      let clone_last_len = last_substr.length;\n      clone.add({\n        start: last_part.start,\n        end: last_part.start + clone_last_len,\n        length: clone_last_len,\n        substr: last_substr\n      });\n      return clone;\n    }\n  }\n  /**\n   * Expand a regular expression pattern to include unicode variants\n   * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n   *\n   * Issue:\n   *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n   *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n   *\n   *\tİĲ = IIJ = ⅡJ\n   *\n   * \t1/2/4\n   */\n  const getPattern = str => {\n    initialize();\n    str = asciifold(str);\n    let pattern = '';\n    let sequences = [new Sequence()];\n    for (let i = 0; i < str.length; i++) {\n      let substr = str.substring(i);\n      let match = substr.match(multi_char_reg);\n      const char = str.substring(i, i + 1);\n      const match_str = match ? match[0] : null;\n      // loop through sequences\n      // add either the char or multi_match\n      let overlapping = [];\n      let added_types = new Set();\n      var _iterator6 = _createForOfIteratorHelper(sequences),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          const sequence = _step6.value;\n          const last_piece = sequence.last();\n          if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n            // if we have a multi match\n            if (match_str) {\n              const len = match_str.length;\n              sequence.add({\n                start: i,\n                end: i + len,\n                length: len,\n                substr: match_str\n              });\n              added_types.add('1');\n            } else {\n              sequence.add({\n                start: i,\n                end: i + 1,\n                length: 1,\n                substr: char\n              });\n              added_types.add('2');\n            }\n          } else if (match_str) {\n            let clone = sequence.clone(i, last_piece);\n            const len = match_str.length;\n            clone.add({\n              start: i,\n              end: i + len,\n              length: len,\n              substr: match_str\n            });\n            overlapping.push(clone);\n          } else {\n            // don't add char\n            // adding would create invalid patterns: 234 => [2,34,4]\n            added_types.add('3');\n          }\n        }\n        // if we have overlapping\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      if (overlapping.length > 0) {\n        // ['ii','iii'] before ['i','i','iii']\n        overlapping = overlapping.sort((a, b) => {\n          return a.length() - b.length();\n        });\n        var _iterator7 = _createForOfIteratorHelper(overlapping),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            let clone = _step7.value;\n            // don't add if we already have an equivalent sequence\n            if (inSequences(clone, sequences)) {\n              continue;\n            }\n            sequences.push(clone);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n        continue;\n      }\n      // if we haven't done anything unique\n      // clean up the patterns\n      // helps keep patterns smaller\n      // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n      if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n        pattern += sequencesToPattern(sequences, false);\n        let new_seq = new Sequence();\n        const old_seq = sequences[0];\n        if (old_seq) {\n          new_seq.add(old_seq.last());\n        }\n        sequences = [new_seq];\n      }\n    }\n    pattern += sequencesToPattern(sequences, true);\n    return pattern;\n  };\n\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n  const getAttr = (obj, name) => {\n    if (!obj) return;\n    return obj[name];\n  };\n  /**\n   * A property getter resolving dot-notation\n   * @param  {Object}  obj     The root object to fetch property on\n   * @param  {String}  name    The optionally dotted property name to fetch\n   * @return {Object}          The resolved property value\n   */\n  const getAttrNesting = (obj, name) => {\n    if (!obj) return;\n    var part,\n      names = name.split(\".\");\n    while ((part = names.shift()) && (obj = obj[part]));\n    return obj;\n  };\n  /**\n   * Calculates how close of a match the\n   * given value is against a search token.\n   *\n   */\n  const scoreValue = (value, token, weight) => {\n    var score, pos;\n    if (!value) return 0;\n    value = value + '';\n    if (token.regex == null) return 0;\n    pos = value.search(token.regex);\n    if (pos === -1) return 0;\n    score = token.string.length / value.length;\n    if (pos === 0) score += 0.5;\n    return score * weight;\n  };\n  /**\n   * Cast object property to an array if it exists and has a value\n   *\n   */\n  const propToArray = (obj, key) => {\n    var value = obj[key];\n    if (typeof value == 'function') return value;\n    if (value && !Array.isArray(value)) {\n      obj[key] = [value];\n    }\n  };\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n  const iterate$1 = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n  const cmp = (a, b) => {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a > b ? 1 : a < b ? -1 : 0;\n    }\n    a = asciifold(a + '').toLowerCase();\n    b = asciifold(b + '').toLowerCase();\n    if (a > b) return 1;\n    if (b > a) return -1;\n    return 0;\n  };\n\n  /**\n   * sifter.js\n   * Copyright (c) 2013–2020 Brian Reavis & contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   * @author Brian Reavis <brian@thirdroute.com>\n   */\n  class Sifter {\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     */\n    constructor(items, settings) {\n      this.items = void 0;\n      // []|{};\n      this.settings = void 0;\n      this.items = items;\n      this.settings = settings || {\n        diacritics: true\n      };\n    }\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     */\n    tokenize(query, respect_word_boundaries, weights) {\n      if (!query || !query.length) return [];\n      const tokens = [];\n      const words = query.split(/\\s+/);\n      var field_regex;\n      if (weights) {\n        field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n      }\n      words.forEach(word => {\n        let field_match;\n        let field = null;\n        let regex = null;\n        // look for \"field:query\" tokens\n        if (field_regex && (field_match = word.match(field_regex))) {\n          field = field_match[1];\n          word = field_match[2];\n        }\n        if (word.length > 0) {\n          if (this.settings.diacritics) {\n            regex = getPattern(word) || null;\n          } else {\n            regex = escape_regex(word);\n          }\n          if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n        }\n        tokens.push({\n          string: word,\n          regex: regex ? new RegExp(regex, 'iu') : null,\n          field: field\n        });\n      });\n      return tokens;\n    }\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @returns {T.ScoreFn}\n     */\n    getScoreFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getScoreFunction(search);\n    }\n    /**\n     * @returns {T.ScoreFn}\n     *\n     */\n    _getScoreFunction(search) {\n      const tokens = search.tokens,\n        token_count = tokens.length;\n      if (!token_count) {\n        return function () {\n          return 0;\n        };\n      }\n      const fields = search.options.fields,\n        weights = search.weights,\n        field_count = fields.length,\n        getAttrFn = search.getAttrFn;\n      if (!field_count) {\n        return function () {\n          return 1;\n        };\n      }\n      /**\n       * Calculates the score of an object\n       * against the search query.\n       *\n       */\n      const scoreObject = function () {\n        if (field_count === 1) {\n          return function (token, data) {\n            const field = fields[0].field;\n            return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n          };\n        }\n        return function (token, data) {\n          var sum = 0;\n          // is the token specific to a field?\n          if (token.field) {\n            const value = getAttrFn(data, token.field);\n            if (!token.regex && value) {\n              sum += 1 / field_count;\n            } else {\n              sum += scoreValue(value, token, 1);\n            }\n          } else {\n            iterate$1(weights, (weight, field) => {\n              sum += scoreValue(getAttrFn(data, field), token, weight);\n            });\n          }\n          return sum / field_count;\n        };\n      }();\n      if (token_count === 1) {\n        return function (data) {\n          return scoreObject(tokens[0], data);\n        };\n      }\n      if (search.options.conjunction === 'and') {\n        return function (data) {\n          var score,\n            sum = 0;\n          var _iterator8 = _createForOfIteratorHelper(tokens),\n            _step8;\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              let token = _step8.value;\n              score = scoreObject(token, data);\n              if (score <= 0) return 0;\n              sum += score;\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n          return sum / token_count;\n        };\n      } else {\n        return function (data) {\n          var sum = 0;\n          iterate$1(tokens, token => {\n            sum += scoreObject(token, data);\n          });\n          return sum / token_count;\n        };\n      }\n    }\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @return function(a,b)\n     */\n    getSortFunction(query, options) {\n      var search = this.prepareSearch(query, options);\n      return this._getSortFunction(search);\n    }\n    _getSortFunction(search) {\n      var implicit_score,\n        sort_flds = [];\n      const self = this,\n        options = search.options,\n        sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n      if (typeof sort == 'function') {\n        return sort.bind(this);\n      }\n      /**\n       * Fetches the specified sort field value\n       * from a search result item.\n       *\n       */\n      const get_field = function (name, result) {\n        if (name === '$score') return result.score;\n        return search.getAttrFn(self.items[result.id], name);\n      };\n      // parse options\n      if (sort) {\n        var _iterator9 = _createForOfIteratorHelper(sort),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            let s = _step9.value;\n            if (search.query || s.field !== '$score') {\n              sort_flds.push(s);\n            }\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n      // the \"$score\" field is implied to be the primary\n      // sort field, unless it's manually specified\n      if (search.query) {\n        implicit_score = true;\n        var _iterator0 = _createForOfIteratorHelper(sort_flds),\n          _step0;\n        try {\n          for (_iterator0.s(); !(_step0 = _iterator0.n()).done;) {\n            let fld = _step0.value;\n            if (fld.field === '$score') {\n              implicit_score = false;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator0.e(err);\n        } finally {\n          _iterator0.f();\n        }\n        if (implicit_score) {\n          sort_flds.unshift({\n            field: '$score',\n            direction: 'desc'\n          });\n        }\n        // without a search.query, all items will have the same score\n      } else {\n        sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n      }\n      // build function\n      const sort_flds_count = sort_flds.length;\n      if (!sort_flds_count) {\n        return null;\n      }\n      return function (a, b) {\n        var result, field;\n        var _iterator1 = _createForOfIteratorHelper(sort_flds),\n          _step1;\n        try {\n          for (_iterator1.s(); !(_step1 = _iterator1.n()).done;) {\n            let sort_fld = _step1.value;\n            field = sort_fld.field;\n            let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n            result = multiplier * cmp(get_field(field, a), get_field(field, b));\n            if (result) return result;\n          }\n        } catch (err) {\n          _iterator1.e(err);\n        } finally {\n          _iterator1.f();\n        }\n        return 0;\n      };\n    }\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     */\n    prepareSearch(query, optsUser) {\n      const weights = {};\n      var options = Object.assign({}, optsUser);\n      propToArray(options, 'sort');\n      propToArray(options, 'sort_empty');\n      // convert fields to new format\n      if (options.fields) {\n        propToArray(options, 'fields');\n        const fields = [];\n        options.fields.forEach(field => {\n          if (typeof field == 'string') {\n            field = {\n              field: field,\n              weight: 1\n            };\n          }\n          fields.push(field);\n          weights[field.field] = 'weight' in field ? field.weight : 1;\n        });\n        options.fields = fields;\n      }\n      return {\n        options: options,\n        query: query.toLowerCase().trim(),\n        tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n        total: 0,\n        items: [],\n        weights: weights,\n        getAttrFn: options.nesting ? getAttrNesting : getAttr\n      };\n    }\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     */\n    search(query, options) {\n      var self = this,\n        score,\n        search;\n      search = this.prepareSearch(query, options);\n      options = search.options;\n      query = search.query;\n      // generate result scoring function\n      const fn_score = options.score || self._getScoreFunction(search);\n      // perform search and sort\n      if (query.length) {\n        iterate$1(self.items, (item, id) => {\n          score = fn_score(item);\n          if (options.filter === false || score > 0) {\n            search.items.push({\n              'score': score,\n              'id': id\n            });\n          }\n        });\n      } else {\n        iterate$1(self.items, (_, id) => {\n          search.items.push({\n            'score': 1,\n            'id': id\n          });\n        });\n      }\n      const fn_sort = self._getSortFunction(search);\n      if (fn_sort) search.items.sort(fn_sort);\n      // apply limits\n      search.total = search.items.length;\n      if (typeof options.limit === 'number') {\n        search.items = search.items.slice(0, options.limit);\n      }\n      return search;\n    }\n  }\n\n  /**\n   * Converts a scalar to its best string representation\n   * for hash keys and HTML attribute values.\n   *\n   * Transformations:\n   *   'str'     -> 'str'\n   *   null      -> ''\n   *   undefined -> ''\n   *   true      -> '1'\n   *   false     -> '0'\n   *   0         -> '0'\n   *   1         -> '1'\n   *\n   */\n  const hash_key = value => {\n    if (typeof value === 'undefined' || value === null) return null;\n    return get_hash(value);\n  };\n  const get_hash = value => {\n    if (typeof value === 'boolean') return value ? '1' : '0';\n    return value + '';\n  };\n\n  /**\n   * Escapes a string for use within HTML.\n   *\n   */\n  const escape_html = str => {\n    return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n  };\n\n  /**\n   * use setTimeout if timeout > 0 \n   */\n  const timeout = (fn, timeout) => {\n    if (timeout > 0) {\n      return window.setTimeout(fn, timeout);\n    }\n    fn.call(null);\n    return null;\n  };\n\n  /**\n   * Debounce the user provided load function\n   *\n   */\n  const loadDebounce = (fn, delay) => {\n    var timeout;\n    return function (value, callback) {\n      var self = this;\n      if (timeout) {\n        self.loading = Math.max(self.loading - 1, 0);\n        clearTimeout(timeout);\n      }\n      timeout = setTimeout(function () {\n        timeout = null;\n        self.loadedSearches[value] = true;\n        fn.call(self, value, callback);\n      }, delay);\n    };\n  };\n\n  /**\n   * Debounce all fired events types listed in `types`\n   * while executing the provided `fn`.\n   *\n   */\n  const debounce_events = (self, types, fn) => {\n    var type;\n    var trigger = self.trigger;\n    var event_args = {};\n\n    // override trigger method\n    self.trigger = function () {\n      var type = arguments[0];\n      if (types.indexOf(type) !== -1) {\n        event_args[type] = arguments;\n      } else {\n        return trigger.apply(self, arguments);\n      }\n    };\n\n    // invoke provided function\n    fn.apply(self, []);\n    self.trigger = trigger;\n\n    // trigger queued events\n    var _iterator10 = _createForOfIteratorHelper(types),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        type = _step10.value;\n        if (type in event_args) {\n          trigger.apply(self, event_args[type]);\n        }\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n  };\n\n  /**\n   * Determines the current selection within a text input control.\n   * Returns an object containing:\n   *   - start\n   *   - length\n   *\n   * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n   * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n   */\n  const getSelection = input => {\n    return {\n      start: input.selectionStart || 0,\n      length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n    };\n  };\n\n  /**\n   * Prevent default\n   *\n   */\n  const preventDefault = (evt, stop = false) => {\n    if (evt) {\n      evt.preventDefault();\n      if (stop) {\n        evt.stopPropagation();\n      }\n    }\n  };\n\n  /**\n   * Add event helper\n   *\n   */\n  const addEvent = (target, type, callback, options) => {\n    target.addEventListener(type, callback, options);\n  };\n\n  /**\n   * Return true if the requested key is down\n   * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n   * The current evt may not always set ( eg calling advanceSelection() )\n   *\n   */\n  const isKeyDown = (key_name, evt) => {\n    if (!evt) {\n      return false;\n    }\n    if (!evt[key_name]) {\n      return false;\n    }\n    var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n    if (count === 1) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Get the id of an element\n   * If the id attribute is not set, set the attribute with the given id\n   *\n   */\n  const getId = (el, id) => {\n    const existing_id = el.getAttribute('id');\n    if (existing_id) {\n      return existing_id;\n    }\n    el.setAttribute('id', id);\n    return id;\n  };\n\n  /**\n   * Returns a string with backslashes added before characters that need to be escaped.\n   */\n  const addSlashes = str => {\n    return str.replace(/[\\\\\"']/g, '\\\\$&');\n  };\n\n  /**\n   *\n   */\n  const append = (parent, node) => {\n    if (node) parent.append(node);\n  };\n\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * iterate(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   */\n  const iterate = (object, callback) => {\n    if (Array.isArray(object)) {\n      object.forEach(callback);\n    } else {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          callback(object[key], key);\n        }\n      }\n    }\n  };\n\n  /**\n   * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n   * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n   *\n   * param query should be {}\n   */\n  const getDom = query => {\n    if (query.jquery) {\n      return query[0];\n    }\n    if (query instanceof HTMLElement) {\n      return query;\n    }\n    if (isHtmlString(query)) {\n      var tpl = document.createElement('template');\n      tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n      return tpl.content.firstChild;\n    }\n    return document.querySelector(query);\n  };\n  const isHtmlString = arg => {\n    if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n      return true;\n    }\n    return false;\n  };\n  const escapeQuery = query => {\n    return query.replace(/['\"\\\\]/g, '\\\\$&');\n  };\n\n  /**\n   * Dispatch an event\n   *\n   */\n  const triggerEvent = (dom_el, event_name) => {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(event_name, true, false);\n    dom_el.dispatchEvent(event);\n  };\n\n  /**\n   * Apply CSS rules to a dom element\n   *\n   */\n  const applyCSS = (dom_el, css) => {\n    Object.assign(dom_el.style, css);\n  };\n\n  /**\n   * Add css classes\n   *\n   */\n  const addClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.add(cls);\n      });\n    });\n  };\n\n  /**\n   * Remove css classes\n   *\n   */\n  const removeClasses = (elmts, ...classes) => {\n    var norm_classes = classesArray(classes);\n    elmts = castAsArray(elmts);\n    elmts.map(el => {\n      norm_classes.map(cls => {\n        el.classList.remove(cls);\n      });\n    });\n  };\n\n  /**\n   * Return arguments\n   *\n   */\n  const classesArray = args => {\n    var classes = [];\n    iterate(args, _classes => {\n      if (typeof _classes === 'string') {\n        _classes = _classes.trim().split(/[\\t\\n\\f\\r\\s]/);\n      }\n      if (Array.isArray(_classes)) {\n        classes = classes.concat(_classes);\n      }\n    });\n    return classes.filter(Boolean);\n  };\n\n  /**\n   * Create an array from arg if it's not already an array\n   *\n   */\n  const castAsArray = arg => {\n    if (!Array.isArray(arg)) {\n      arg = [arg];\n    }\n    return arg;\n  };\n\n  /**\n   * Get the closest node to the evt.target matching the selector\n   * Stops at wrapper\n   *\n   */\n  const parentMatch = (target, selector, wrapper) => {\n    if (wrapper && !wrapper.contains(target)) {\n      return;\n    }\n    while (target && target.matches) {\n      if (target.matches(selector)) {\n        return target;\n      }\n      target = target.parentNode;\n    }\n  };\n\n  /**\n   * Get the first or last item from an array\n   *\n   * > 0 - right (last)\n   * <= 0 - left (first)\n   *\n   */\n  const getTail = (list, direction = 0) => {\n    if (direction > 0) {\n      return list[list.length - 1];\n    }\n    return list[0];\n  };\n\n  /**\n   * Return true if an object is empty\n   *\n   */\n  const isEmptyObject = obj => {\n    return Object.keys(obj).length === 0;\n  };\n\n  /**\n   * Get the index of an element amongst sibling nodes of the same type\n   *\n   */\n  const nodeIndex = (el, amongst) => {\n    if (!el) return -1;\n    amongst = amongst || el.nodeName;\n    var i = 0;\n    while (el = el.previousElementSibling) {\n      if (el.matches(amongst)) {\n        i++;\n      }\n    }\n    return i;\n  };\n\n  /**\n   * Set attributes of an element\n   *\n   */\n  const setAttr = (el, attrs) => {\n    iterate(attrs, (val, attr) => {\n      if (val == null) {\n        el.removeAttribute(attr);\n      } else {\n        el.setAttribute(attr, '' + val);\n      }\n    });\n  };\n\n  /**\n   * Replace a node\n   */\n  const replaceNode = (existing, replacement) => {\n    if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n  };\n\n  /**\n   * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n   * Highlights arbitrary terms in a node.\n   *\n   * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n   * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n   */\n\n  const highlight = (element, regex) => {\n    if (regex === null) return;\n\n    // convet string to regex\n    if (typeof regex === 'string') {\n      if (!regex.length) return;\n      regex = new RegExp(regex, 'i');\n    }\n\n    // Wrap matching part of text node with highlighting <span>, e.g.\n    // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n    const highlightText = node => {\n      var match = node.data.match(regex);\n      if (match && node.data.length > 0) {\n        var spannode = document.createElement('span');\n        spannode.className = 'highlight';\n        var middlebit = node.splitText(match.index);\n        middlebit.splitText(match[0].length);\n        var middleclone = middlebit.cloneNode(true);\n        spannode.appendChild(middleclone);\n        replaceNode(middlebit, spannode);\n        return 1;\n      }\n      return 0;\n    };\n\n    // Recurse element node, looking for child text nodes to highlight, unless element\n    // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n    const highlightChildren = node => {\n      if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n        Array.from(node.childNodes).forEach(element => {\n          highlightRecursive(element);\n        });\n      }\n    };\n    const highlightRecursive = node => {\n      if (node.nodeType === 3) {\n        return highlightText(node);\n      }\n      highlightChildren(node);\n      return 0;\n    };\n    highlightRecursive(element);\n  };\n\n  /**\n   * removeHighlight fn copied from highlight v5 and\n   * edited to remove with(), pass js strict mode, and use without jquery\n   */\n  const removeHighlight = el => {\n    var elements = el.querySelectorAll(\"span.highlight\");\n    Array.prototype.forEach.call(elements, function (el) {\n      var parent = el.parentNode;\n      parent.replaceChild(el.firstChild, el);\n      parent.normalize();\n    });\n  };\n  const KEY_A = 65;\n  const KEY_RETURN = 13;\n  const KEY_ESC = 27;\n  const KEY_LEFT = 37;\n  const KEY_UP = 38;\n  const KEY_RIGHT = 39;\n  const KEY_DOWN = 40;\n  const KEY_BACKSPACE = 8;\n  const KEY_DELETE = 46;\n  const KEY_TAB = 9;\n  const IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n  const KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n  var defaults = {\n    options: [],\n    optgroups: [],\n    plugins: [],\n    delimiter: ',',\n    splitOn: null,\n    // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: null,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    shouldOpen: null,\n    maxOptions: 50,\n    maxItems: null,\n    hideSelected: null,\n    duplicates: false,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: null,\n    allowEmptyOption: false,\n    //closeAfterSelect: false,\n    refreshThrottle: 300,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n    dataAttr: null,\n    //'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    disabledField: 'disabled',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n    mode: null,\n    wrapperClass: 'ts-wrapper',\n    controlClass: 'ts-control',\n    dropdownClass: 'ts-dropdown',\n    dropdownContentClass: 'ts-dropdown-content',\n    itemClass: 'item',\n    optionClass: 'option',\n    dropdownParent: null,\n    controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n    copyClassesToDropdown: false,\n    placeholder: null,\n    hidePlaceholder: null,\n    shouldLoad: function (query) {\n      return query.length > 0;\n    },\n    /*\n    load                 : null, // function(query, callback) { ... }\n    score                : null, // function(search) { ... }\n    onInitialize         : null, // function() { ... }\n    onChange             : null, // function(value) { ... }\n    onItemAdd            : null, // function(value, $item) { ... }\n    onItemRemove         : null, // function(value) { ... }\n    onClear              : null, // function() { ... }\n    onOptionAdd          : null, // function(value, data) { ... }\n    onOptionRemove       : null, // function(value) { ... }\n    onOptionClear        : null, // function() { ... }\n    onOptionGroupAdd     : null, // function(id, data) { ... }\n    onOptionGroupRemove  : null, // function(id) { ... }\n    onOptionGroupClear   : null, // function() { ... }\n    onDropdownOpen       : null, // function(dropdown) { ... }\n    onDropdownClose      : null, // function(dropdown) { ... }\n    onType               : null, // function(str) { ... }\n    onDelete             : null, // function(values) { ... }\n    */\n\n    render: {\n      /*\n      item: null,\n      optgroup: null,\n      optgroup_header: null,\n      option: null,\n      option_create: null\n      */\n    }\n  };\n  function getSettings(input, settings_user) {\n    var settings = Object.assign({}, defaults, settings_user);\n    var attr_data = settings.dataAttr;\n    var field_label = settings.labelField;\n    var field_value = settings.valueField;\n    var field_disabled = settings.disabledField;\n    var field_optgroup = settings.optgroupField;\n    var field_optgroup_label = settings.optgroupLabelField;\n    var field_optgroup_value = settings.optgroupValueField;\n    var tag_name = input.tagName.toLowerCase();\n    var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n    if (!placeholder && !settings.allowEmptyOption) {\n      let option = input.querySelector('option[value=\"\"]');\n      if (option) {\n        placeholder = option.textContent;\n      }\n    }\n    var settings_element = {\n      placeholder: placeholder,\n      options: [],\n      optgroups: [],\n      items: [],\n      maxItems: null\n    };\n\n    /**\n     * Initialize from a <select> element.\n     *\n     */\n    var init_select = () => {\n      var tagName;\n      var options = settings_element.options;\n      var optionsMap = {};\n      var group_count = 1;\n      let $order = 0;\n      var readData = el => {\n        var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n        var json = attr_data && data[attr_data];\n        if (typeof json === 'string' && json.length) {\n          data = Object.assign(data, JSON.parse(json));\n        }\n        return data;\n      };\n      var addOption = (option, group) => {\n        var value = hash_key(option.value);\n        if (value == null) return;\n        if (!value && !settings.allowEmptyOption) return;\n\n        // if the option already exists, it's probably been\n        // duplicated in another optgroup. in this case, push\n        // the current group to the \"optgroup\" property on the\n        // existing option so that it's rendered in both places.\n        if (optionsMap.hasOwnProperty(value)) {\n          if (group) {\n            var arr = optionsMap[value][field_optgroup];\n            if (!arr) {\n              optionsMap[value][field_optgroup] = group;\n            } else if (!Array.isArray(arr)) {\n              optionsMap[value][field_optgroup] = [arr, group];\n            } else {\n              arr.push(group);\n            }\n          }\n        } else {\n          var option_data = readData(option);\n          option_data[field_label] = option_data[field_label] || option.textContent;\n          option_data[field_value] = option_data[field_value] || value;\n          option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n          option_data[field_optgroup] = option_data[field_optgroup] || group;\n          option_data.$option = option;\n          option_data.$order = option_data.$order || ++$order;\n          optionsMap[value] = option_data;\n          options.push(option_data);\n        }\n        if (option.selected) {\n          settings_element.items.push(value);\n        }\n      };\n      var addGroup = optgroup => {\n        var id, optgroup_data;\n        optgroup_data = readData(optgroup);\n        optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n        optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n        optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n        optgroup_data.$order = optgroup_data.$order || ++$order;\n        settings_element.optgroups.push(optgroup_data);\n        id = optgroup_data[field_optgroup_value];\n        iterate(optgroup.children, option => {\n          addOption(option, id);\n        });\n      };\n      settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n      iterate(input.children, child => {\n        tagName = child.tagName.toLowerCase();\n        if (tagName === 'optgroup') {\n          addGroup(child);\n        } else if (tagName === 'option') {\n          addOption(child);\n        }\n      });\n    };\n\n    /**\n     * Initialize from a <input type=\"text\"> element.\n     *\n     */\n    var init_textbox = () => {\n      const data_raw = input.getAttribute(attr_data);\n      if (!data_raw) {\n        var value = input.value.trim() || '';\n        if (!settings.allowEmptyOption && !value.length) return;\n        const values = value.split(settings.delimiter);\n        iterate(values, value => {\n          const option = {};\n          option[field_label] = value;\n          option[field_value] = value;\n          settings_element.options.push(option);\n        });\n        settings_element.items = values;\n      } else {\n        settings_element.options = JSON.parse(data_raw);\n        iterate(settings_element.options, opt => {\n          settings_element.items.push(opt[field_value]);\n        });\n      }\n    };\n    if (tag_name === 'select') {\n      init_select();\n    } else {\n      init_textbox();\n    }\n    return Object.assign({}, defaults, settings_element, settings_user);\n  }\n  var instance_i = 0;\n  class TomSelect extends MicroPlugin(MicroEvent) {\n    constructor(input_arg, user_settings) {\n      super();\n      this.order = 0;\n      this.isOpen = false;\n      this.isDisabled = false;\n      this.isReadOnly = false;\n      this.isInvalid = false;\n      // @deprecated 1.8\n      this.isValid = true;\n      this.isLocked = false;\n      this.isFocused = false;\n      this.isInputHidden = false;\n      this.isSetup = false;\n      this.ignoreFocus = false;\n      this.ignoreHover = false;\n      this.hasOptions = false;\n      this.lastValue = '';\n      this.caretPos = 0;\n      this.loading = 0;\n      this.loadedSearches = {};\n      this.activeOption = null;\n      this.activeItems = [];\n      this.optgroups = {};\n      this.options = {};\n      this.userOptions = {};\n      this.items = [];\n      this.refreshTimeout = null;\n      instance_i++;\n      var dir;\n      var input = getDom(input_arg);\n      if (input.tomselect) {\n        throw new Error('Tom Select already initialized on this element');\n      }\n      input.tomselect = this;\n\n      // detect rtl environment\n      var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n      dir = computedStyle.getPropertyValue('direction');\n\n      // setup default state\n      const settings = getSettings(input, user_settings);\n      this.settings = settings;\n      this.input = input;\n      this.tabIndex = input.tabIndex || 0;\n      this.is_select_tag = input.tagName.toLowerCase() === 'select';\n      this.rtl = /rtl/i.test(dir);\n      this.inputId = getId(input, 'tomselect-' + instance_i);\n      this.isRequired = input.required;\n\n      // search system\n      this.sifter = new Sifter(this.options, {\n        diacritics: settings.diacritics\n      });\n\n      // option-dependent defaults\n      settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n      if (typeof settings.hideSelected !== 'boolean') {\n        settings.hideSelected = settings.mode === 'multi';\n      }\n      if (typeof settings.hidePlaceholder !== 'boolean') {\n        settings.hidePlaceholder = settings.mode !== 'multi';\n      }\n\n      // set up createFilter callback\n      var filter = settings.createFilter;\n      if (typeof filter !== 'function') {\n        if (typeof filter === 'string') {\n          filter = new RegExp(filter);\n        }\n        if (filter instanceof RegExp) {\n          settings.createFilter = input => filter.test(input);\n        } else {\n          settings.createFilter = value => {\n            return this.settings.duplicates || !this.options[value];\n          };\n        }\n      }\n      this.initializePlugins(settings.plugins);\n      this.setupCallbacks();\n      this.setupTemplates();\n\n      // Create all elements\n      const wrapper = getDom('<div>');\n      const control = getDom('<div>');\n      const dropdown = this._render('dropdown');\n      const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n      const classes = this.input.getAttribute('class') || '';\n      const inputMode = settings.mode;\n      var control_input;\n      addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n      addClasses(control, settings.controlClass);\n      append(wrapper, control);\n      addClasses(dropdown, settings.dropdownClass, inputMode);\n      if (settings.copyClassesToDropdown) {\n        addClasses(dropdown, classes);\n      }\n      addClasses(dropdown_content, settings.dropdownContentClass);\n      append(dropdown, dropdown_content);\n      getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n      // default controlInput\n      if (isHtmlString(settings.controlInput)) {\n        control_input = getDom(settings.controlInput);\n\n        // set attributes\n        var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n        iterate(attrs, attr => {\n          if (input.getAttribute(attr)) {\n            setAttr(control_input, {\n              [attr]: input.getAttribute(attr)\n            });\n          }\n        });\n        control_input.tabIndex = -1;\n        control.appendChild(control_input);\n        this.focus_node = control_input;\n\n        // dom element\n      } else if (settings.controlInput) {\n        control_input = getDom(settings.controlInput);\n        this.focus_node = control_input;\n      } else {\n        control_input = getDom('<input/>');\n        this.focus_node = control;\n      }\n      this.wrapper = wrapper;\n      this.dropdown = dropdown;\n      this.dropdown_content = dropdown_content;\n      this.control = control;\n      this.control_input = control_input;\n      this.setup();\n    }\n\n    /**\n     * set up event bindings.\n     *\n     */\n    setup() {\n      const self = this;\n      const settings = self.settings;\n      const control_input = self.control_input;\n      const dropdown = self.dropdown;\n      const dropdown_content = self.dropdown_content;\n      const wrapper = self.wrapper;\n      const control = self.control;\n      const input = self.input;\n      const focus_node = self.focus_node;\n      const passive_event = {\n        passive: true\n      };\n      const listboxId = self.inputId + '-ts-dropdown';\n      setAttr(dropdown_content, {\n        id: listboxId\n      });\n      setAttr(focus_node, {\n        role: 'combobox',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': 'false',\n        'aria-controls': listboxId\n      });\n      const control_id = getId(focus_node, self.inputId + '-ts-control');\n      const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n      const label = document.querySelector(query);\n      const label_click = self.focus.bind(self);\n      if (label) {\n        addEvent(label, 'click', label_click);\n        setAttr(label, {\n          for: control_id\n        });\n        const label_id = getId(label, self.inputId + '-ts-label');\n        setAttr(focus_node, {\n          'aria-labelledby': label_id\n        });\n        setAttr(dropdown_content, {\n          'aria-labelledby': label_id\n        });\n      }\n      wrapper.style.width = input.style.width;\n      if (self.plugins.names.length) {\n        const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n        addClasses([wrapper, dropdown], classes_plugins);\n      }\n      if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n        setAttr(input, {\n          multiple: 'multiple'\n        });\n      }\n      if (settings.placeholder) {\n        setAttr(control_input, {\n          placeholder: settings.placeholder\n        });\n      }\n\n      // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n      if (!settings.splitOn && settings.delimiter) {\n        settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n      }\n\n      // debounce user defined load() if loadThrottle > 0\n      // after initializePlugins() so plugins can create/modify user defined loaders\n      if (settings.load && settings.loadThrottle) {\n        settings.load = loadDebounce(settings.load, settings.loadThrottle);\n      }\n      addEvent(dropdown, 'mousemove', () => {\n        self.ignoreHover = false;\n      });\n      addEvent(dropdown, 'mouseenter', e => {\n        var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n        if (target_match) self.onOptionHover(e, target_match);\n      }, {\n        capture: true\n      });\n\n      // clicking on an option should select it\n      addEvent(dropdown, 'click', evt => {\n        const option = parentMatch(evt.target, '[data-selectable]');\n        if (option) {\n          self.onOptionSelect(evt, option);\n          preventDefault(evt, true);\n        }\n      });\n      addEvent(control, 'click', evt => {\n        var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n        if (target_match && self.onItemSelect(evt, target_match)) {\n          preventDefault(evt, true);\n          return;\n        }\n\n        // retain focus (see control_input mousedown)\n        if (control_input.value != '') {\n          return;\n        }\n        self.onClick();\n        preventDefault(evt, true);\n      });\n\n      // keydown on focus_node for arrow_down/arrow_up\n      addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n      // keypress and input/keyup\n      addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n      addEvent(control_input, 'input', e => self.onInput(e));\n      addEvent(focus_node, 'blur', e => self.onBlur(e));\n      addEvent(focus_node, 'focus', e => self.onFocus(e));\n      addEvent(control_input, 'paste', e => self.onPaste(e));\n      const doc_mousedown = evt => {\n        // blur if target is outside of this instance\n        // dropdown is not always inside wrapper\n        const target = evt.composedPath()[0];\n        if (!wrapper.contains(target) && !dropdown.contains(target)) {\n          if (self.isFocused) {\n            self.blur();\n          }\n          self.inputState();\n          return;\n        }\n\n        // retain focus by preventing native handling. if the\n        // event target is the input it should not be modified.\n        // otherwise, text selection within the input won't work.\n        // Fixes bug #212 which is no covered by tests\n        if (target == control_input && self.isOpen) {\n          evt.stopPropagation();\n\n          // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n        } else {\n          preventDefault(evt, true);\n        }\n      };\n      const win_scroll = () => {\n        if (self.isOpen) {\n          self.positionDropdown();\n        }\n      };\n      addEvent(document, 'mousedown', doc_mousedown);\n      addEvent(window, 'scroll', win_scroll, passive_event);\n      addEvent(window, 'resize', win_scroll, passive_event);\n      this._destroy = () => {\n        document.removeEventListener('mousedown', doc_mousedown);\n        window.removeEventListener('scroll', win_scroll);\n        window.removeEventListener('resize', win_scroll);\n        if (label) label.removeEventListener('click', label_click);\n      };\n\n      // store original html and tab index so that they can be\n      // restored when the destroy() method is called.\n      this.revertSettings = {\n        innerHTML: input.innerHTML,\n        tabIndex: input.tabIndex\n      };\n      input.tabIndex = -1;\n      input.insertAdjacentElement('afterend', self.wrapper);\n      self.sync(false);\n      settings.items = [];\n      delete settings.optgroups;\n      delete settings.options;\n      addEvent(input, 'invalid', () => {\n        if (self.isValid) {\n          self.isValid = false;\n          self.isInvalid = true;\n          self.refreshState();\n        }\n      });\n      self.updateOriginalInput();\n      self.refreshItems();\n      self.close(false);\n      self.inputState();\n      self.isSetup = true;\n      if (input.disabled) {\n        self.disable();\n      } else if (input.readOnly) {\n        self.setReadOnly(true);\n      } else {\n        self.enable(); //sets tabIndex\n      }\n      self.on('change', this.onChange);\n      addClasses(input, 'tomselected', 'ts-hidden-accessible');\n      self.trigger('initialize');\n\n      // preload options\n      if (settings.preload === true) {\n        self.preload();\n      }\n    }\n\n    /**\n     * Register options and optgroups\n     *\n     */\n    setupOptions(options = [], optgroups = []) {\n      // build options table\n      this.addOptions(options);\n\n      // build optgroup table\n      iterate(optgroups, optgroup => {\n        this.registerOptionGroup(optgroup);\n      });\n    }\n\n    /**\n     * Sets up default rendering functions.\n     */\n    setupTemplates() {\n      var self = this;\n      var field_label = self.settings.labelField;\n      var field_optgroup = self.settings.optgroupLabelField;\n      var templates = {\n        'optgroup': data => {\n          let optgroup = document.createElement('div');\n          optgroup.className = 'optgroup';\n          optgroup.appendChild(data.options);\n          return optgroup;\n        },\n        'optgroup_header': (data, escape) => {\n          return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n        },\n        'option': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'item': (data, escape) => {\n          return '<div>' + escape(data[field_label]) + '</div>';\n        },\n        'option_create': (data, escape) => {\n          return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n        },\n        'no_results': () => {\n          return '<div class=\"no-results\">No results found</div>';\n        },\n        'loading': () => {\n          return '<div class=\"spinner\"></div>';\n        },\n        'not_loading': () => {},\n        'dropdown': () => {\n          return '<div></div>';\n        }\n      };\n      self.settings.render = Object.assign({}, templates, self.settings.render);\n    }\n\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n    setupCallbacks() {\n      var key, fn;\n      var callbacks = {\n        'initialize': 'onInitialize',\n        'change': 'onChange',\n        'item_add': 'onItemAdd',\n        'item_remove': 'onItemRemove',\n        'item_select': 'onItemSelect',\n        'clear': 'onClear',\n        'option_add': 'onOptionAdd',\n        'option_remove': 'onOptionRemove',\n        'option_clear': 'onOptionClear',\n        'optgroup_add': 'onOptionGroupAdd',\n        'optgroup_remove': 'onOptionGroupRemove',\n        'optgroup_clear': 'onOptionGroupClear',\n        'dropdown_open': 'onDropdownOpen',\n        'dropdown_close': 'onDropdownClose',\n        'type': 'onType',\n        'load': 'onLoad',\n        'focus': 'onFocus',\n        'blur': 'onBlur'\n      };\n      for (key in callbacks) {\n        fn = this.settings[callbacks[key]];\n        if (fn) this.on(key, fn);\n      }\n    }\n\n    /**\n     * Sync the Tom Select instance with the original input or select\n     *\n     */\n    sync(get_settings = true) {\n      const self = this;\n      const settings = get_settings ? getSettings(self.input, {\n        delimiter: self.settings.delimiter\n      }) : self.settings;\n      self.setupOptions(settings.options, settings.optgroups);\n      self.setValue(settings.items || [], true); // silent prevents recursion\n\n      self.lastQuery = null; // so updated options will be displayed in dropdown\n    }\n\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     */\n    onClick() {\n      var self = this;\n      if (self.activeItems.length > 0) {\n        self.clearActiveItems();\n        self.focus();\n        return;\n      }\n      if (self.isFocused && self.isOpen) {\n        self.blur();\n      } else {\n        self.focus();\n      }\n    }\n\n    /**\n     * @deprecated v1.7\n     *\n     */\n    onMouseDown() {}\n\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n    onChange() {\n      triggerEvent(this.input, 'input');\n      triggerEvent(this.input, 'change');\n    }\n\n    /**\n     * Triggered on <input> paste.\n     *\n     */\n    onPaste(e) {\n      var self = this;\n      if (self.isInputHidden || self.isLocked) {\n        preventDefault(e);\n        return;\n      }\n\n      // If a regex or string is included, this will split the pasted\n      // input and create Items for each separate value\n      if (!self.settings.splitOn) {\n        return;\n      }\n\n      // Wait for pasted text to be recognized in value\n      setTimeout(() => {\n        var pastedText = self.inputValue();\n        if (!pastedText.match(self.settings.splitOn)) {\n          return;\n        }\n        var splitInput = pastedText.trim().split(self.settings.splitOn);\n        iterate(splitInput, piece => {\n          const hash = hash_key(piece);\n          if (hash) {\n            if (this.options[piece]) {\n              self.addItem(piece);\n            } else {\n              self.createItem(piece);\n            }\n          }\n        });\n      }, 0);\n    }\n\n    /**\n     * Triggered on <input> keypress.\n     *\n     */\n    onKeyPress(e) {\n      var self = this;\n      if (self.isLocked) {\n        preventDefault(e);\n        return;\n      }\n      var character = String.fromCharCode(e.keyCode || e.which);\n      if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n        self.createItem();\n        preventDefault(e);\n        return;\n      }\n    }\n\n    /**\n     * Triggered on <input> keydown.\n     *\n     */\n    onKeyDown(e) {\n      var self = this;\n      self.ignoreHover = true;\n      if (self.isLocked) {\n        if (e.keyCode !== KEY_TAB) {\n          preventDefault(e);\n        }\n        return;\n      }\n      switch (e.keyCode) {\n        // ctrl+A: select all\n        case KEY_A:\n          if (isKeyDown(KEY_SHORTCUT, e)) {\n            if (self.control_input.value == '') {\n              preventDefault(e);\n              self.selectAll();\n              return;\n            }\n          }\n          break;\n\n        // esc: close dropdown\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(e, true);\n            self.close();\n          }\n          self.clearActiveItems();\n          return;\n\n        // down: open dropdown or move selection down\n        case KEY_DOWN:\n          if (!self.isOpen && self.hasOptions) {\n            self.open();\n          } else if (self.activeOption) {\n            let next = self.getAdjacent(self.activeOption, 1);\n            if (next) self.setActiveOption(next);\n          }\n          preventDefault(e);\n          return;\n\n        // up: move selection up\n        case KEY_UP:\n          if (self.activeOption) {\n            let prev = self.getAdjacent(self.activeOption, -1);\n            if (prev) self.setActiveOption(prev);\n          }\n          preventDefault(e);\n          return;\n\n        // return: select active option\n        case KEY_RETURN:\n          if (self.canSelect(self.activeOption)) {\n            self.onOptionSelect(e, self.activeOption);\n            preventDefault(e);\n\n            // if the option_create=null, the dropdown might be closed\n          } else if (self.settings.create && self.createItem()) {\n            preventDefault(e);\n\n            // don't submit form when searching for a value\n          } else if (document.activeElement == self.control_input && self.isOpen) {\n            preventDefault(e);\n          }\n          return;\n\n        // left: modifiy item selection to the left\n        case KEY_LEFT:\n          self.advanceSelection(-1, e);\n          return;\n\n        // right: modifiy item selection to the right\n        case KEY_RIGHT:\n          self.advanceSelection(1, e);\n          return;\n\n        // tab: select active option and/or create item\n        case KEY_TAB:\n          if (self.settings.selectOnTab) {\n            if (self.canSelect(self.activeOption)) {\n              self.onOptionSelect(e, self.activeOption);\n\n              // prevent default [tab] behaviour of jump to the next field\n              // if select isFull, then the dropdown won't be open and [tab] will work normally\n              preventDefault(e);\n            }\n            if (self.settings.create && self.createItem()) {\n              preventDefault(e);\n            }\n          }\n          return;\n\n        // delete|backspace: delete items\n        case KEY_BACKSPACE:\n        case KEY_DELETE:\n          self.deleteSelection(e);\n          return;\n      }\n\n      // don't enter text in the control_input when active items are selected\n      if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n        preventDefault(e);\n      }\n    }\n\n    /**\n     * Triggered on <input> keyup.\n     *\n     */\n    onInput(e) {\n      if (this.isLocked) {\n        return;\n      }\n      const value = this.inputValue();\n      if (this.lastValue === value) return;\n      this.lastValue = value;\n      if (value == '') {\n        this._onInput();\n        return;\n      }\n      if (this.refreshTimeout) {\n        window.clearTimeout(this.refreshTimeout);\n      }\n      this.refreshTimeout = timeout(() => {\n        this.refreshTimeout = null;\n        this._onInput();\n      }, this.settings.refreshThrottle);\n    }\n    _onInput() {\n      const value = this.lastValue;\n      if (this.settings.shouldLoad.call(this, value)) {\n        this.load(value);\n      }\n      this.refreshOptions();\n      this.trigger('type', value);\n    }\n\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     */\n    onOptionHover(evt, option) {\n      if (this.ignoreHover) return;\n      this.setActiveOption(option, false);\n    }\n\n    /**\n     * Triggered on <input> focus.\n     *\n     */\n    onFocus(e) {\n      var self = this;\n      var wasFocused = self.isFocused;\n      if (self.isDisabled || self.isReadOnly) {\n        self.blur();\n        preventDefault(e);\n        return;\n      }\n      if (self.ignoreFocus) return;\n      self.isFocused = true;\n      if (self.settings.preload === 'focus') self.preload();\n      if (!wasFocused) self.trigger('focus');\n      if (!self.activeItems.length) {\n        self.inputState();\n        self.refreshOptions(!!self.settings.openOnFocus);\n      }\n      self.refreshState();\n    }\n\n    /**\n     * Triggered on <input> blur.\n     *\n     */\n    onBlur(e) {\n      if (document.hasFocus() === false) return;\n      var self = this;\n      if (!self.isFocused) return;\n      self.isFocused = false;\n      self.ignoreFocus = false;\n      var deactivate = () => {\n        self.close();\n        self.setActiveItem();\n        self.setCaret(self.items.length);\n        self.trigger('blur');\n      };\n      if (self.settings.create && self.settings.createOnBlur) {\n        self.createItem(null, deactivate);\n      } else {\n        deactivate();\n      }\n    }\n\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     */\n    onOptionSelect(evt, option) {\n      var value,\n        self = this;\n\n      // should not be possible to trigger a option under a disabled optgroup\n      if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n        return;\n      }\n      if (option.classList.contains('create')) {\n        self.createItem(null, () => {\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n        });\n      } else {\n        value = option.dataset.value;\n        if (typeof value !== 'undefined') {\n          self.lastQuery = null;\n          self.addItem(value);\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n          if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n            self.setActiveOption(option);\n          }\n        }\n      }\n    }\n\n    /**\n     * Return true if the given option can be selected\n     *\n     */\n    canSelect(option) {\n      if (this.isOpen && option && this.dropdown_content.contains(option)) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     */\n    onItemSelect(evt, item) {\n      var self = this;\n      if (!self.isLocked && self.settings.mode === 'multi') {\n        preventDefault(evt);\n        self.setActiveItem(item, evt);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Determines whether or not to invoke\n     * the user-provided option provider / loader\n     *\n     * Note, there is a subtle difference between\n     * this.canLoad() and this.settings.shouldLoad();\n     *\n     *\t- settings.shouldLoad() is a user-input validator.\n     *\tWhen false is returned, the not_loading template\n     *\twill be added to the dropdown\n     *\n     *\t- canLoad() is lower level validator that checks\n     * \tthe Tom Select instance. There is no inherent user\n     *\tfeedback when canLoad returns false\n     *\n     */\n    canLoad(value) {\n      if (!this.settings.load) return false;\n      if (this.loadedSearches.hasOwnProperty(value)) return false;\n      return true;\n    }\n\n    /**\n     * Invokes the user-provided option provider / loader.\n     *\n     */\n    load(value) {\n      const self = this;\n      if (!self.canLoad(value)) return;\n      addClasses(self.wrapper, self.settings.loadingClass);\n      self.loading++;\n      const callback = self.loadCallback.bind(self);\n      self.settings.load.call(self, value, callback);\n    }\n\n    /**\n     * Invoked by the user-provided option provider\n     *\n     */\n    loadCallback(options, optgroups) {\n      const self = this;\n      self.loading = Math.max(self.loading - 1, 0);\n      self.lastQuery = null;\n      self.clearActiveOption(); // when new results load, focus should be on first option\n      self.setupOptions(options, optgroups);\n      self.refreshOptions(self.isFocused && !self.isInputHidden);\n      if (!self.loading) {\n        removeClasses(self.wrapper, self.settings.loadingClass);\n      }\n      self.trigger('load', options, optgroups);\n    }\n    preload() {\n      var classList = this.wrapper.classList;\n      if (classList.contains('preloaded')) return;\n      classList.add('preloaded');\n      this.load('');\n    }\n\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     */\n    setTextboxValue(value = '') {\n      var input = this.control_input;\n      var changed = input.value !== value;\n      if (changed) {\n        input.value = value;\n        triggerEvent(input, 'update');\n        this.lastValue = value;\n      }\n    }\n\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     */\n    getValue() {\n      if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n        return this.items;\n      }\n      return this.items.join(this.settings.delimiter);\n    }\n\n    /**\n     * Resets the selected items to the given value.\n     *\n     */\n    setValue(value, silent) {\n      var events = silent ? [] : ['change'];\n      debounce_events(this, events, () => {\n        this.clear(silent);\n        this.addItems(value, silent);\n      });\n    }\n\n    /**\n     * Resets the number of max items to the given value\n     *\n     */\n    setMaxItems(value) {\n      if (value === 0) value = null; //reset to unlimited items.\n      this.settings.maxItems = value;\n      this.refreshState();\n    }\n\n    /**\n     * Sets the selected item.\n     *\n     */\n    setActiveItem(item, e) {\n      var self = this;\n      var eventName;\n      var i, begin, end, swap;\n      var last;\n      if (self.settings.mode === 'single') return;\n\n      // clear the active selection\n      if (!item) {\n        self.clearActiveItems();\n        if (self.isFocused) {\n          self.inputState();\n        }\n        return;\n      }\n\n      // modify selection\n      eventName = e && e.type.toLowerCase();\n      if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n        last = self.getLastActive();\n        begin = Array.prototype.indexOf.call(self.control.children, last);\n        end = Array.prototype.indexOf.call(self.control.children, item);\n        if (begin > end) {\n          swap = begin;\n          begin = end;\n          end = swap;\n        }\n        for (i = begin; i <= end; i++) {\n          item = self.control.children[i];\n          if (self.activeItems.indexOf(item) === -1) {\n            self.setActiveItemClass(item);\n          }\n        }\n        preventDefault(e);\n      } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n        if (item.classList.contains('active')) {\n          self.removeActiveItem(item);\n        } else {\n          self.setActiveItemClass(item);\n        }\n      } else {\n        self.clearActiveItems();\n        self.setActiveItemClass(item);\n      }\n\n      // ensure control has focus\n      self.inputState();\n      if (!self.isFocused) {\n        self.focus();\n      }\n    }\n\n    /**\n     * Set the active and last-active classes\n     *\n     */\n    setActiveItemClass(item) {\n      const self = this;\n      const last_active = self.control.querySelector('.last-active');\n      if (last_active) removeClasses(last_active, 'last-active');\n      addClasses(item, 'active last-active');\n      self.trigger('item_select', item);\n      if (self.activeItems.indexOf(item) == -1) {\n        self.activeItems.push(item);\n      }\n    }\n\n    /**\n     * Remove active item\n     *\n     */\n    removeActiveItem(item) {\n      var idx = this.activeItems.indexOf(item);\n      this.activeItems.splice(idx, 1);\n      removeClasses(item, 'active');\n    }\n\n    /**\n     * Clears all the active items\n     *\n     */\n    clearActiveItems() {\n      removeClasses(this.activeItems, 'active');\n      this.activeItems = [];\n    }\n\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     */\n    setActiveOption(option, scroll = true) {\n      if (option === this.activeOption) {\n        return;\n      }\n      this.clearActiveOption();\n      if (!option) return;\n      this.activeOption = option;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': option.getAttribute('id')\n      });\n      setAttr(option, {\n        'aria-selected': 'true'\n      });\n      addClasses(option, 'active');\n      if (scroll) this.scrollToOption(option);\n    }\n\n    /**\n     * Sets the dropdown_content scrollTop to display the option\n     *\n     */\n    scrollToOption(option, behavior) {\n      if (!option) return;\n      const content = this.dropdown_content;\n      const height_menu = content.clientHeight;\n      const scrollTop = content.scrollTop || 0;\n      const height_item = option.offsetHeight;\n      const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n      if (y + height_item > height_menu + scrollTop) {\n        this.scroll(y - height_menu + height_item, behavior);\n      } else if (y < scrollTop) {\n        this.scroll(y, behavior);\n      }\n    }\n\n    /**\n     * Scroll the dropdown to the given position\n     *\n     */\n    scroll(scrollTop, behavior) {\n      const content = this.dropdown_content;\n      if (behavior) {\n        content.style.scrollBehavior = behavior;\n      }\n      content.scrollTop = scrollTop;\n      content.style.scrollBehavior = '';\n    }\n\n    /**\n     * Clears the active option\n     *\n     */\n    clearActiveOption() {\n      if (this.activeOption) {\n        removeClasses(this.activeOption, 'active');\n        setAttr(this.activeOption, {\n          'aria-selected': null\n        });\n      }\n      this.activeOption = null;\n      setAttr(this.focus_node, {\n        'aria-activedescendant': null\n      });\n    }\n\n    /**\n     * Selects all items (CTRL + A).\n     */\n    selectAll() {\n      const self = this;\n      if (self.settings.mode === 'single') return;\n      const activeItems = self.controlChildren();\n      if (!activeItems.length) return;\n      self.inputState();\n      self.close();\n      self.activeItems = activeItems;\n      iterate(activeItems, item => {\n        self.setActiveItemClass(item);\n      });\n    }\n\n    /**\n     * Determines if the control_input should be in a hidden or visible state\n     *\n     */\n    inputState() {\n      var self = this;\n      if (!self.control.contains(self.control_input)) return;\n      setAttr(self.control_input, {\n        placeholder: self.settings.placeholder\n      });\n      if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n        self.setTextboxValue();\n        self.isInputHidden = true;\n      } else {\n        if (self.settings.hidePlaceholder && self.items.length > 0) {\n          setAttr(self.control_input, {\n            placeholder: ''\n          });\n        }\n        self.isInputHidden = false;\n      }\n      self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n    }\n\n    /**\n     * Get the input value\n     */\n    inputValue() {\n      return this.control_input.value.trim();\n    }\n\n    /**\n     * Gives the control focus.\n     */\n    focus() {\n      var self = this;\n      if (self.isDisabled || self.isReadOnly) return;\n      self.ignoreFocus = true;\n      if (self.control_input.offsetWidth) {\n        self.control_input.focus();\n      } else {\n        self.focus_node.focus();\n      }\n      setTimeout(() => {\n        self.ignoreFocus = false;\n        self.onFocus();\n      }, 0);\n    }\n\n    /**\n     * Forces the control out of focus.\n     *\n     */\n    blur() {\n      this.focus_node.blur();\n      this.onBlur();\n    }\n\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @return {function}\n     */\n    getScoreFunction(query) {\n      return this.sifter.getScoreFunction(query, this.getSearchOptions());\n    }\n\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/orchidjs/sifter.js\n     * @return {object}\n     */\n    getSearchOptions() {\n      var settings = this.settings;\n      var sort = settings.sortField;\n      if (typeof settings.sortField === 'string') {\n        sort = [{\n          field: settings.sortField\n        }];\n      }\n      return {\n        fields: settings.searchField,\n        conjunction: settings.searchConjunction,\n        sort: sort,\n        nesting: settings.nesting\n      };\n    }\n\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     */\n    search(query) {\n      var result, calculateScore;\n      var self = this;\n      var options = this.getSearchOptions();\n\n      // validate user-provided result scoring function\n      if (self.settings.score) {\n        calculateScore = self.settings.score.call(self, query);\n        if (typeof calculateScore !== 'function') {\n          throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n        }\n      }\n\n      // perform search\n      if (query !== self.lastQuery) {\n        self.lastQuery = query;\n        result = self.sifter.search(query, Object.assign(options, {\n          score: calculateScore\n        }));\n        self.currentResults = result;\n      } else {\n        result = Object.assign({}, self.currentResults);\n      }\n\n      // filter out selected items\n      if (self.settings.hideSelected) {\n        result.items = result.items.filter(item => {\n          let hashed = hash_key(item.id);\n          return !(hashed && self.items.indexOf(hashed) !== -1);\n        });\n      }\n      return result;\n    }\n\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     */\n    refreshOptions(triggerDropdown = true) {\n      var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n      var create;\n      const groups = {};\n      const groups_order = [];\n      var self = this;\n      var query = self.inputValue();\n      const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n      var results = self.search(query);\n      var active_option = null;\n      var show_dropdown = self.settings.shouldOpen || false;\n      var dropdown_content = self.dropdown_content;\n      if (same_query) {\n        active_option = self.activeOption;\n        if (active_option) {\n          active_group = active_option.closest('[data-group]');\n        }\n      }\n\n      // build markup\n      n = results.items.length;\n      if (typeof self.settings.maxOptions === 'number') {\n        n = Math.min(n, self.settings.maxOptions);\n      }\n      if (n > 0) {\n        show_dropdown = true;\n      }\n\n      // get fragment for group and the position of the group in group_order\n      const getGroupFragment = (optgroup, order) => {\n        let group_order_i = groups[optgroup];\n        if (group_order_i !== undefined) {\n          let order_group = groups_order[group_order_i];\n          if (order_group !== undefined) {\n            return [group_order_i, order_group.fragment];\n          }\n        }\n        let group_fragment = document.createDocumentFragment();\n        group_order_i = groups_order.length;\n        groups_order.push({\n          fragment: group_fragment,\n          order,\n          optgroup\n        });\n        return [group_order_i, group_fragment];\n      };\n\n      // render and group available options individually\n      for (i = 0; i < n; i++) {\n        // get option dom element\n        let item = results.items[i];\n        if (!item) continue;\n        let opt_value = item.id;\n        let option = self.options[opt_value];\n        if (option === undefined) continue;\n        let opt_hash = get_hash(opt_value);\n        let option_el = self.getOption(opt_hash, true);\n\n        // toggle 'selected' class\n        if (!self.settings.hideSelected) {\n          option_el.classList.toggle('selected', self.items.includes(opt_hash));\n        }\n        optgroup = option[self.settings.optgroupField] || '';\n        optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n        for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n          optgroup = optgroups[j];\n          let order = option.$order;\n          let self_optgroup = self.optgroups[optgroup];\n          if (self_optgroup === undefined) {\n            optgroup = '';\n          } else {\n            order = self_optgroup.$order;\n          }\n          const _getGroupFragment = getGroupFragment(optgroup, order),\n            _getGroupFragment2 = _slicedToArray(_getGroupFragment, 2),\n            group_order_i = _getGroupFragment2[0],\n            group_fragment = _getGroupFragment2[1];\n\n          // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n          if (j > 0) {\n            option_el = option_el.cloneNode(true);\n            setAttr(option_el, {\n              id: option.$id + '-clone-' + j,\n              'aria-selected': null\n            });\n            option_el.classList.add('ts-cloned');\n            removeClasses(option_el, 'active');\n\n            // make sure we keep the activeOption in the same group\n            if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n              if (active_group && active_group.dataset.group === optgroup.toString()) {\n                active_option = option_el;\n              }\n            }\n          }\n          group_fragment.appendChild(option_el);\n          if (optgroup != '') {\n            groups[optgroup] = group_order_i;\n          }\n        }\n      }\n\n      // sort optgroups\n      if (self.settings.lockOptgroupOrder) {\n        groups_order.sort((a, b) => {\n          return a.order - b.order;\n        });\n      }\n\n      // render optgroup headers & join groups\n      html = document.createDocumentFragment();\n      iterate(groups_order, group_order => {\n        let group_fragment = group_order.fragment;\n        let optgroup = group_order.optgroup;\n        if (!group_fragment || !group_fragment.children.length) return;\n        let group_heading = self.optgroups[optgroup];\n        if (group_heading !== undefined) {\n          let group_options = document.createDocumentFragment();\n          let header = self.render('optgroup_header', group_heading);\n          append(group_options, header);\n          append(group_options, group_fragment);\n          let group_html = self.render('optgroup', {\n            group: group_heading,\n            options: group_options\n          });\n          append(html, group_html);\n        } else {\n          append(html, group_fragment);\n        }\n      });\n      dropdown_content.innerHTML = '';\n      append(dropdown_content, html);\n\n      // highlight matching terms inline\n      if (self.settings.highlight) {\n        removeHighlight(dropdown_content);\n        if (results.query.length && results.tokens.length) {\n          iterate(results.tokens, tok => {\n            highlight(dropdown_content, tok.regex);\n          });\n        }\n      }\n\n      // helper method for adding templates to dropdown\n      var add_template = template => {\n        let content = self.render(template, {\n          input: query\n        });\n        if (content) {\n          show_dropdown = true;\n          dropdown_content.insertBefore(content, dropdown_content.firstChild);\n        }\n        return content;\n      };\n\n      // add loading message\n      if (self.loading) {\n        add_template('loading');\n\n        // invalid query\n      } else if (!self.settings.shouldLoad.call(self, query)) {\n        add_template('not_loading');\n\n        // add no_results message\n      } else if (results.items.length === 0) {\n        add_template('no_results');\n      }\n\n      // add create option\n      has_create_option = self.canCreate(query);\n      if (has_create_option) {\n        create = add_template('option_create');\n      }\n\n      // activate\n      self.hasOptions = results.items.length > 0 || has_create_option;\n      if (show_dropdown) {\n        if (results.items.length > 0) {\n          if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n            active_option = self.getOption(self.items[0]);\n          }\n          if (!dropdown_content.contains(active_option)) {\n            let active_index = 0;\n            if (create && !self.settings.addPrecedence) {\n              active_index = 1;\n            }\n            active_option = self.selectable()[active_index];\n          }\n        } else if (create) {\n          active_option = create;\n        }\n        if (triggerDropdown && !self.isOpen) {\n          self.open();\n          self.scrollToOption(active_option, 'auto');\n        }\n        self.setActiveOption(active_option);\n      } else {\n        self.clearActiveOption();\n        if (triggerDropdown && self.isOpen) {\n          self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n        }\n      }\n    }\n\n    /**\n     * Return list of selectable options\n     *\n     */\n    selectable() {\n      return this.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     */\n    addOption(data, user_created = false) {\n      const self = this;\n\n      // @deprecated 1.7.7\n      // use addOptions( array, user_created ) for adding multiple options\n      if (Array.isArray(data)) {\n        self.addOptions(data, user_created);\n        return false;\n      }\n      const key = hash_key(data[self.settings.valueField]);\n      if (key === null || self.options.hasOwnProperty(key)) {\n        return false;\n      }\n      data.$order = data.$order || ++self.order;\n      data.$id = self.inputId + '-opt-' + data.$order;\n      self.options[key] = data;\n      self.lastQuery = null;\n      if (user_created) {\n        self.userOptions[key] = user_created;\n        self.trigger('option_add', key, data);\n      }\n      return key;\n    }\n\n    /**\n     * Add multiple options\n     *\n     */\n    addOptions(data, user_created = false) {\n      iterate(data, dat => {\n        this.addOption(dat, user_created);\n      });\n    }\n\n    /**\n     * @deprecated 1.7.7\n     */\n    registerOption(data) {\n      return this.addOption(data);\n    }\n\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @return {boolean|string}\n     */\n    registerOptionGroup(data) {\n      var key = hash_key(data[this.settings.optgroupValueField]);\n      if (key === null) return false;\n      data.$order = data.$order || ++this.order;\n      this.optgroups[key] = data;\n      return key;\n    }\n\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     */\n    addOptionGroup(id, data) {\n      var hashed_id;\n      data[this.settings.optgroupValueField] = id;\n      if (hashed_id = this.registerOptionGroup(data)) {\n        this.trigger('optgroup_add', hashed_id, data);\n      }\n    }\n\n    /**\n     * Removes an existing option group.\n     *\n     */\n    removeOptionGroup(id) {\n      if (this.optgroups.hasOwnProperty(id)) {\n        delete this.optgroups[id];\n        this.clearCache();\n        this.trigger('optgroup_remove', id);\n      }\n    }\n\n    /**\n     * Clears all existing option groups.\n     */\n    clearOptionGroups() {\n      this.optgroups = {};\n      this.clearCache();\n      this.trigger('optgroup_clear');\n    }\n\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     */\n    updateOption(value, data) {\n      const self = this;\n      var item_new;\n      var index_item;\n      const value_old = hash_key(value);\n      const value_new = hash_key(data[self.settings.valueField]);\n\n      // sanity checks\n      if (value_old === null) return;\n      const data_old = self.options[value_old];\n      if (data_old == undefined) return;\n      if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n      const option = self.getOption(value_old);\n      const item = self.getItem(value_old);\n      data.$order = data.$order || data_old.$order;\n      delete self.options[value_old];\n\n      // invalidate render cache\n      // don't remove existing node yet, we'll remove it after replacing it\n      self.uncacheValue(value_new);\n      self.options[value_new] = data;\n\n      // update the option if it's in the dropdown\n      if (option) {\n        if (self.dropdown_content.contains(option)) {\n          const option_new = self._render('option', data);\n          replaceNode(option, option_new);\n          if (self.activeOption === option) {\n            self.setActiveOption(option_new);\n          }\n        }\n        option.remove();\n      }\n\n      // update the item if we have one\n      if (item) {\n        index_item = self.items.indexOf(value_old);\n        if (index_item !== -1) {\n          self.items.splice(index_item, 1, value_new);\n        }\n        item_new = self._render('item', data);\n        if (item.classList.contains('active')) addClasses(item_new, 'active');\n        replaceNode(item, item_new);\n      }\n\n      // invalidate last query because we might have updated the sortField\n      self.lastQuery = null;\n    }\n\n    /**\n     * Removes a single option.\n     *\n     */\n    removeOption(value, silent) {\n      const self = this;\n      value = get_hash(value);\n      self.uncacheValue(value);\n      delete self.userOptions[value];\n      delete self.options[value];\n      self.lastQuery = null;\n      self.trigger('option_remove', value);\n      self.removeItem(value, silent);\n    }\n\n    /**\n     * Clears all options.\n     */\n    clearOptions(filter) {\n      const boundFilter = (filter || this.clearFilter).bind(this);\n      this.loadedSearches = {};\n      this.userOptions = {};\n      this.clearCache();\n      const selected = {};\n      iterate(this.options, (option, key) => {\n        if (boundFilter(option, key)) {\n          selected[key] = option;\n        }\n      });\n      this.options = this.sifter.items = selected;\n      this.lastQuery = null;\n      this.trigger('option_clear');\n    }\n\n    /**\n     * Used by clearOptions() to decide whether or not an option should be removed\n     * Return true to keep an option, false to remove\n     *\n     */\n    clearFilter(option, value) {\n      if (this.items.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the dom element of the option\n     * matching the given value.\n     *\n     */\n    getOption(value, create = false) {\n      const hashed = hash_key(value);\n      if (hashed === null) return null;\n      const option = this.options[hashed];\n      if (option != undefined) {\n        if (option.$div) {\n          return option.$div;\n        }\n        if (create) {\n          return this._render('option', option);\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Returns the dom element of the next or previous dom element of the same type\n     * Note: adjacent options may not be adjacent DOM elements (optgroups)\n     *\n     */\n    getAdjacent(option, direction, type = 'option') {\n      var self = this,\n        all;\n      if (!option) {\n        return null;\n      }\n      if (type == 'item') {\n        all = self.controlChildren();\n      } else {\n        all = self.dropdown_content.querySelectorAll('[data-selectable]');\n      }\n      for (let i = 0; i < all.length; i++) {\n        if (all[i] != option) {\n          continue;\n        }\n        if (direction > 0) {\n          return all[i + 1];\n        }\n        return all[i - 1];\n      }\n      return null;\n    }\n\n    /**\n     * Returns the dom element of the item\n     * matching the given value.\n     *\n     */\n    getItem(item) {\n      if (typeof item == 'object') {\n        return item;\n      }\n      var value = hash_key(item);\n      return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n    }\n\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     */\n    addItems(values, silent) {\n      var self = this;\n      var items = Array.isArray(values) ? values : [values];\n      items = items.filter(x => self.items.indexOf(x) === -1);\n      const last_item = items[items.length - 1];\n      items.forEach(item => {\n        self.isPending = item !== last_item;\n        self.addItem(item, silent);\n      });\n    }\n\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     */\n    addItem(value, silent) {\n      var events = silent ? [] : ['change', 'dropdown_close'];\n      debounce_events(this, events, () => {\n        var item, wasFull;\n        const self = this;\n        const inputMode = self.settings.mode;\n        const hashed = hash_key(value);\n        if (hashed && self.items.indexOf(hashed) !== -1) {\n          if (inputMode === 'single') {\n            self.close();\n          }\n          if (inputMode === 'single' || !self.settings.duplicates) {\n            return;\n          }\n        }\n        if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n        if (inputMode === 'single') self.clear(silent);\n        if (inputMode === 'multi' && self.isFull()) return;\n        item = self._render('item', self.options[hashed]);\n        if (self.control.contains(item)) {\n          // duplicates\n          item = item.cloneNode(true);\n        }\n        wasFull = self.isFull();\n        self.items.splice(self.caretPos, 0, hashed);\n        self.insertAtCaret(item);\n        if (self.isSetup) {\n          // update menu / remove the option (if this is not one item being added as part of series)\n          if (!self.isPending && self.settings.hideSelected) {\n            let option = self.getOption(hashed);\n            let next = self.getAdjacent(option, 1);\n            if (next) {\n              self.setActiveOption(next);\n            }\n          }\n\n          // refreshOptions after setActiveOption(),\n          // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n          if (!self.isPending && !self.settings.closeAfterSelect) {\n            self.refreshOptions(self.isFocused && inputMode !== 'single');\n          }\n\n          // hide the menu if the maximum number of items have been selected or no options are left\n          if (self.settings.closeAfterSelect != false && self.isFull()) {\n            self.close();\n          } else if (!self.isPending) {\n            self.positionDropdown();\n          }\n          self.trigger('item_add', hashed, item);\n          if (!self.isPending) {\n            self.updateOriginalInput({\n              silent: silent\n            });\n          }\n        }\n        if (!self.isPending || !wasFull && self.isFull()) {\n          self.inputState();\n          self.refreshState();\n        }\n      });\n    }\n\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     */\n    removeItem(item = null, silent) {\n      const self = this;\n      item = self.getItem(item);\n      if (!item) return;\n      var i, idx;\n      const value = item.dataset.value;\n      i = nodeIndex(item);\n      item.remove();\n      if (item.classList.contains('active')) {\n        idx = self.activeItems.indexOf(item);\n        self.activeItems.splice(idx, 1);\n        removeClasses(item, 'active');\n      }\n      self.items.splice(i, 1);\n      self.lastQuery = null;\n      if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n        self.removeOption(value, silent);\n      }\n      if (i < self.caretPos) {\n        self.setCaret(self.caretPos - 1);\n      }\n      self.updateOriginalInput({\n        silent: silent\n      });\n      self.refreshState();\n      self.positionDropdown();\n      self.trigger('item_remove', value, item);\n    }\n\n    /**\n     * Invokes the `create` method provided in the\n     * TomSelect options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     */\n    createItem(input = null, callback = () => {}) {\n      // triggerDropdown parameter @deprecated 2.1.1\n      if (arguments.length === 3) {\n        callback = arguments[2];\n      }\n      if (typeof callback != 'function') {\n        callback = () => {};\n      }\n      var self = this;\n      var caret = self.caretPos;\n      var output;\n      input = input || self.inputValue();\n      if (!self.canCreate(input)) {\n        callback();\n        return false;\n      }\n      self.lock();\n      var created = false;\n      var create = data => {\n        self.unlock();\n        if (!data || typeof data !== 'object') return callback();\n        var value = hash_key(data[self.settings.valueField]);\n        if (typeof value !== 'string') {\n          return callback();\n        }\n        self.setTextboxValue();\n        self.addOption(data, true);\n        self.setCaret(caret);\n        self.addItem(value);\n        callback(data);\n        created = true;\n      };\n      if (typeof self.settings.create === 'function') {\n        output = self.settings.create.call(this, input, create);\n      } else {\n        output = {\n          [self.settings.labelField]: input,\n          [self.settings.valueField]: input\n        };\n      }\n      if (!created) {\n        create(output);\n      }\n      return true;\n    }\n\n    /**\n     * Re-renders the selected item lists.\n     */\n    refreshItems() {\n      var self = this;\n      self.lastQuery = null;\n      if (self.isSetup) {\n        self.addItems(self.items);\n      }\n      self.updateOriginalInput();\n      self.refreshState();\n    }\n\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n    refreshState() {\n      const self = this;\n      self.refreshValidityState();\n      const isFull = self.isFull();\n      const isLocked = self.isLocked;\n      self.wrapper.classList.toggle('rtl', self.rtl);\n      const wrap_classList = self.wrapper.classList;\n      wrap_classList.toggle('focus', self.isFocused);\n      wrap_classList.toggle('disabled', self.isDisabled);\n      wrap_classList.toggle('readonly', self.isReadOnly);\n      wrap_classList.toggle('required', self.isRequired);\n      wrap_classList.toggle('invalid', !self.isValid);\n      wrap_classList.toggle('locked', isLocked);\n      wrap_classList.toggle('full', isFull);\n      wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n      wrap_classList.toggle('dropdown-active', self.isOpen);\n      wrap_classList.toggle('has-options', isEmptyObject(self.options));\n      wrap_classList.toggle('has-items', self.items.length > 0);\n    }\n\n    /**\n     * Update the `required` attribute of both input and control input.\n     *\n     * The `required` property needs to be activated on the control input\n     * for the error to be displayed at the right place. `required` also\n     * needs to be temporarily deactivated on the input since the input is\n     * hidden and can't show errors.\n     */\n    refreshValidityState() {\n      var self = this;\n      if (!self.input.validity) {\n        return;\n      }\n      self.isValid = self.input.validity.valid;\n      self.isInvalid = !self.isValid;\n    }\n\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n    isFull() {\n      return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n    }\n\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     *\n     */\n    updateOriginalInput(opts = {}) {\n      const self = this;\n      var option, label;\n      const empty_option = self.input.querySelector('option[value=\"\"]');\n      if (self.is_select_tag) {\n        const selected = [];\n        const has_selected = self.input.querySelectorAll('option:checked').length;\n        function AddSelected(option_el, value, label) {\n          if (!option_el) {\n            option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n          }\n\n          // don't move empty option from top of list\n          // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n          if (option_el != empty_option) {\n            self.input.append(option_el);\n          }\n          selected.push(option_el);\n\n          // marking empty option as selected can break validation\n          // fixes https://github.com/orchidjs/tom-select/issues/303\n          if (option_el != empty_option || has_selected > 0) {\n            option_el.selected = true;\n          }\n          return option_el;\n        }\n\n        // unselect all selected options\n        self.input.querySelectorAll('option:checked').forEach(option_el => {\n          option_el.selected = false;\n        });\n\n        // nothing selected?\n        if (self.items.length == 0 && self.settings.mode == 'single') {\n          AddSelected(empty_option, \"\", \"\");\n\n          // order selected <option> tags for values in self.items\n        } else {\n          self.items.forEach(value => {\n            option = self.options[value];\n            label = option[self.settings.labelField] || '';\n            if (selected.includes(option.$option)) {\n              const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n              AddSelected(reuse_opt, value, label);\n            } else {\n              option.$option = AddSelected(option.$option, value, label);\n            }\n          });\n        }\n      } else {\n        self.input.value = self.getValue();\n      }\n      if (self.isSetup) {\n        if (!opts.silent) {\n          self.trigger('change', self.getValue());\n        }\n      }\n    }\n\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n    open() {\n      var self = this;\n      if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n      self.isOpen = true;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'true'\n      });\n      self.refreshState();\n      applyCSS(self.dropdown, {\n        visibility: 'hidden',\n        display: 'block'\n      });\n      self.positionDropdown();\n      applyCSS(self.dropdown, {\n        visibility: 'visible',\n        display: 'block'\n      });\n      self.focus();\n      self.trigger('dropdown_open', self.dropdown);\n    }\n\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n    close(setTextboxValue = true) {\n      var self = this;\n      var trigger = self.isOpen;\n      if (setTextboxValue) {\n        // before blur() to prevent form onchange event\n        self.setTextboxValue();\n        if (self.settings.mode === 'single' && self.items.length) {\n          self.inputState();\n        }\n      }\n      self.isOpen = false;\n      setAttr(self.focus_node, {\n        'aria-expanded': 'false'\n      });\n      applyCSS(self.dropdown, {\n        display: 'none'\n      });\n      if (self.settings.hideSelected) {\n        self.clearActiveOption();\n      }\n      self.refreshState();\n      if (trigger) self.trigger('dropdown_close', self.dropdown);\n    }\n\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown if dropdownParent = 'body'.\n     * Otherwise, position is determined by css\n     */\n    positionDropdown() {\n      if (this.settings.dropdownParent !== 'body') {\n        return;\n      }\n      var context = this.control;\n      var rect = context.getBoundingClientRect();\n      var top = context.offsetHeight + rect.top + window.scrollY;\n      var left = rect.left + window.scrollX;\n      applyCSS(this.dropdown, {\n        width: rect.width + 'px',\n        top: top + 'px',\n        left: left + 'px'\n      });\n    }\n\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     */\n    clear(silent) {\n      var self = this;\n      if (!self.items.length) return;\n      var items = self.controlChildren();\n      iterate(items, item => {\n        self.removeItem(item, true);\n      });\n      self.inputState();\n      if (!silent) self.updateOriginalInput();\n      self.trigger('clear');\n    }\n\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     */\n    insertAtCaret(el) {\n      const self = this;\n      const caret = self.caretPos;\n      const target = self.control;\n      target.insertBefore(el, target.children[caret] || null);\n      self.setCaret(caret + 1);\n    }\n\n    /**\n     * Removes the current selected item(s).\n     *\n     */\n    deleteSelection(e) {\n      var direction, selection, caret, tail;\n      var self = this;\n      direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n      selection = getSelection(self.control_input);\n\n      // determine items that will be removed\n      const rm_items = [];\n      if (self.activeItems.length) {\n        tail = getTail(self.activeItems, direction);\n        caret = nodeIndex(tail);\n        if (direction > 0) {\n          caret++;\n        }\n        iterate(self.activeItems, item => rm_items.push(item));\n      } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n        const items = self.controlChildren();\n        let rm_item;\n        if (direction < 0 && selection.start === 0 && selection.length === 0) {\n          rm_item = items[self.caretPos - 1];\n        } else if (direction > 0 && selection.start === self.inputValue().length) {\n          rm_item = items[self.caretPos];\n        }\n        if (rm_item !== undefined) {\n          rm_items.push(rm_item);\n        }\n      }\n      if (!self.shouldDelete(rm_items, e)) {\n        return false;\n      }\n      preventDefault(e, true);\n\n      // perform removal\n      if (typeof caret !== 'undefined') {\n        self.setCaret(caret);\n      }\n      while (rm_items.length) {\n        self.removeItem(rm_items.pop());\n      }\n      self.inputState();\n      self.positionDropdown();\n      self.refreshOptions(false);\n      return true;\n    }\n\n    /**\n     * Return true if the items should be deleted\n     */\n    shouldDelete(items, evt) {\n      const values = items.map(item => item.dataset.value);\n\n      // allow the callback to abort\n      if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Selects the previous / next item (depending on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     */\n    advanceSelection(direction, e) {\n      var last_active,\n        adjacent,\n        self = this;\n      if (self.rtl) direction *= -1;\n      if (self.inputValue().length) return;\n\n      // add or remove to active items\n      if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n        last_active = self.getLastActive(direction);\n        if (last_active) {\n          if (!last_active.classList.contains('active')) {\n            adjacent = last_active;\n          } else {\n            adjacent = self.getAdjacent(last_active, direction, 'item');\n          }\n\n          // if no active item, get items adjacent to the control input\n        } else if (direction > 0) {\n          adjacent = self.control_input.nextElementSibling;\n        } else {\n          adjacent = self.control_input.previousElementSibling;\n        }\n        if (adjacent) {\n          if (adjacent.classList.contains('active')) {\n            self.removeActiveItem(last_active);\n          }\n          self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n        }\n\n        // move caret to the left or right\n      } else {\n        self.moveCaret(direction);\n      }\n    }\n    moveCaret(direction) {}\n\n    /**\n     * Get the last active item\n     *\n     */\n    getLastActive(direction) {\n      let last_active = this.control.querySelector('.last-active');\n      if (last_active) {\n        return last_active;\n      }\n      var result = this.control.querySelectorAll('.active');\n      if (result) {\n        return getTail(result, direction);\n      }\n    }\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n    setCaret(new_pos) {\n      this.caretPos = this.items.length;\n    }\n\n    /**\n     * Return list of item dom elements\n     *\n     */\n    controlChildren() {\n      return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n    }\n\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n    lock() {\n      this.setLocked(true);\n    }\n\n    /**\n     * Re-enables user input on the control.\n     */\n    unlock() {\n      this.setLocked(false);\n    }\n\n    /**\n     * Disable or enable user input on the control\n     */\n    setLocked(lock = this.isReadOnly || this.isDisabled) {\n      this.isLocked = lock;\n      this.refreshState();\n    }\n\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n    disable() {\n      this.setDisabled(true);\n      this.close();\n    }\n\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n    enable() {\n      this.setDisabled(false);\n    }\n    setDisabled(disabled) {\n      this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n      this.isDisabled = disabled;\n      this.input.disabled = disabled;\n      this.control_input.disabled = disabled;\n      this.setLocked();\n    }\n    setReadOnly(isReadOnly) {\n      this.isReadOnly = isReadOnly;\n      this.input.readOnly = isReadOnly;\n      this.control_input.readOnly = isReadOnly;\n      this.setLocked();\n    }\n\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n    destroy() {\n      var self = this;\n      var revertSettings = self.revertSettings;\n      self.trigger('destroy');\n      self.off();\n      self.wrapper.remove();\n      self.dropdown.remove();\n      self.input.innerHTML = revertSettings.innerHTML;\n      self.input.tabIndex = revertSettings.tabIndex;\n      removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n      self._destroy();\n      delete self.input.tomselect;\n    }\n\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     */\n    render(templateName, data) {\n      var id, html;\n      const self = this;\n      if (typeof this.settings.render[templateName] !== 'function') {\n        return null;\n      }\n\n      // render markup\n      html = self.settings.render[templateName].call(this, data, escape_html);\n      if (!html) {\n        return null;\n      }\n      html = getDom(html);\n\n      // add mandatory attributes\n      if (templateName === 'option' || templateName === 'option_create') {\n        if (data[self.settings.disabledField]) {\n          setAttr(html, {\n            'aria-disabled': 'true'\n          });\n        } else {\n          setAttr(html, {\n            'data-selectable': ''\n          });\n        }\n      } else if (templateName === 'optgroup') {\n        id = data.group[self.settings.optgroupValueField];\n        setAttr(html, {\n          'data-group': id\n        });\n        if (data.group[self.settings.disabledField]) {\n          setAttr(html, {\n            'data-disabled': ''\n          });\n        }\n      }\n      if (templateName === 'option' || templateName === 'item') {\n        const value = get_hash(data[self.settings.valueField]);\n        setAttr(html, {\n          'data-value': value\n        });\n\n        // make sure we have some classes if a template is overwritten\n        if (templateName === 'item') {\n          addClasses(html, self.settings.itemClass);\n          setAttr(html, {\n            'data-ts-item': ''\n          });\n        } else {\n          addClasses(html, self.settings.optionClass);\n          setAttr(html, {\n            role: 'option',\n            id: data.$id\n          });\n\n          // update cache\n          data.$div = html;\n          self.options[value] = data;\n        }\n      }\n      return html;\n    }\n\n    /**\n     * Type guarded rendering\n     *\n     */\n    _render(templateName, data) {\n      const html = this.render(templateName, data);\n      if (html == null) {\n        throw 'HTMLElement expected';\n      }\n      return html;\n    }\n\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     */\n    clearCache() {\n      iterate(this.options, option => {\n        if (option.$div) {\n          option.$div.remove();\n          delete option.$div;\n        }\n      });\n    }\n\n    /**\n     * Removes a value from item and option caches\n     *\n     */\n    uncacheValue(value) {\n      const option_el = this.getOption(value);\n      if (option_el) option_el.remove();\n    }\n\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     */\n    canCreate(input) {\n      return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n    }\n\n    /**\n     * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n     *\n     * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n     *\n     * });\n     */\n    hook(when, method, new_fn) {\n      var self = this;\n      var orig_method = self[method];\n      self[method] = function () {\n        var result, result_new;\n        if (when === 'after') {\n          result = orig_method.apply(self, arguments);\n        }\n        result_new = new_fn.apply(self, arguments);\n        if (when === 'instead') {\n          return result_new;\n        }\n        if (when === 'before') {\n          result = orig_method.apply(self, arguments);\n        }\n        return result;\n      };\n    }\n  }\n\n  /**\n   * Plugin: \"change_listener\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function change_listener() {\n    addEvent(this.input, 'change', () => {\n      this.sync();\n    });\n  }\n\n  /**\n   * Plugin: \"checkbox_options\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function checkbox_options(userOptions) {\n    var self = this;\n    var orig_onOptionSelect = self.onOptionSelect;\n    self.settings.hideSelected = false;\n    const cbOptions = Object.assign({\n      // so that the user may add different ones as well\n      className: \"tomselect-checkbox\",\n      // the following default to the historic plugin's values\n      checkedClassNames: undefined,\n      uncheckedClassNames: undefined\n    }, userOptions);\n    var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n      if (toCheck) {\n        checkbox.checked = true;\n        if (cbOptions.uncheckedClassNames) {\n          checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n        }\n        if (cbOptions.checkedClassNames) {\n          checkbox.classList.add(...cbOptions.checkedClassNames);\n        }\n      } else {\n        checkbox.checked = false;\n        if (cbOptions.checkedClassNames) {\n          checkbox.classList.remove(...cbOptions.checkedClassNames);\n        }\n        if (cbOptions.uncheckedClassNames) {\n          checkbox.classList.add(...cbOptions.uncheckedClassNames);\n        }\n      }\n    };\n\n    // update the checkbox for an option\n    var UpdateCheckbox = function UpdateCheckbox(option) {\n      setTimeout(() => {\n        var checkbox = option.querySelector('input.' + cbOptions.className);\n        if (checkbox instanceof HTMLInputElement) {\n          UpdateChecked(checkbox, option.classList.contains('selected'));\n        }\n      }, 1);\n    };\n\n    // add checkbox to option template\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_option = self.settings.render.option;\n      self.settings.render.option = (data, escape_html) => {\n        var rendered = getDom(orig_render_option.call(self, data, escape_html));\n        var checkbox = document.createElement('input');\n        if (cbOptions.className) {\n          checkbox.classList.add(cbOptions.className);\n        }\n        checkbox.addEventListener('click', function (evt) {\n          preventDefault(evt);\n        });\n        checkbox.type = 'checkbox';\n        const hashed = hash_key(data[self.settings.valueField]);\n        UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n        rendered.prepend(checkbox);\n        return rendered;\n      };\n    });\n\n    // uncheck when item removed\n    self.on('item_remove', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        option.classList.remove('selected'); // selected class won't be removed yet\n        UpdateCheckbox(option);\n      }\n    });\n\n    // check when item added\n    self.on('item_add', value => {\n      var option = self.getOption(value);\n      if (option) {\n        // if dropdown hasn't been opened yet, the option won't exist\n        UpdateCheckbox(option);\n      }\n    });\n\n    // remove items when selected option is clicked\n    self.hook('instead', 'onOptionSelect', (evt, option) => {\n      if (option.classList.contains('selected')) {\n        option.classList.remove('selected');\n        self.removeItem(option.dataset.value);\n        self.refreshOptions();\n        preventDefault(evt, true);\n        return;\n      }\n      orig_onOptionSelect.call(self, evt, option);\n      UpdateCheckbox(option);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function clear_button(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      className: 'clear-button',\n      title: 'Clear All',\n      html: data => {\n        return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var button = getDom(options.html(options));\n      button.addEventListener('click', evt => {\n        if (self.isLocked) return;\n        self.clear();\n        if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n          self.addItem('');\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n      });\n      self.control.appendChild(button);\n    });\n  }\n\n  /**\n   * Plugin: \"drag_drop\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  const insertAfter = (referenceNode, newNode) => {\n    var _referenceNode$parent;\n    (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  const insertBefore = (referenceNode, newNode) => {\n    var _referenceNode$parent2;\n    (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n  };\n  const isBefore = (referenceNode, newNode) => {\n    do {\n      var _newNode;\n      newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n      if (referenceNode == newNode) {\n        return true;\n      }\n    } while (newNode && newNode.previousElementSibling);\n    return false;\n  };\n  function drag_drop() {\n    var self = this;\n    if (self.settings.mode !== 'multi') return;\n    var orig_lock = self.lock;\n    var orig_unlock = self.unlock;\n    let sortable = true;\n    let drag_item;\n\n    /**\n     * Add draggable attribute to item\n     */\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_item = self.settings.render.item;\n      self.settings.render.item = (data, escape) => {\n        const item = getDom(orig_render_item.call(self, data, escape));\n        setAttr(item, {\n          'draggable': 'true'\n        });\n\n        // prevent doc_mousedown (see tom-select.ts)\n        const mousedown = evt => {\n          if (!sortable) preventDefault(evt);\n          evt.stopPropagation();\n        };\n        const dragStart = evt => {\n          drag_item = item;\n          setTimeout(() => {\n            item.classList.add('ts-dragging');\n          }, 0);\n        };\n        const dragOver = evt => {\n          evt.preventDefault();\n          item.classList.add('ts-drag-over');\n          moveitem(item, drag_item);\n        };\n        const dragLeave = () => {\n          item.classList.remove('ts-drag-over');\n        };\n        const moveitem = (targetitem, dragitem) => {\n          if (dragitem === undefined) return;\n          if (isBefore(dragitem, item)) {\n            insertAfter(targetitem, dragitem);\n          } else {\n            insertBefore(targetitem, dragitem);\n          }\n        };\n        const dragend = () => {\n          var _drag_item;\n          document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n          (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n          drag_item = undefined;\n          var values = [];\n          self.control.querySelectorAll(`[data-value]`).forEach(el => {\n            if (el.dataset.value) {\n              let value = el.dataset.value;\n              if (value) {\n                values.push(value);\n              }\n            }\n          });\n          self.setValue(values);\n        };\n        addEvent(item, 'mousedown', mousedown);\n        addEvent(item, 'dragstart', dragStart);\n        addEvent(item, 'dragenter', dragOver);\n        addEvent(item, 'dragover', dragOver);\n        addEvent(item, 'dragleave', dragLeave);\n        addEvent(item, 'dragend', dragend);\n        return item;\n      };\n    });\n    self.hook('instead', 'lock', () => {\n      sortable = false;\n      return orig_lock.call(self);\n    });\n    self.hook('instead', 'unlock', () => {\n      sortable = true;\n      return orig_unlock.call(self);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_header\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function dropdown_header(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      title: 'Untitled',\n      headerClass: 'dropdown-header',\n      titleRowClass: 'dropdown-header-title',\n      labelClass: 'dropdown-header-label',\n      closeClass: 'dropdown-header-close',\n      html: data => {\n        return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n      }\n    }, userOptions);\n    self.on('initialize', () => {\n      var header = getDom(options.html(options));\n      var close_link = header.querySelector('.' + options.closeClass);\n      if (close_link) {\n        close_link.addEventListener('click', evt => {\n          preventDefault(evt, true);\n          self.close();\n        });\n      }\n      self.dropdown.insertBefore(header, self.dropdown.firstChild);\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function caret_position() {\n    var self = this;\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * The input must be moved by leaving it in place and moving the\n     * siblings, due to the fact that focus cannot be restored once lost\n     * on mobile webkit devices\n     *\n     */\n    self.hook('instead', 'setCaret', new_pos => {\n      if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n        new_pos = self.items.length;\n      } else {\n        new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n        if (new_pos != self.caretPos && !self.isPending) {\n          self.controlChildren().forEach((child, j) => {\n            if (j < new_pos) {\n              self.control_input.insertAdjacentElement('beforebegin', child);\n            } else {\n              self.control.appendChild(child);\n            }\n          });\n        }\n      }\n      self.caretPos = new_pos;\n    });\n    self.hook('instead', 'moveCaret', direction => {\n      if (!self.isFocused) return;\n\n      // move caret before or after selected items\n      const last_active = self.getLastActive(direction);\n      if (last_active) {\n        const idx = nodeIndex(last_active);\n        self.setCaret(direction > 0 ? idx + 1 : idx);\n        self.setActiveItem();\n        removeClasses(last_active, 'last-active');\n\n        // move caret left or right of current position\n      } else {\n        self.setCaret(self.caretPos + direction);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"dropdown_input\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function dropdown_input() {\n    const self = this;\n    self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n    self.hook('before', 'setup', () => {\n      self.focus_node = self.control;\n      addClasses(self.control_input, 'dropdown-input');\n      const div = getDom('<div class=\"dropdown-input-wrap\">');\n      div.append(self.control_input);\n      self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n      // set a placeholder in the select control\n      const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n      placeholder.placeholder = self.settings.placeholder || '';\n      self.control.append(placeholder);\n    });\n    self.on('initialize', () => {\n      // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n      self.control_input.addEventListener('keydown', evt => {\n        //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n        switch (evt.keyCode) {\n          case KEY_ESC:\n            if (self.isOpen) {\n              preventDefault(evt, true);\n              self.close();\n            }\n            self.clearActiveItems();\n            return;\n          case KEY_TAB:\n            self.focus_node.tabIndex = -1;\n            break;\n        }\n        return self.onKeyDown.call(self, evt);\n      });\n      self.on('blur', () => {\n        self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n      });\n\n      // give the control_input focus when the dropdown is open\n      self.on('dropdown_open', () => {\n        self.control_input.focus();\n      });\n\n      // prevent onBlur from closing when focus is on the control_input\n      const orig_onBlur = self.onBlur;\n      self.hook('instead', 'onBlur', evt => {\n        if (evt && evt.relatedTarget == self.control_input) return;\n        return orig_onBlur.call(self);\n      });\n      addEvent(self.control_input, 'blur', () => self.onBlur());\n\n      // return focus to control to allow further keyboard input\n      self.hook('before', 'close', () => {\n        if (!self.isOpen) return;\n        self.focus_node.focus({\n          preventScroll: true\n        });\n      });\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function input_autogrow() {\n    var self = this;\n    self.on('initialize', () => {\n      var test_input = document.createElement('span');\n      var control = self.control_input;\n      test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n      self.wrapper.appendChild(test_input);\n      var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n      for (var _i = 0, _transfer_styles = transfer_styles; _i < _transfer_styles.length; _i++) {\n        const style_name = _transfer_styles[_i];\n        // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n        test_input.style[style_name] = control.style[style_name];\n      }\n\n      /**\n       * Set the control width\n       *\n       */\n      var resize = () => {\n        test_input.textContent = control.value;\n        control.style.width = test_input.clientWidth + 'px';\n      };\n      resize();\n      self.on('update item_add item_remove', resize);\n      addEvent(control, 'input', resize);\n      addEvent(control, 'keyup', resize);\n      addEvent(control, 'blur', resize);\n      addEvent(control, 'update', resize);\n    });\n  }\n\n  /**\n   * Plugin: \"input_autogrow\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function no_backspace_delete() {\n    var self = this;\n    var orig_deleteSelection = self.deleteSelection;\n    this.hook('instead', 'deleteSelection', evt => {\n      if (self.activeItems.length) {\n        return orig_deleteSelection.call(self, evt);\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Plugin: \"no_active_items\" (Tom Select)\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function no_active_items() {\n    this.hook('instead', 'setActiveItem', () => {});\n    this.hook('instead', 'selectAll', () => {});\n  }\n\n  /**\n   * Plugin: \"optgroup_columns\" (Tom Select.js)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function optgroup_columns() {\n    var self = this;\n    var orig_keydown = self.onKeyDown;\n    self.hook('instead', 'onKeyDown', evt => {\n      var index, option, options, optgroup;\n      if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n        return orig_keydown.call(self, evt);\n      }\n      self.ignoreHover = true;\n      optgroup = parentMatch(self.activeOption, '[data-group]');\n      index = nodeIndex(self.activeOption, '[data-selectable]');\n      if (!optgroup) {\n        return;\n      }\n      if (evt.keyCode === KEY_LEFT) {\n        optgroup = optgroup.previousSibling;\n      } else {\n        optgroup = optgroup.nextSibling;\n      }\n      if (!optgroup) {\n        return;\n      }\n      options = optgroup.querySelectorAll('[data-selectable]');\n      option = options[Math.min(options.length - 1, index)];\n      if (option) {\n        self.setActiveOption(option);\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"remove_button\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function remove_button(userOptions) {\n    const options = Object.assign({\n      label: '&times;',\n      title: 'Remove',\n      className: 'remove',\n      append: true\n    }, userOptions);\n\n    //options.className = 'remove-single';\n    var self = this;\n\n    // override the render method to add remove button to each item\n    if (!options.append) {\n      return;\n    }\n    var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n    self.hook('after', 'setupTemplates', () => {\n      var orig_render_item = self.settings.render.item;\n      self.settings.render.item = (data, escape) => {\n        var item = getDom(orig_render_item.call(self, data, escape));\n        var close_button = getDom(html);\n        item.appendChild(close_button);\n        addEvent(close_button, 'mousedown', evt => {\n          preventDefault(evt, true);\n        });\n        addEvent(close_button, 'click', evt => {\n          if (self.isLocked) return;\n\n          // propagating will trigger the dropdown to show for single mode\n          preventDefault(evt, true);\n          if (self.isLocked) return;\n          if (!self.shouldDelete([item], evt)) return;\n          self.removeItem(item);\n          self.refreshOptions(false);\n          self.inputState();\n        });\n        return item;\n      };\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function restore_on_backspace(userOptions) {\n    const self = this;\n    const options = Object.assign({\n      text: option => {\n        return option[self.settings.labelField];\n      }\n    }, userOptions);\n    self.on('item_remove', function (value) {\n      if (!self.isFocused) {\n        return;\n      }\n      if (self.control_input.value.trim() === '') {\n        var option = self.options[value];\n        if (option) {\n          self.setTextboxValue(options.text.call(self, option));\n        }\n      }\n    });\n  }\n\n  /**\n   * Plugin: \"restore_on_backspace\" (Tom Select)\n   * Copyright (c) contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n   * file except in compliance with the License. You may obtain a copy of the License at:\n   * http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software distributed under\n   * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n   * ANY KIND, either express or implied. See the License for the specific language\n   * governing permissions and limitations under the License.\n   *\n   */\n\n  function virtual_scroll() {\n    const self = this;\n    const orig_canLoad = self.canLoad;\n    const orig_clearActiveOption = self.clearActiveOption;\n    const orig_loadCallback = self.loadCallback;\n    var pagination = {};\n    var dropdown_content;\n    var loading_more = false;\n    var load_more_opt;\n    var default_values = [];\n    if (!self.settings.shouldLoadMore) {\n      // return true if additional results should be loaded\n      self.settings.shouldLoadMore = () => {\n        const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n        if (scroll_percent > 0.9) {\n          return true;\n        }\n        if (self.activeOption) {\n          var selectable = self.selectable();\n          var index = Array.from(selectable).indexOf(self.activeOption);\n          if (index >= selectable.length - 2) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    if (!self.settings.firstUrl) {\n      throw 'virtual_scroll plugin requires a firstUrl() method';\n    }\n\n    // in order for virtual scrolling to work,\n    // options need to be ordered the same way they're returned from the remote data source\n    self.settings.sortField = [{\n      field: '$order'\n    }, {\n      field: '$score'\n    }];\n\n    // can we load more results for given query?\n    const canLoadMore = query => {\n      if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n        return false;\n      }\n      if (query in pagination && pagination[query]) {\n        return true;\n      }\n      return false;\n    };\n    const clearFilter = (option, value) => {\n      if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n        return true;\n      }\n      return false;\n    };\n\n    // set the next url that will be\n    self.setNextUrl = (value, next_url) => {\n      pagination[value] = next_url;\n    };\n\n    // getUrl() to be used in settings.load()\n    self.getUrl = query => {\n      if (query in pagination) {\n        const next_url = pagination[query];\n        pagination[query] = false;\n        return next_url;\n      }\n\n      // if the user goes back to a previous query\n      // we need to load the first page again\n      self.clearPagination();\n      return self.settings.firstUrl.call(self, query);\n    };\n\n    // clear pagination\n    self.clearPagination = () => {\n      pagination = {};\n    };\n\n    // don't clear the active option (and cause unwanted dropdown scroll)\n    // while loading more results\n    self.hook('instead', 'clearActiveOption', () => {\n      if (loading_more) {\n        return;\n      }\n      return orig_clearActiveOption.call(self);\n    });\n\n    // override the canLoad method\n    self.hook('instead', 'canLoad', query => {\n      // first time the query has been seen\n      if (!(query in pagination)) {\n        return orig_canLoad.call(self, query);\n      }\n      return canLoadMore(query);\n    });\n\n    // wrap the load\n    self.hook('instead', 'loadCallback', (options, optgroups) => {\n      if (!loading_more) {\n        self.clearOptions(clearFilter);\n      } else if (load_more_opt) {\n        const first_option = options[0];\n        if (first_option !== undefined) {\n          load_more_opt.dataset.value = first_option[self.settings.valueField];\n        }\n      }\n      orig_loadCallback.call(self, options, optgroups);\n      loading_more = false;\n    });\n\n    // add templates to dropdown\n    //\tloading_more if we have another url in the queue\n    //\tno_more_results if we don't have another url in the queue\n    self.hook('after', 'refreshOptions', () => {\n      const query = self.lastValue;\n      var option;\n      if (canLoadMore(query)) {\n        option = self.render('loading_more', {\n          query: query\n        });\n        if (option) {\n          option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n          load_more_opt = option;\n        }\n      } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n        option = self.render('no_more_results', {\n          query: query\n        });\n      }\n      if (option) {\n        addClasses(option, self.settings.optionClass);\n        dropdown_content.append(option);\n      }\n    });\n\n    // add scroll listener and default templates\n    self.on('initialize', () => {\n      default_values = Object.keys(self.options);\n      dropdown_content = self.dropdown_content;\n\n      // default templates\n      self.settings.render = Object.assign({}, {\n        loading_more: () => {\n          return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n        },\n        no_more_results: () => {\n          return `<div class=\"no-more-results\">No more results</div>`;\n        }\n      }, self.settings.render);\n\n      // watch dropdown content scroll position\n      dropdown_content.addEventListener('scroll', () => {\n        if (!self.settings.shouldLoadMore.call(self)) {\n          return;\n        }\n\n        // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n        if (!canLoadMore(self.lastValue)) {\n          return;\n        }\n\n        // don't call load() too much\n        if (loading_more) return;\n        loading_more = true;\n        self.load.call(self, self.lastValue);\n      });\n    });\n  }\n  TomSelect.define('change_listener', change_listener);\n  TomSelect.define('checkbox_options', checkbox_options);\n  TomSelect.define('clear_button', clear_button);\n  TomSelect.define('drag_drop', drag_drop);\n  TomSelect.define('dropdown_header', dropdown_header);\n  TomSelect.define('caret_position', caret_position);\n  TomSelect.define('dropdown_input', dropdown_input);\n  TomSelect.define('input_autogrow', input_autogrow);\n  TomSelect.define('no_backspace_delete', no_backspace_delete);\n  TomSelect.define('no_active_items', no_active_items);\n  TomSelect.define('optgroup_columns', optgroup_columns);\n  TomSelect.define('remove_button', remove_button);\n  TomSelect.define('restore_on_backspace', restore_on_backspace);\n  TomSelect.define('virtual_scroll', virtual_scroll);\n  return TomSelect;\n});\nvar tomSelect = function (el, opts) {\n  return new TomSelect(el, opts);\n};","/*\nTurbolinks 5.2.0\nCopyright © 2018 Basecamp, LLC\n */\n(function () {\n  var t = this;\n  (function () {\n    (function () {\n      this.Turbolinks = {\n        supported: function () {\n          return null != window.history.pushState && null != window.requestAnimationFrame && null != window.addEventListener;\n        }(),\n        visit: function (t, r) {\n          return e.controller.visit(t, r);\n        },\n        clearCache: function () {\n          return e.controller.clearCache();\n        },\n        setProgressBarDelay: function (t) {\n          return e.controller.setProgressBarDelay(t);\n        }\n      };\n    }).call(this);\n  }).call(t);\n  var e = t.Turbolinks;\n  (function () {\n    (function () {\n      var t,\n        r,\n        n,\n        o = [].slice;\n      e.copyObject = function (t) {\n        var e, r, n;\n        r = {};\n        for (e in t) n = t[e], r[e] = n;\n        return r;\n      }, e.closest = function (e, r) {\n        return t.call(e, r);\n      }, t = function () {\n        var t, e;\n        return t = document.documentElement, null != (e = t.closest) ? e : function (t) {\n          var e;\n          for (e = this; e;) {\n            if (e.nodeType === Node.ELEMENT_NODE && r.call(e, t)) return e;\n            e = e.parentNode;\n          }\n        };\n      }(), e.defer = function (t) {\n        return setTimeout(t, 1);\n      }, e.throttle = function (t) {\n        var e;\n        return e = null, function () {\n          var r;\n          return r = 1 <= arguments.length ? o.call(arguments, 0) : [], null != e ? e : e = requestAnimationFrame(function (n) {\n            return function () {\n              return e = null, t.apply(n, r);\n            };\n          }(this));\n        };\n      }, e.dispatch = function (t, e) {\n        var r, o, i, s, a, u;\n        return a = null != e ? e : {}, u = a.target, r = a.cancelable, o = a.data, i = document.createEvent(\"Events\"), i.initEvent(t, !0, r === !0), i.data = null != o ? o : {}, i.cancelable && !n && (s = i.preventDefault, i.preventDefault = function () {\n          return this.defaultPrevented || Object.defineProperty(this, \"defaultPrevented\", {\n            get: function () {\n              return !0;\n            }\n          }), s.call(this);\n        }), (null != u ? u : document).dispatchEvent(i), i;\n      }, n = function () {\n        var t;\n        return t = document.createEvent(\"Events\"), t.initEvent(\"test\", !0, !0), t.preventDefault(), t.defaultPrevented;\n      }(), e.match = function (t, e) {\n        return r.call(t, e);\n      }, r = function () {\n        var t, e, r, n;\n        return t = document.documentElement, null != (e = null != (r = null != (n = t.matchesSelector) ? n : t.webkitMatchesSelector) ? r : t.msMatchesSelector) ? e : t.mozMatchesSelector;\n      }(), e.uuid = function () {\n        var t, e, r;\n        for (r = \"\", t = e = 1; 36 >= e; t = ++e) r += 9 === t || 14 === t || 19 === t || 24 === t ? \"-\" : 15 === t ? \"4\" : 20 === t ? (Math.floor(4 * Math.random()) + 8).toString(16) : Math.floor(15 * Math.random()).toString(16);\n        return r;\n      };\n    }).call(this), function () {\n      e.Location = function () {\n        function t(t) {\n          var e, r;\n          null == t && (t = \"\"), r = document.createElement(\"a\"), r.href = t.toString(), this.absoluteURL = r.href, e = r.hash.length, 2 > e ? this.requestURL = this.absoluteURL : (this.requestURL = this.absoluteURL.slice(0, -e), this.anchor = r.hash.slice(1));\n        }\n        var e, r, n, o;\n        return t.wrap = function (t) {\n          return t instanceof this ? t : new this(t);\n        }, t.prototype.getOrigin = function () {\n          return this.absoluteURL.split(\"/\", 3).join(\"/\");\n        }, t.prototype.getPath = function () {\n          var t, e;\n          return null != (t = null != (e = this.requestURL.match(/\\/\\/[^\\/]*(\\/[^?;]*)/)) ? e[1] : void 0) ? t : \"/\";\n        }, t.prototype.getPathComponents = function () {\n          return this.getPath().split(\"/\").slice(1);\n        }, t.prototype.getLastPathComponent = function () {\n          return this.getPathComponents().slice(-1)[0];\n        }, t.prototype.getExtension = function () {\n          var t, e;\n          return null != (t = null != (e = this.getLastPathComponent().match(/\\.[^.]*$/)) ? e[0] : void 0) ? t : \"\";\n        }, t.prototype.isHTML = function () {\n          return this.getExtension().match(/^(?:|\\.(?:htm|html|xhtml))$/);\n        }, t.prototype.isPrefixedBy = function (t) {\n          var e;\n          return e = r(t), this.isEqualTo(t) || o(this.absoluteURL, e);\n        }, t.prototype.isEqualTo = function (t) {\n          return this.absoluteURL === (null != t ? t.absoluteURL : void 0);\n        }, t.prototype.toCacheKey = function () {\n          return this.requestURL;\n        }, t.prototype.toJSON = function () {\n          return this.absoluteURL;\n        }, t.prototype.toString = function () {\n          return this.absoluteURL;\n        }, t.prototype.valueOf = function () {\n          return this.absoluteURL;\n        }, r = function (t) {\n          return e(t.getOrigin() + t.getPath());\n        }, e = function (t) {\n          return n(t, \"/\") ? t : t + \"/\";\n        }, o = function (t, e) {\n          return t.slice(0, e.length) === e;\n        }, n = function (t, e) {\n          return t.slice(-e.length) === e;\n        }, t;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.HttpRequest = function () {\n        function r(r, n, o) {\n          this.delegate = r, this.requestCanceled = t(this.requestCanceled, this), this.requestTimedOut = t(this.requestTimedOut, this), this.requestFailed = t(this.requestFailed, this), this.requestLoaded = t(this.requestLoaded, this), this.requestProgressed = t(this.requestProgressed, this), this.url = e.Location.wrap(n).requestURL, this.referrer = e.Location.wrap(o).absoluteURL, this.createXHR();\n        }\n        return r.NETWORK_FAILURE = 0, r.TIMEOUT_FAILURE = -1, r.timeout = 60, r.prototype.send = function () {\n          var t;\n          return this.xhr && !this.sent ? (this.notifyApplicationBeforeRequestStart(), this.setProgress(0), this.xhr.send(), this.sent = !0, \"function\" == typeof (t = this.delegate).requestStarted ? t.requestStarted() : void 0) : void 0;\n        }, r.prototype.cancel = function () {\n          return this.xhr && this.sent ? this.xhr.abort() : void 0;\n        }, r.prototype.requestProgressed = function (t) {\n          return t.lengthComputable ? this.setProgress(t.loaded / t.total) : void 0;\n        }, r.prototype.requestLoaded = function () {\n          return this.endRequest(function (t) {\n            return function () {\n              var e;\n              return 200 <= (e = t.xhr.status) && 300 > e ? t.delegate.requestCompletedWithResponse(t.xhr.responseText, t.xhr.getResponseHeader(\"Turbolinks-Location\")) : (t.failed = !0, t.delegate.requestFailedWithStatusCode(t.xhr.status, t.xhr.responseText));\n            };\n          }(this));\n        }, r.prototype.requestFailed = function () {\n          return this.endRequest(function (t) {\n            return function () {\n              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE);\n            };\n          }(this));\n        }, r.prototype.requestTimedOut = function () {\n          return this.endRequest(function (t) {\n            return function () {\n              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE);\n            };\n          }(this));\n        }, r.prototype.requestCanceled = function () {\n          return this.endRequest();\n        }, r.prototype.notifyApplicationBeforeRequestStart = function () {\n          return e.dispatch(\"turbolinks:request-start\", {\n            data: {\n              url: this.url,\n              xhr: this.xhr\n            }\n          });\n        }, r.prototype.notifyApplicationAfterRequestEnd = function () {\n          return e.dispatch(\"turbolinks:request-end\", {\n            data: {\n              url: this.url,\n              xhr: this.xhr\n            }\n          });\n        }, r.prototype.createXHR = function () {\n          return this.xhr = new XMLHttpRequest(), this.xhr.open(\"GET\", this.url, !0), this.xhr.timeout = 1e3 * this.constructor.timeout, this.xhr.setRequestHeader(\"Accept\", \"text/html, application/xhtml+xml\"), this.xhr.setRequestHeader(\"Turbolinks-Referrer\", this.referrer), this.xhr.onprogress = this.requestProgressed, this.xhr.onload = this.requestLoaded, this.xhr.onerror = this.requestFailed, this.xhr.ontimeout = this.requestTimedOut, this.xhr.onabort = this.requestCanceled;\n        }, r.prototype.endRequest = function (t) {\n          return this.xhr ? (this.notifyApplicationAfterRequestEnd(), null != t && t.call(this), this.destroy()) : void 0;\n        }, r.prototype.setProgress = function (t) {\n          var e;\n          return this.progress = t, \"function\" == typeof (e = this.delegate).requestProgressed ? e.requestProgressed(this.progress) : void 0;\n        }, r.prototype.destroy = function () {\n          var t;\n          return this.setProgress(1), \"function\" == typeof (t = this.delegate).requestFinished && t.requestFinished(), this.delegate = null, this.xhr = null;\n        }, r;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.ProgressBar = function () {\n        function e() {\n          this.trickle = t(this.trickle, this), this.stylesheetElement = this.createStylesheetElement(), this.progressElement = this.createProgressElement();\n        }\n        var r;\n        return r = 300, e.defaultCSS = \".turbolinks-progress-bar {\\n  position: fixed;\\n  display: block;\\n  top: 0;\\n  left: 0;\\n  height: 3px;\\n  background: #0076ff;\\n  z-index: 9999;\\n  transition: width \" + r + \"ms ease-out, opacity \" + r / 2 + \"ms \" + r / 2 + \"ms ease-in;\\n  transform: translate3d(0, 0, 0);\\n}\", e.prototype.show = function () {\n          return this.visible ? void 0 : (this.visible = !0, this.installStylesheetElement(), this.installProgressElement(), this.startTrickling());\n        }, e.prototype.hide = function () {\n          return this.visible && !this.hiding ? (this.hiding = !0, this.fadeProgressElement(function (t) {\n            return function () {\n              return t.uninstallProgressElement(), t.stopTrickling(), t.visible = !1, t.hiding = !1;\n            };\n          }(this))) : void 0;\n        }, e.prototype.setValue = function (t) {\n          return this.value = t, this.refresh();\n        }, e.prototype.installStylesheetElement = function () {\n          return document.head.insertBefore(this.stylesheetElement, document.head.firstChild);\n        }, e.prototype.installProgressElement = function () {\n          return this.progressElement.style.width = 0, this.progressElement.style.opacity = 1, document.documentElement.insertBefore(this.progressElement, document.body), this.refresh();\n        }, e.prototype.fadeProgressElement = function (t) {\n          return this.progressElement.style.opacity = 0, setTimeout(t, 1.5 * r);\n        }, e.prototype.uninstallProgressElement = function () {\n          return this.progressElement.parentNode ? document.documentElement.removeChild(this.progressElement) : void 0;\n        }, e.prototype.startTrickling = function () {\n          return null != this.trickleInterval ? this.trickleInterval : this.trickleInterval = setInterval(this.trickle, r);\n        }, e.prototype.stopTrickling = function () {\n          return clearInterval(this.trickleInterval), this.trickleInterval = null;\n        }, e.prototype.trickle = function () {\n          return this.setValue(this.value + Math.random() / 100);\n        }, e.prototype.refresh = function () {\n          return requestAnimationFrame(function (t) {\n            return function () {\n              return t.progressElement.style.width = 10 + 90 * t.value + \"%\";\n            };\n          }(this));\n        }, e.prototype.createStylesheetElement = function () {\n          var t;\n          return t = document.createElement(\"style\"), t.type = \"text/css\", t.textContent = this.constructor.defaultCSS, t;\n        }, e.prototype.createProgressElement = function () {\n          var t;\n          return t = document.createElement(\"div\"), t.className = \"turbolinks-progress-bar\", t;\n        }, e;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.BrowserAdapter = function () {\n        function r(r) {\n          this.controller = r, this.showProgressBar = t(this.showProgressBar, this), this.progressBar = new e.ProgressBar();\n        }\n        var n, o, i;\n        return i = e.HttpRequest, n = i.NETWORK_FAILURE, o = i.TIMEOUT_FAILURE, r.prototype.visitProposedToLocationWithAction = function (t, e) {\n          return this.controller.startVisitToLocationWithAction(t, e);\n        }, r.prototype.visitStarted = function (t) {\n          return t.issueRequest(), t.changeHistory(), t.loadCachedSnapshot();\n        }, r.prototype.visitRequestStarted = function (t) {\n          return this.progressBar.setValue(0), t.hasCachedSnapshot() || \"restore\" !== t.action ? this.showProgressBarAfterDelay() : this.showProgressBar();\n        }, r.prototype.visitRequestProgressed = function (t) {\n          return this.progressBar.setValue(t.progress);\n        }, r.prototype.visitRequestCompleted = function (t) {\n          return t.loadResponse();\n        }, r.prototype.visitRequestFailedWithStatusCode = function (t, e) {\n          switch (e) {\n            case n:\n            case o:\n              return this.reload();\n            default:\n              return t.loadResponse();\n          }\n        }, r.prototype.visitRequestFinished = function (t) {\n          return this.hideProgressBar();\n        }, r.prototype.visitCompleted = function (t) {\n          return t.followRedirect();\n        }, r.prototype.pageInvalidated = function () {\n          return this.reload();\n        }, r.prototype.showProgressBarAfterDelay = function () {\n          return this.progressBarTimeout = setTimeout(this.showProgressBar, this.controller.progressBarDelay);\n        }, r.prototype.showProgressBar = function () {\n          return this.progressBar.show();\n        }, r.prototype.hideProgressBar = function () {\n          return this.progressBar.hide(), clearTimeout(this.progressBarTimeout);\n        }, r.prototype.reload = function () {\n          return window.location.reload();\n        }, r;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.History = function () {\n        function r(e) {\n          this.delegate = e, this.onPageLoad = t(this.onPageLoad, this), this.onPopState = t(this.onPopState, this);\n        }\n        return r.prototype.start = function () {\n          return this.started ? void 0 : (addEventListener(\"popstate\", this.onPopState, !1), addEventListener(\"load\", this.onPageLoad, !1), this.started = !0);\n        }, r.prototype.stop = function () {\n          return this.started ? (removeEventListener(\"popstate\", this.onPopState, !1), removeEventListener(\"load\", this.onPageLoad, !1), this.started = !1) : void 0;\n        }, r.prototype.push = function (t, r) {\n          return t = e.Location.wrap(t), this.update(\"push\", t, r);\n        }, r.prototype.replace = function (t, r) {\n          return t = e.Location.wrap(t), this.update(\"replace\", t, r);\n        }, r.prototype.onPopState = function (t) {\n          var r, n, o, i;\n          return this.shouldHandlePopState() && (i = null != (n = t.state) ? n.turbolinks : void 0) ? (r = e.Location.wrap(window.location), o = i.restorationIdentifier, this.delegate.historyPoppedToLocationWithRestorationIdentifier(r, o)) : void 0;\n        }, r.prototype.onPageLoad = function (t) {\n          return e.defer(function (t) {\n            return function () {\n              return t.pageLoaded = !0;\n            };\n          }(this));\n        }, r.prototype.shouldHandlePopState = function () {\n          return this.pageIsLoaded();\n        }, r.prototype.pageIsLoaded = function () {\n          return this.pageLoaded || \"complete\" === document.readyState;\n        }, r.prototype.update = function (t, e, r) {\n          var n;\n          return n = {\n            turbolinks: {\n              restorationIdentifier: r\n            }\n          }, history[t + \"State\"](n, null, e);\n        }, r;\n      }();\n    }.call(this), function () {\n      e.HeadDetails = function () {\n        function t(t) {\n          var e, r, n, s, a, u;\n          for (this.elements = {}, n = 0, a = t.length; a > n; n++) u = t[n], u.nodeType === Node.ELEMENT_NODE && (s = u.outerHTML, r = null != (e = this.elements)[s] ? e[s] : e[s] = {\n            type: i(u),\n            tracked: o(u),\n            elements: []\n          }, r.elements.push(u));\n        }\n        var e, r, n, o, i;\n        return t.fromHeadElement = function (t) {\n          var e;\n          return new this(null != (e = null != t ? t.childNodes : void 0) ? e : []);\n        }, t.prototype.hasElementWithKey = function (t) {\n          return t in this.elements;\n        }, t.prototype.getTrackedElementSignature = function () {\n          var t, e;\n          return function () {\n            var r, n;\n            r = this.elements, n = [];\n            for (t in r) e = r[t].tracked, e && n.push(t);\n            return n;\n          }.call(this).join(\"\");\n        }, t.prototype.getScriptElementsNotInDetails = function (t) {\n          return this.getElementsMatchingTypeNotInDetails(\"script\", t);\n        }, t.prototype.getStylesheetElementsNotInDetails = function (t) {\n          return this.getElementsMatchingTypeNotInDetails(\"stylesheet\", t);\n        }, t.prototype.getElementsMatchingTypeNotInDetails = function (t, e) {\n          var r, n, o, i, s, a;\n          o = this.elements, s = [];\n          for (n in o) i = o[n], a = i.type, r = i.elements, a !== t || e.hasElementWithKey(n) || s.push(r[0]);\n          return s;\n        }, t.prototype.getProvisionalElements = function () {\n          var t, e, r, n, o, i, s;\n          r = [], n = this.elements;\n          for (e in n) o = n[e], s = o.type, i = o.tracked, t = o.elements, null != s || i ? t.length > 1 && r.push.apply(r, t.slice(1)) : r.push.apply(r, t);\n          return r;\n        }, t.prototype.getMetaValue = function (t) {\n          var e;\n          return null != (e = this.findMetaElementByName(t)) ? e.getAttribute(\"content\") : void 0;\n        }, t.prototype.findMetaElementByName = function (t) {\n          var r, n, o, i;\n          r = void 0, i = this.elements;\n          for (o in i) n = i[o].elements, e(n[0], t) && (r = n[0]);\n          return r;\n        }, i = function (t) {\n          return r(t) ? \"script\" : n(t) ? \"stylesheet\" : void 0;\n        }, o = function (t) {\n          return \"reload\" === t.getAttribute(\"data-turbolinks-track\");\n        }, r = function (t) {\n          var e;\n          return e = t.tagName.toLowerCase(), \"script\" === e;\n        }, n = function (t) {\n          var e;\n          return e = t.tagName.toLowerCase(), \"style\" === e || \"link\" === e && \"stylesheet\" === t.getAttribute(\"rel\");\n        }, e = function (t, e) {\n          var r;\n          return r = t.tagName.toLowerCase(), \"meta\" === r && t.getAttribute(\"name\") === e;\n        }, t;\n      }();\n    }.call(this), function () {\n      e.Snapshot = function () {\n        function t(t, e) {\n          this.headDetails = t, this.bodyElement = e;\n        }\n        return t.wrap = function (t) {\n          return t instanceof this ? t : \"string\" == typeof t ? this.fromHTMLString(t) : this.fromHTMLElement(t);\n        }, t.fromHTMLString = function (t) {\n          var e;\n          return e = document.createElement(\"html\"), e.innerHTML = t, this.fromHTMLElement(e);\n        }, t.fromHTMLElement = function (t) {\n          var r, n, o, i;\n          return o = t.querySelector(\"head\"), r = null != (i = t.querySelector(\"body\")) ? i : document.createElement(\"body\"), n = e.HeadDetails.fromHeadElement(o), new this(n, r);\n        }, t.prototype.clone = function () {\n          return new this.constructor(this.headDetails, this.bodyElement.cloneNode(!0));\n        }, t.prototype.getRootLocation = function () {\n          var t, r;\n          return r = null != (t = this.getSetting(\"root\")) ? t : \"/\", new e.Location(r);\n        }, t.prototype.getCacheControlValue = function () {\n          return this.getSetting(\"cache-control\");\n        }, t.prototype.getElementForAnchor = function (t) {\n          try {\n            return this.bodyElement.querySelector(\"[id='\" + t + \"'], a[name='\" + t + \"']\");\n          } catch (e) {}\n        }, t.prototype.getPermanentElements = function () {\n          return this.bodyElement.querySelectorAll(\"[id][data-turbolinks-permanent]\");\n        }, t.prototype.getPermanentElementById = function (t) {\n          return this.bodyElement.querySelector(\"#\" + t + \"[data-turbolinks-permanent]\");\n        }, t.prototype.getPermanentElementsPresentInSnapshot = function (t) {\n          var e, r, n, o, i;\n          for (o = this.getPermanentElements(), i = [], r = 0, n = o.length; n > r; r++) e = o[r], t.getPermanentElementById(e.id) && i.push(e);\n          return i;\n        }, t.prototype.findFirstAutofocusableElement = function () {\n          return this.bodyElement.querySelector(\"[autofocus]\");\n        }, t.prototype.hasAnchor = function (t) {\n          return null != this.getElementForAnchor(t);\n        }, t.prototype.isPreviewable = function () {\n          return \"no-preview\" !== this.getCacheControlValue();\n        }, t.prototype.isCacheable = function () {\n          return \"no-cache\" !== this.getCacheControlValue();\n        }, t.prototype.isVisitable = function () {\n          return \"reload\" !== this.getSetting(\"visit-control\");\n        }, t.prototype.getSetting = function (t) {\n          return this.headDetails.getMetaValue(\"turbolinks-\" + t);\n        }, t;\n      }();\n    }.call(this), function () {\n      var t = [].slice;\n      e.Renderer = function () {\n        function e() {}\n        var r;\n        return e.render = function () {\n          var e, r, n, o;\n          return n = arguments[0], r = arguments[1], e = 3 <= arguments.length ? t.call(arguments, 2) : [], o = function (t, e, r) {\n            r.prototype = t.prototype;\n            var n = new r(),\n              o = t.apply(n, e);\n            return Object(o) === o ? o : n;\n          }(this, e, function () {}), o.delegate = n, o.render(r), o;\n        }, e.prototype.renderView = function (t) {\n          return this.delegate.viewWillRender(this.newBody), t(), this.delegate.viewRendered(this.newBody);\n        }, e.prototype.invalidateView = function () {\n          return this.delegate.viewInvalidated();\n        }, e.prototype.createScriptElement = function (t) {\n          var e;\n          return \"false\" === t.getAttribute(\"data-turbolinks-eval\") ? t : (e = document.createElement(\"script\"), e.textContent = t.textContent, e.async = !1, r(e, t), e);\n        }, r = function (t, e) {\n          var r, n, o, i, s, a, u;\n          for (i = e.attributes, a = [], r = 0, n = i.length; n > r; r++) s = i[r], o = s.name, u = s.value, a.push(t.setAttribute(o, u));\n          return a;\n        }, e;\n      }();\n    }.call(this), function () {\n      var t,\n        r,\n        n = function (t, e) {\n          function r() {\n            this.constructor = t;\n          }\n          for (var n in e) o.call(e, n) && (t[n] = e[n]);\n          return r.prototype = e.prototype, t.prototype = new r(), t.__super__ = e.prototype, t;\n        },\n        o = {}.hasOwnProperty;\n      e.SnapshotRenderer = function (e) {\n        function o(t, e, r) {\n          this.currentSnapshot = t, this.newSnapshot = e, this.isPreview = r, this.currentHeadDetails = this.currentSnapshot.headDetails, this.newHeadDetails = this.newSnapshot.headDetails, this.currentBody = this.currentSnapshot.bodyElement, this.newBody = this.newSnapshot.bodyElement;\n        }\n        return n(o, e), o.prototype.render = function (t) {\n          return this.shouldRender() ? (this.mergeHead(), this.renderView(function (e) {\n            return function () {\n              return e.replaceBody(), e.isPreview || e.focusFirstAutofocusableElement(), t();\n            };\n          }(this))) : this.invalidateView();\n        }, o.prototype.mergeHead = function () {\n          return this.copyNewHeadStylesheetElements(), this.copyNewHeadScriptElements(), this.removeCurrentHeadProvisionalElements(), this.copyNewHeadProvisionalElements();\n        }, o.prototype.replaceBody = function () {\n          var t;\n          return t = this.relocateCurrentBodyPermanentElements(), this.activateNewBodyScriptElements(), this.assignNewBody(), this.replacePlaceholderElementsWithClonedPermanentElements(t);\n        }, o.prototype.shouldRender = function () {\n          return this.newSnapshot.isVisitable() && this.trackedElementsAreIdentical();\n        }, o.prototype.trackedElementsAreIdentical = function () {\n          return this.currentHeadDetails.getTrackedElementSignature() === this.newHeadDetails.getTrackedElementSignature();\n        }, o.prototype.copyNewHeadStylesheetElements = function () {\n          var t, e, r, n, o;\n          for (n = this.getNewHeadStylesheetElements(), o = [], e = 0, r = n.length; r > e; e++) t = n[e], o.push(document.head.appendChild(t));\n          return o;\n        }, o.prototype.copyNewHeadScriptElements = function () {\n          var t, e, r, n, o;\n          for (n = this.getNewHeadScriptElements(), o = [], e = 0, r = n.length; r > e; e++) t = n[e], o.push(document.head.appendChild(this.createScriptElement(t)));\n          return o;\n        }, o.prototype.removeCurrentHeadProvisionalElements = function () {\n          var t, e, r, n, o;\n          for (n = this.getCurrentHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) t = n[e], o.push(document.head.removeChild(t));\n          return o;\n        }, o.prototype.copyNewHeadProvisionalElements = function () {\n          var t, e, r, n, o;\n          for (n = this.getNewHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) t = n[e], o.push(document.head.appendChild(t));\n          return o;\n        }, o.prototype.relocateCurrentBodyPermanentElements = function () {\n          var e, n, o, i, s, a, u;\n          for (a = this.getCurrentBodyPermanentElements(), u = [], e = 0, n = a.length; n > e; e++) i = a[e], s = t(i), o = this.newSnapshot.getPermanentElementById(i.id), r(i, s.element), r(o, i), u.push(s);\n          return u;\n        }, o.prototype.replacePlaceholderElementsWithClonedPermanentElements = function (t) {\n          var e, n, o, i, s, a, u;\n          for (u = [], o = 0, i = t.length; i > o; o++) a = t[o], n = a.element, s = a.permanentElement, e = s.cloneNode(!0), u.push(r(n, e));\n          return u;\n        }, o.prototype.activateNewBodyScriptElements = function () {\n          var t, e, n, o, i, s;\n          for (i = this.getNewBodyScriptElements(), s = [], e = 0, o = i.length; o > e; e++) n = i[e], t = this.createScriptElement(n), s.push(r(n, t));\n          return s;\n        }, o.prototype.assignNewBody = function () {\n          return document.body = this.newBody;\n        }, o.prototype.focusFirstAutofocusableElement = function () {\n          var t;\n          return null != (t = this.newSnapshot.findFirstAutofocusableElement()) ? t.focus() : void 0;\n        }, o.prototype.getNewHeadStylesheetElements = function () {\n          return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails);\n        }, o.prototype.getNewHeadScriptElements = function () {\n          return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails);\n        }, o.prototype.getCurrentHeadProvisionalElements = function () {\n          return this.currentHeadDetails.getProvisionalElements();\n        }, o.prototype.getNewHeadProvisionalElements = function () {\n          return this.newHeadDetails.getProvisionalElements();\n        }, o.prototype.getCurrentBodyPermanentElements = function () {\n          return this.currentSnapshot.getPermanentElementsPresentInSnapshot(this.newSnapshot);\n        }, o.prototype.getNewBodyScriptElements = function () {\n          return this.newBody.querySelectorAll(\"script\");\n        }, o;\n      }(e.Renderer), t = function (t) {\n        var e;\n        return e = document.createElement(\"meta\"), e.setAttribute(\"name\", \"turbolinks-permanent-placeholder\"), e.setAttribute(\"content\", t.id), {\n          element: e,\n          permanentElement: t\n        };\n      }, r = function (t, e) {\n        var r;\n        return (r = t.parentNode) ? r.replaceChild(e, t) : void 0;\n      };\n    }.call(this), function () {\n      var t = function (t, e) {\n          function n() {\n            this.constructor = t;\n          }\n          for (var o in e) r.call(e, o) && (t[o] = e[o]);\n          return n.prototype = e.prototype, t.prototype = new n(), t.__super__ = e.prototype, t;\n        },\n        r = {}.hasOwnProperty;\n      e.ErrorRenderer = function (e) {\n        function r(t) {\n          var e;\n          e = document.createElement(\"html\"), e.innerHTML = t, this.newHead = e.querySelector(\"head\"), this.newBody = e.querySelector(\"body\");\n        }\n        return t(r, e), r.prototype.render = function (t) {\n          return this.renderView(function (e) {\n            return function () {\n              return e.replaceHeadAndBody(), e.activateBodyScriptElements(), t();\n            };\n          }(this));\n        }, r.prototype.replaceHeadAndBody = function () {\n          var t, e;\n          return e = document.head, t = document.body, e.parentNode.replaceChild(this.newHead, e), t.parentNode.replaceChild(this.newBody, t);\n        }, r.prototype.activateBodyScriptElements = function () {\n          var t, e, r, n, o, i;\n          for (n = this.getScriptElements(), i = [], e = 0, r = n.length; r > e; e++) o = n[e], t = this.createScriptElement(o), i.push(o.parentNode.replaceChild(t, o));\n          return i;\n        }, r.prototype.getScriptElements = function () {\n          return document.documentElement.querySelectorAll(\"script\");\n        }, r;\n      }(e.Renderer);\n    }.call(this), function () {\n      e.View = function () {\n        function t(t) {\n          this.delegate = t, this.htmlElement = document.documentElement;\n        }\n        return t.prototype.getRootLocation = function () {\n          return this.getSnapshot().getRootLocation();\n        }, t.prototype.getElementForAnchor = function (t) {\n          return this.getSnapshot().getElementForAnchor(t);\n        }, t.prototype.getSnapshot = function () {\n          return e.Snapshot.fromHTMLElement(this.htmlElement);\n        }, t.prototype.render = function (t, e) {\n          var r, n, o;\n          return o = t.snapshot, r = t.error, n = t.isPreview, this.markAsPreview(n), null != o ? this.renderSnapshot(o, n, e) : this.renderError(r, e);\n        }, t.prototype.markAsPreview = function (t) {\n          return t ? this.htmlElement.setAttribute(\"data-turbolinks-preview\", \"\") : this.htmlElement.removeAttribute(\"data-turbolinks-preview\");\n        }, t.prototype.renderSnapshot = function (t, r, n) {\n          return e.SnapshotRenderer.render(this.delegate, n, this.getSnapshot(), e.Snapshot.wrap(t), r);\n        }, t.prototype.renderError = function (t, r) {\n          return e.ErrorRenderer.render(this.delegate, r, t);\n        }, t;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.ScrollManager = function () {\n        function r(r) {\n          this.delegate = r, this.onScroll = t(this.onScroll, this), this.onScroll = e.throttle(this.onScroll);\n        }\n        return r.prototype.start = function () {\n          return this.started ? void 0 : (addEventListener(\"scroll\", this.onScroll, !1), this.onScroll(), this.started = !0);\n        }, r.prototype.stop = function () {\n          return this.started ? (removeEventListener(\"scroll\", this.onScroll, !1), this.started = !1) : void 0;\n        }, r.prototype.scrollToElement = function (t) {\n          return t.scrollIntoView();\n        }, r.prototype.scrollToPosition = function (t) {\n          var e, r;\n          return e = t.x, r = t.y, window.scrollTo(e, r);\n        }, r.prototype.onScroll = function (t) {\n          return this.updatePosition({\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          });\n        }, r.prototype.updatePosition = function (t) {\n          var e;\n          return this.position = t, null != (e = this.delegate) ? e.scrollPositionChanged(this.position) : void 0;\n        }, r;\n      }();\n    }.call(this), function () {\n      e.SnapshotCache = function () {\n        function t(t) {\n          this.size = t, this.keys = [], this.snapshots = {};\n        }\n        var r;\n        return t.prototype.has = function (t) {\n          var e;\n          return e = r(t), e in this.snapshots;\n        }, t.prototype.get = function (t) {\n          var e;\n          if (this.has(t)) return e = this.read(t), this.touch(t), e;\n        }, t.prototype.put = function (t, e) {\n          return this.write(t, e), this.touch(t), e;\n        }, t.prototype.read = function (t) {\n          var e;\n          return e = r(t), this.snapshots[e];\n        }, t.prototype.write = function (t, e) {\n          var n;\n          return n = r(t), this.snapshots[n] = e;\n        }, t.prototype.touch = function (t) {\n          var e, n;\n          return n = r(t), e = this.keys.indexOf(n), e > -1 && this.keys.splice(e, 1), this.keys.unshift(n), this.trim();\n        }, t.prototype.trim = function () {\n          var t, e, r, n, o;\n          for (n = this.keys.splice(this.size), o = [], t = 0, r = n.length; r > t; t++) e = n[t], o.push(delete this.snapshots[e]);\n          return o;\n        }, r = function (t) {\n          return e.Location.wrap(t).toCacheKey();\n        }, t;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.Visit = function () {\n        function r(r, n, o) {\n          this.controller = r, this.action = o, this.performScroll = t(this.performScroll, this), this.identifier = e.uuid(), this.location = e.Location.wrap(n), this.adapter = this.controller.adapter, this.state = \"initialized\", this.timingMetrics = {};\n        }\n        var n;\n        return r.prototype.start = function () {\n          return \"initialized\" === this.state ? (this.recordTimingMetric(\"visitStart\"), this.state = \"started\", this.adapter.visitStarted(this)) : void 0;\n        }, r.prototype.cancel = function () {\n          var t;\n          return \"started\" === this.state ? (null != (t = this.request) && t.cancel(), this.cancelRender(), this.state = \"canceled\") : void 0;\n        }, r.prototype.complete = function () {\n          var t;\n          return \"started\" === this.state ? (this.recordTimingMetric(\"visitEnd\"), this.state = \"completed\", \"function\" == typeof (t = this.adapter).visitCompleted && t.visitCompleted(this), this.controller.visitCompleted(this)) : void 0;\n        }, r.prototype.fail = function () {\n          var t;\n          return \"started\" === this.state ? (this.state = \"failed\", \"function\" == typeof (t = this.adapter).visitFailed ? t.visitFailed(this) : void 0) : void 0;\n        }, r.prototype.changeHistory = function () {\n          var t, e;\n          return this.historyChanged ? void 0 : (t = this.location.isEqualTo(this.referrer) ? \"replace\" : this.action, e = n(t), this.controller[e](this.location, this.restorationIdentifier), this.historyChanged = !0);\n        }, r.prototype.issueRequest = function () {\n          return this.shouldIssueRequest() && null == this.request ? (this.progress = 0, this.request = new e.HttpRequest(this, this.location, this.referrer), this.request.send()) : void 0;\n        }, r.prototype.getCachedSnapshot = function () {\n          var t;\n          return !(t = this.controller.getCachedSnapshotForLocation(this.location)) || null != this.location.anchor && !t.hasAnchor(this.location.anchor) || \"restore\" !== this.action && !t.isPreviewable() ? void 0 : t;\n        }, r.prototype.hasCachedSnapshot = function () {\n          return null != this.getCachedSnapshot();\n        }, r.prototype.loadCachedSnapshot = function () {\n          var t, e;\n          return (e = this.getCachedSnapshot()) ? (t = this.shouldIssueRequest(), this.render(function () {\n            var r;\n            return this.cacheSnapshot(), this.controller.render({\n              snapshot: e,\n              isPreview: t\n            }, this.performScroll), \"function\" == typeof (r = this.adapter).visitRendered && r.visitRendered(this), t ? void 0 : this.complete();\n          })) : void 0;\n        }, r.prototype.loadResponse = function () {\n          return null != this.response ? this.render(function () {\n            var t, e;\n            return this.cacheSnapshot(), this.request.failed ? (this.controller.render({\n              error: this.response\n            }, this.performScroll), \"function\" == typeof (t = this.adapter).visitRendered && t.visitRendered(this), this.fail()) : (this.controller.render({\n              snapshot: this.response\n            }, this.performScroll), \"function\" == typeof (e = this.adapter).visitRendered && e.visitRendered(this), this.complete());\n          }) : void 0;\n        }, r.prototype.followRedirect = function () {\n          return this.redirectedToLocation && !this.followedRedirect ? (this.location = this.redirectedToLocation, this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation, this.restorationIdentifier), this.followedRedirect = !0) : void 0;\n        }, r.prototype.requestStarted = function () {\n          var t;\n          return this.recordTimingMetric(\"requestStart\"), \"function\" == typeof (t = this.adapter).visitRequestStarted ? t.visitRequestStarted(this) : void 0;\n        }, r.prototype.requestProgressed = function (t) {\n          var e;\n          return this.progress = t, \"function\" == typeof (e = this.adapter).visitRequestProgressed ? e.visitRequestProgressed(this) : void 0;\n        }, r.prototype.requestCompletedWithResponse = function (t, r) {\n          return this.response = t, null != r && (this.redirectedToLocation = e.Location.wrap(r)), this.adapter.visitRequestCompleted(this);\n        }, r.prototype.requestFailedWithStatusCode = function (t, e) {\n          return this.response = e, this.adapter.visitRequestFailedWithStatusCode(this, t);\n        }, r.prototype.requestFinished = function () {\n          var t;\n          return this.recordTimingMetric(\"requestEnd\"), \"function\" == typeof (t = this.adapter).visitRequestFinished ? t.visitRequestFinished(this) : void 0;\n        }, r.prototype.performScroll = function () {\n          return this.scrolled ? void 0 : (\"restore\" === this.action ? this.scrollToRestoredPosition() || this.scrollToTop() : this.scrollToAnchor() || this.scrollToTop(), this.scrolled = !0);\n        }, r.prototype.scrollToRestoredPosition = function () {\n          var t, e;\n          return t = null != (e = this.restorationData) ? e.scrollPosition : void 0, null != t ? (this.controller.scrollToPosition(t), !0) : void 0;\n        }, r.prototype.scrollToAnchor = function () {\n          return null != this.location.anchor ? (this.controller.scrollToAnchor(this.location.anchor), !0) : void 0;\n        }, r.prototype.scrollToTop = function () {\n          return this.controller.scrollToPosition({\n            x: 0,\n            y: 0\n          });\n        }, r.prototype.recordTimingMetric = function (t) {\n          var e;\n          return null != (e = this.timingMetrics)[t] ? e[t] : e[t] = new Date().getTime();\n        }, r.prototype.getTimingMetrics = function () {\n          return e.copyObject(this.timingMetrics);\n        }, n = function (t) {\n          switch (t) {\n            case \"replace\":\n              return \"replaceHistoryWithLocationAndRestorationIdentifier\";\n            case \"advance\":\n            case \"restore\":\n              return \"pushHistoryWithLocationAndRestorationIdentifier\";\n          }\n        }, r.prototype.shouldIssueRequest = function () {\n          return \"restore\" === this.action ? !this.hasCachedSnapshot() : !0;\n        }, r.prototype.cacheSnapshot = function () {\n          return this.snapshotCached ? void 0 : (this.controller.cacheSnapshot(), this.snapshotCached = !0);\n        }, r.prototype.render = function (t) {\n          return this.cancelRender(), this.frame = requestAnimationFrame(function (e) {\n            return function () {\n              return e.frame = null, t.call(e);\n            };\n          }(this));\n        }, r.prototype.cancelRender = function () {\n          return this.frame ? cancelAnimationFrame(this.frame) : void 0;\n        }, r;\n      }();\n    }.call(this), function () {\n      var t = function (t, e) {\n        return function () {\n          return t.apply(e, arguments);\n        };\n      };\n      e.Controller = function () {\n        function r() {\n          this.clickBubbled = t(this.clickBubbled, this), this.clickCaptured = t(this.clickCaptured, this), this.pageLoaded = t(this.pageLoaded, this), this.history = new e.History(this), this.view = new e.View(this), this.scrollManager = new e.ScrollManager(this), this.restorationData = {}, this.clearCache(), this.setProgressBarDelay(500);\n        }\n        return r.prototype.start = function () {\n          return e.supported && !this.started ? (addEventListener(\"click\", this.clickCaptured, !0), addEventListener(\"DOMContentLoaded\", this.pageLoaded, !1), this.scrollManager.start(), this.startHistory(), this.started = !0, this.enabled = !0) : void 0;\n        }, r.prototype.disable = function () {\n          return this.enabled = !1;\n        }, r.prototype.stop = function () {\n          return this.started ? (removeEventListener(\"click\", this.clickCaptured, !0), removeEventListener(\"DOMContentLoaded\", this.pageLoaded, !1), this.scrollManager.stop(), this.stopHistory(), this.started = !1) : void 0;\n        }, r.prototype.clearCache = function () {\n          return this.cache = new e.SnapshotCache(10);\n        }, r.prototype.visit = function (t, r) {\n          var n, o;\n          return null == r && (r = {}), t = e.Location.wrap(t), this.applicationAllowsVisitingLocation(t) ? this.locationIsVisitable(t) ? (n = null != (o = r.action) ? o : \"advance\", this.adapter.visitProposedToLocationWithAction(t, n)) : window.location = t : void 0;\n        }, r.prototype.startVisitToLocationWithAction = function (t, r, n) {\n          var o;\n          return e.supported ? (o = this.getRestorationDataForIdentifier(n), this.startVisit(t, r, {\n            restorationData: o\n          })) : window.location = t;\n        }, r.prototype.setProgressBarDelay = function (t) {\n          return this.progressBarDelay = t;\n        }, r.prototype.startHistory = function () {\n          return this.location = e.Location.wrap(window.location), this.restorationIdentifier = e.uuid(), this.history.start(), this.history.replace(this.location, this.restorationIdentifier);\n        }, r.prototype.stopHistory = function () {\n          return this.history.stop();\n        }, r.prototype.pushHistoryWithLocationAndRestorationIdentifier = function (t, r) {\n          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.push(this.location, this.restorationIdentifier);\n        }, r.prototype.replaceHistoryWithLocationAndRestorationIdentifier = function (t, r) {\n          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.replace(this.location, this.restorationIdentifier);\n        }, r.prototype.historyPoppedToLocationWithRestorationIdentifier = function (t, r) {\n          var n;\n          return this.restorationIdentifier = r, this.enabled ? (n = this.getRestorationDataForIdentifier(this.restorationIdentifier), this.startVisit(t, \"restore\", {\n            restorationIdentifier: this.restorationIdentifier,\n            restorationData: n,\n            historyChanged: !0\n          }), this.location = e.Location.wrap(t)) : this.adapter.pageInvalidated();\n        }, r.prototype.getCachedSnapshotForLocation = function (t) {\n          var e;\n          return null != (e = this.cache.get(t)) ? e.clone() : void 0;\n        }, r.prototype.shouldCacheSnapshot = function () {\n          return this.view.getSnapshot().isCacheable();\n        }, r.prototype.cacheSnapshot = function () {\n          var t, r;\n          return this.shouldCacheSnapshot() ? (this.notifyApplicationBeforeCachingSnapshot(), r = this.view.getSnapshot(), t = this.lastRenderedLocation, e.defer(function (e) {\n            return function () {\n              return e.cache.put(t, r.clone());\n            };\n          }(this))) : void 0;\n        }, r.prototype.scrollToAnchor = function (t) {\n          var e;\n          return (e = this.view.getElementForAnchor(t)) ? this.scrollToElement(e) : this.scrollToPosition({\n            x: 0,\n            y: 0\n          });\n        }, r.prototype.scrollToElement = function (t) {\n          return this.scrollManager.scrollToElement(t);\n        }, r.prototype.scrollToPosition = function (t) {\n          return this.scrollManager.scrollToPosition(t);\n        }, r.prototype.scrollPositionChanged = function (t) {\n          var e;\n          return e = this.getCurrentRestorationData(), e.scrollPosition = t;\n        }, r.prototype.render = function (t, e) {\n          return this.view.render(t, e);\n        }, r.prototype.viewInvalidated = function () {\n          return this.adapter.pageInvalidated();\n        }, r.prototype.viewWillRender = function (t) {\n          return this.notifyApplicationBeforeRender(t);\n        }, r.prototype.viewRendered = function () {\n          return this.lastRenderedLocation = this.currentVisit.location, this.notifyApplicationAfterRender();\n        }, r.prototype.pageLoaded = function () {\n          return this.lastRenderedLocation = this.location, this.notifyApplicationAfterPageLoad();\n        }, r.prototype.clickCaptured = function () {\n          return removeEventListener(\"click\", this.clickBubbled, !1), addEventListener(\"click\", this.clickBubbled, !1);\n        }, r.prototype.clickBubbled = function (t) {\n          var e, r, n;\n          return this.enabled && this.clickEventIsSignificant(t) && (r = this.getVisitableLinkForNode(t.target)) && (n = this.getVisitableLocationForLink(r)) && this.applicationAllowsFollowingLinkToLocation(r, n) ? (t.preventDefault(), e = this.getActionForLink(r), this.visit(n, {\n            action: e\n          })) : void 0;\n        }, r.prototype.applicationAllowsFollowingLinkToLocation = function (t, e) {\n          var r;\n          return r = this.notifyApplicationAfterClickingLinkToLocation(t, e), !r.defaultPrevented;\n        }, r.prototype.applicationAllowsVisitingLocation = function (t) {\n          var e;\n          return e = this.notifyApplicationBeforeVisitingLocation(t), !e.defaultPrevented;\n        }, r.prototype.notifyApplicationAfterClickingLinkToLocation = function (t, r) {\n          return e.dispatch(\"turbolinks:click\", {\n            target: t,\n            data: {\n              url: r.absoluteURL\n            },\n            cancelable: !0\n          });\n        }, r.prototype.notifyApplicationBeforeVisitingLocation = function (t) {\n          return e.dispatch(\"turbolinks:before-visit\", {\n            data: {\n              url: t.absoluteURL\n            },\n            cancelable: !0\n          });\n        }, r.prototype.notifyApplicationAfterVisitingLocation = function (t) {\n          return e.dispatch(\"turbolinks:visit\", {\n            data: {\n              url: t.absoluteURL\n            }\n          });\n        }, r.prototype.notifyApplicationBeforeCachingSnapshot = function () {\n          return e.dispatch(\"turbolinks:before-cache\");\n        }, r.prototype.notifyApplicationBeforeRender = function (t) {\n          return e.dispatch(\"turbolinks:before-render\", {\n            data: {\n              newBody: t\n            }\n          });\n        }, r.prototype.notifyApplicationAfterRender = function () {\n          return e.dispatch(\"turbolinks:render\");\n        }, r.prototype.notifyApplicationAfterPageLoad = function (t) {\n          return null == t && (t = {}), e.dispatch(\"turbolinks:load\", {\n            data: {\n              url: this.location.absoluteURL,\n              timing: t\n            }\n          });\n        }, r.prototype.startVisit = function (t, e, r) {\n          var n;\n          return null != (n = this.currentVisit) && n.cancel(), this.currentVisit = this.createVisit(t, e, r), this.currentVisit.start(), this.notifyApplicationAfterVisitingLocation(t);\n        }, r.prototype.createVisit = function (t, r, n) {\n          var o, i, s, a, u;\n          return i = null != n ? n : {}, a = i.restorationIdentifier, s = i.restorationData, o = i.historyChanged, u = new e.Visit(this, t, r), u.restorationIdentifier = null != a ? a : e.uuid(), u.restorationData = e.copyObject(s), u.historyChanged = o, u.referrer = this.location, u;\n        }, r.prototype.visitCompleted = function (t) {\n          return this.notifyApplicationAfterPageLoad(t.getTimingMetrics());\n        }, r.prototype.clickEventIsSignificant = function (t) {\n          return !(t.defaultPrevented || t.target.isContentEditable || t.which > 1 || t.altKey || t.ctrlKey || t.metaKey || t.shiftKey);\n        }, r.prototype.getVisitableLinkForNode = function (t) {\n          return this.nodeIsVisitable(t) ? e.closest(t, \"a[href]:not([target]):not([download])\") : void 0;\n        }, r.prototype.getVisitableLocationForLink = function (t) {\n          var r;\n          return r = new e.Location(t.getAttribute(\"href\")), this.locationIsVisitable(r) ? r : void 0;\n        }, r.prototype.getActionForLink = function (t) {\n          var e;\n          return null != (e = t.getAttribute(\"data-turbolinks-action\")) ? e : \"advance\";\n        }, r.prototype.nodeIsVisitable = function (t) {\n          var r;\n          return (r = e.closest(t, \"[data-turbolinks]\")) ? \"false\" !== r.getAttribute(\"data-turbolinks\") : !0;\n        }, r.prototype.locationIsVisitable = function (t) {\n          return t.isPrefixedBy(this.view.getRootLocation()) && t.isHTML();\n        }, r.prototype.getCurrentRestorationData = function () {\n          return this.getRestorationDataForIdentifier(this.restorationIdentifier);\n        }, r.prototype.getRestorationDataForIdentifier = function (t) {\n          var e;\n          return null != (e = this.restorationData)[t] ? e[t] : e[t] = {};\n        }, r;\n      }();\n    }.call(this), function () {\n      !function () {\n        var t, e;\n        if ((t = e = document.currentScript) && !e.hasAttribute(\"data-turbolinks-suppress-warning\")) for (; t = t.parentNode;) if (t === document.body) return console.warn(\"You are loading Turbolinks from a <script> element inside the <body> element. This is probably not what you meant to do!\\n\\nLoad your application\\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\\n\\nFor more information, see: https://github.com/turbolinks/turbolinks#working-with-script-elements\\n\\n\\u2014\\u2014\\nSuppress this warning by adding a `data-turbolinks-suppress-warning` attribute to: %s\", e.outerHTML);\n      }();\n    }.call(this), function () {\n      var t, r, n;\n      e.start = function () {\n        return r() ? (null == e.controller && (e.controller = t()), e.controller.start()) : void 0;\n      }, r = function () {\n        return null == window.Turbolinks && (window.Turbolinks = e), n();\n      }, t = function () {\n        var t;\n        return t = new e.Controller(), t.adapter = new e.BrowserAdapter(t), t;\n      }, n = function () {\n        return window.Turbolinks === e;\n      }, n() && e.start();\n    }.call(this);\n  }).call(this), \"object\" == typeof module && module.exports ? module.exports = e : \"function\" == typeof define && define.amd && define(e);\n}).call(this);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAAA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAmBA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAAA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAUA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AArHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AArEA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAxIA;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;;;;;;;;;;;;ACthptpstyhplksourceRoot":""}